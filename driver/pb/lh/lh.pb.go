// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lh/lh.proto

/*
Package lh is a generated protocol buffer package.

It is generated from these files:
	lh/lh.proto

It has these top-level messages:
	MapMessage
	AnyMessage
	GetCapabilitiesRequest
	GetCapabilitiesReply
	LoadTipsRequest
	LoadTipsReply
	RemoveAllPlatesRequest
	RemoveAllPlatesReply
	UnloadTipsRequest
	UnloadTipsReply
	WaitRequest
	WaitReply
	FinalizeRequest
	FinalizeReply
	LoadHeadRequest
	LoadHeadReply
	UpdateMetaDataRequest
	UpdateMetaDataReply
	LightsOnRequest
	LightsOnReply
	DispenseRequest
	DispenseReply
	GetPositionStateRequest
	GetPositionStateReply
	InitializeRequest
	InitializeReply
	RemovePlateAtRequest
	RemovePlateAtReply
	SetPipetteSpeedRequest
	SetPipetteSpeedReply
	AspirateRequest
	AspirateReply
	MessageRequest
	MessageReply
	MixRequest
	MixReply
	OpenRequest
	OpenReply
	SetPositionStateRequest
	SetPositionStateReply
	UnloadHeadRequest
	UnloadHeadReply
	LoadAdaptorRequest
	LoadAdaptorReply
	GetCurrentPositionRequest
	GetCurrentPositionReply
	ResetPistonsRequest
	ResetPistonsReply
	SetDriveSpeedRequest
	SetDriveSpeedReply
	AddPlateToRequest
	AddPlateToReply
	LightsOffRequest
	LightsOffReply
	MoveRequest
	MoveReply
	MoveRawRequest
	MoveRawReply
	StopRequest
	StopReply
	GoRequest
	GoReply
	GetHeadStateRequest
	GetHeadStateReply
	GetOutputFileRequest
	GetOutputFileReply
	GetStatusRequest
	GetStatusReply
	UnloadAdaptorRequest
	UnloadAdaptorReply
	CloseRequest
	CloseReply
	ArrayOfint64
	ArrayOfdouble
	ArrayOfbool
	CommandStatusMessage
	ArrayOfstring
	PtrToLHPropertiesMessage
	MapstringAnyMessageMessageFieldEntry
	MapstringAnyMessageMessage
	LHPropertiesMessage
	ArrayOfPtrToLHHeadMessage
	MapstringPtrToLHPositionMessageMessageFieldEntry
	MapstringPtrToLHPositionMessageMessage
	MapstringPtrToLHPlateMessageMessageFieldEntry
	MapstringPtrToLHPlateMessageMessage
	PtrToLHAdaptorMessage
	PtrToLHTipMessage
	LHChannelParameterMessage
	LHTipboxMessage
	MapstringPtrToLHTipwasteMessageMessageFieldEntry
	MapstringPtrToLHTipwasteMessageMessage
	PtrToLHChannelParameterMessage
	PtrToLHTipwasteMessage
	MapstringPtrToLHTipboxMessageMessageFieldEntry
	MapstringPtrToLHTipboxMessageMessage
	LHAdaptorMessage
	MapstringCoordinatesMessageMessageFieldEntry
	MapstringCoordinatesMessageMessage
	PtrToLHPositionMessage
	LHPositionMessage
	LHPlateMessage
	ArrayOfPtrToLHTipMessage
	ArrayOfPtrToLHChannelParameterMessage
	CoordinatesMessage
	MapstringstringMessageFieldEntry
	MapstringstringMessage
	PtrToLHPlateMessage
	LHTipwasteMessage
	LHHeadMessage
	TipLoadingBehaviourMessage
	LHHeadAssemblyPositionMessage
	PtrToLHHeadAssemblyPositionMessage
	ArrayOfPtrToLHHeadAssemblyPositionMessage
	LHHeadAssemblyMessage
	PtrToLHHeadAssemblyMessage
	ArrayOfPtrToLHHeadAssembliesMessage
	ArrayOfPtrToLHAdaptorMessage
	PtrToLHHeadMessage
	PtrToLHTipboxMessage
	VolumeMessage
	ConcentrationMessage
	FlowRateMessage
	ArrayOfArrayOfPtrToLHTipMessage
	LHTipMessage
	LHDeviceMessage
	ArrayOfArrayOfPtrToLHWellMessage
	LHWellMessage
	ArrayOfLHDeviceMessage
	PtrToLHWellMessage
	BBoxMessage
	PtrToBBoxMessage
	ArrayOfPtrToLHWellMessage
	MapstringPtrToLHWellMessageMessageFieldEntry
	MapstringPtrToLHWellMessageMessage
	WellCoordsMessage
	PtrToLHComponentMessage
	ShapeMessage
	PtrToShapeMessage
	ConcreteMeasurementMessage
	PtrToConcreteMeasurementMessage
	LHComponentMessage
	PtrToUnitMessage
	UnitMessage
	BlockIDMessage
	TransferRequest
	TransferReply
	SubComponentMessage
	VelocityMessage
	Velocity3DMessage
	PtrToVelocity3DMessage
	VelocityRangeMessage
	PtrToVelocityRangeMessage
*/
package lh

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MapMessage struct {
	MapField map[string]string `protobuf:"bytes,1,rep,name=map_field,json=mapField" json:"map_field,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *MapMessage) Reset()                    { *m = MapMessage{} }
func (m *MapMessage) String() string            { return proto.CompactTextString(m) }
func (*MapMessage) ProtoMessage()               {}
func (*MapMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MapMessage) GetMapField() map[string]string {
	if m != nil {
		return m.MapField
	}
	return nil
}

type AnyMessage struct {
	Arg_1 string `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
}

func (m *AnyMessage) Reset()                    { *m = AnyMessage{} }
func (m *AnyMessage) String() string            { return proto.CompactTextString(m) }
func (*AnyMessage) ProtoMessage()               {}
func (*AnyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AnyMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

type GetCapabilitiesRequest struct {
}

func (m *GetCapabilitiesRequest) Reset()                    { *m = GetCapabilitiesRequest{} }
func (m *GetCapabilitiesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCapabilitiesRequest) ProtoMessage()               {}
func (*GetCapabilitiesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetCapabilitiesReply struct {
	Ret_1 *LHPropertiesMessage  `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
	Ret_2 *CommandStatusMessage `protobuf:"bytes,2,opt,name=Ret_2,json=Ret2" json:"Ret_2,omitempty"`
}

func (m *GetCapabilitiesReply) Reset()                    { *m = GetCapabilitiesReply{} }
func (m *GetCapabilitiesReply) String() string            { return proto.CompactTextString(m) }
func (*GetCapabilitiesReply) ProtoMessage()               {}
func (*GetCapabilitiesReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetCapabilitiesReply) GetRet_1() *LHPropertiesMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

func (m *GetCapabilitiesReply) GetRet_2() *CommandStatusMessage {
	if m != nil {
		return m.Ret_2
	}
	return nil
}

type LoadTipsRequest struct {
	Arg_1 *ArrayOfint64  `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 int64          `protobuf:"varint,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
	Arg_3 int64          `protobuf:"varint,3,opt,name=arg_3,json=arg3" json:"arg_3,omitempty"`
	Arg_4 *ArrayOfstring `protobuf:"bytes,4,opt,name=arg_4,json=arg4" json:"arg_4,omitempty"`
	Arg_5 *ArrayOfstring `protobuf:"bytes,5,opt,name=arg_5,json=arg5" json:"arg_5,omitempty"`
	Arg_6 *ArrayOfstring `protobuf:"bytes,6,opt,name=arg_6,json=arg6" json:"arg_6,omitempty"`
}

func (m *LoadTipsRequest) Reset()                    { *m = LoadTipsRequest{} }
func (m *LoadTipsRequest) String() string            { return proto.CompactTextString(m) }
func (*LoadTipsRequest) ProtoMessage()               {}
func (*LoadTipsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LoadTipsRequest) GetArg_1() *ArrayOfint64 {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

func (m *LoadTipsRequest) GetArg_2() int64 {
	if m != nil {
		return m.Arg_2
	}
	return 0
}

func (m *LoadTipsRequest) GetArg_3() int64 {
	if m != nil {
		return m.Arg_3
	}
	return 0
}

func (m *LoadTipsRequest) GetArg_4() *ArrayOfstring {
	if m != nil {
		return m.Arg_4
	}
	return nil
}

func (m *LoadTipsRequest) GetArg_5() *ArrayOfstring {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *LoadTipsRequest) GetArg_6() *ArrayOfstring {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

type LoadTipsReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *LoadTipsReply) Reset()                    { *m = LoadTipsReply{} }
func (m *LoadTipsReply) String() string            { return proto.CompactTextString(m) }
func (*LoadTipsReply) ProtoMessage()               {}
func (*LoadTipsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LoadTipsReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type RemoveAllPlatesRequest struct {
}

func (m *RemoveAllPlatesRequest) Reset()                    { *m = RemoveAllPlatesRequest{} }
func (m *RemoveAllPlatesRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveAllPlatesRequest) ProtoMessage()               {}
func (*RemoveAllPlatesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type RemoveAllPlatesReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *RemoveAllPlatesReply) Reset()                    { *m = RemoveAllPlatesReply{} }
func (m *RemoveAllPlatesReply) String() string            { return proto.CompactTextString(m) }
func (*RemoveAllPlatesReply) ProtoMessage()               {}
func (*RemoveAllPlatesReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RemoveAllPlatesReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type UnloadTipsRequest struct {
	Arg_1 *ArrayOfint64  `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 int64          `protobuf:"varint,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
	Arg_3 int64          `protobuf:"varint,3,opt,name=arg_3,json=arg3" json:"arg_3,omitempty"`
	Arg_4 *ArrayOfstring `protobuf:"bytes,4,opt,name=arg_4,json=arg4" json:"arg_4,omitempty"`
	Arg_5 *ArrayOfstring `protobuf:"bytes,5,opt,name=arg_5,json=arg5" json:"arg_5,omitempty"`
	Arg_6 *ArrayOfstring `protobuf:"bytes,6,opt,name=arg_6,json=arg6" json:"arg_6,omitempty"`
}

func (m *UnloadTipsRequest) Reset()                    { *m = UnloadTipsRequest{} }
func (m *UnloadTipsRequest) String() string            { return proto.CompactTextString(m) }
func (*UnloadTipsRequest) ProtoMessage()               {}
func (*UnloadTipsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UnloadTipsRequest) GetArg_1() *ArrayOfint64 {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

func (m *UnloadTipsRequest) GetArg_2() int64 {
	if m != nil {
		return m.Arg_2
	}
	return 0
}

func (m *UnloadTipsRequest) GetArg_3() int64 {
	if m != nil {
		return m.Arg_3
	}
	return 0
}

func (m *UnloadTipsRequest) GetArg_4() *ArrayOfstring {
	if m != nil {
		return m.Arg_4
	}
	return nil
}

func (m *UnloadTipsRequest) GetArg_5() *ArrayOfstring {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *UnloadTipsRequest) GetArg_6() *ArrayOfstring {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

type UnloadTipsReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *UnloadTipsReply) Reset()                    { *m = UnloadTipsReply{} }
func (m *UnloadTipsReply) String() string            { return proto.CompactTextString(m) }
func (*UnloadTipsReply) ProtoMessage()               {}
func (*UnloadTipsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UnloadTipsReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type WaitRequest struct {
	Arg_1 float64 `protobuf:"fixed64,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *WaitRequest) Reset()                    { *m = WaitRequest{} }
func (m *WaitRequest) String() string            { return proto.CompactTextString(m) }
func (*WaitRequest) ProtoMessage()               {}
func (*WaitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *WaitRequest) GetArg_1() float64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

type WaitReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *WaitReply) Reset()                    { *m = WaitReply{} }
func (m *WaitReply) String() string            { return proto.CompactTextString(m) }
func (*WaitReply) ProtoMessage()               {}
func (*WaitReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *WaitReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type FinalizeRequest struct {
}

func (m *FinalizeRequest) Reset()                    { *m = FinalizeRequest{} }
func (m *FinalizeRequest) String() string            { return proto.CompactTextString(m) }
func (*FinalizeRequest) ProtoMessage()               {}
func (*FinalizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type FinalizeReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *FinalizeReply) Reset()                    { *m = FinalizeReply{} }
func (m *FinalizeReply) String() string            { return proto.CompactTextString(m) }
func (*FinalizeReply) ProtoMessage()               {}
func (*FinalizeReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *FinalizeReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type LoadHeadRequest struct {
	Arg_1 int64 `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *LoadHeadRequest) Reset()                    { *m = LoadHeadRequest{} }
func (m *LoadHeadRequest) String() string            { return proto.CompactTextString(m) }
func (*LoadHeadRequest) ProtoMessage()               {}
func (*LoadHeadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *LoadHeadRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

type LoadHeadReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *LoadHeadReply) Reset()                    { *m = LoadHeadReply{} }
func (m *LoadHeadReply) String() string            { return proto.CompactTextString(m) }
func (*LoadHeadReply) ProtoMessage()               {}
func (*LoadHeadReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *LoadHeadReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type UpdateMetaDataRequest struct {
	Arg_1 *PtrToLHPropertiesMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *UpdateMetaDataRequest) Reset()                    { *m = UpdateMetaDataRequest{} }
func (m *UpdateMetaDataRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateMetaDataRequest) ProtoMessage()               {}
func (*UpdateMetaDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *UpdateMetaDataRequest) GetArg_1() *PtrToLHPropertiesMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type UpdateMetaDataReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *UpdateMetaDataReply) Reset()                    { *m = UpdateMetaDataReply{} }
func (m *UpdateMetaDataReply) String() string            { return proto.CompactTextString(m) }
func (*UpdateMetaDataReply) ProtoMessage()               {}
func (*UpdateMetaDataReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *UpdateMetaDataReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type LightsOnRequest struct {
}

func (m *LightsOnRequest) Reset()                    { *m = LightsOnRequest{} }
func (m *LightsOnRequest) String() string            { return proto.CompactTextString(m) }
func (*LightsOnRequest) ProtoMessage()               {}
func (*LightsOnRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type LightsOnReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *LightsOnReply) Reset()                    { *m = LightsOnReply{} }
func (m *LightsOnReply) String() string            { return proto.CompactTextString(m) }
func (*LightsOnReply) ProtoMessage()               {}
func (*LightsOnReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *LightsOnReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type DispenseRequest struct {
	Arg_1 *ArrayOfdouble `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 *ArrayOfbool   `protobuf:"bytes,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
	Arg_3 int64          `protobuf:"varint,3,opt,name=arg_3,json=arg3" json:"arg_3,omitempty"`
	Arg_4 int64          `protobuf:"varint,4,opt,name=arg_4,json=arg4" json:"arg_4,omitempty"`
	Arg_5 *ArrayOfstring `protobuf:"bytes,5,opt,name=arg_5,json=arg5" json:"arg_5,omitempty"`
	Arg_6 *ArrayOfstring `protobuf:"bytes,6,opt,name=arg_6,json=arg6" json:"arg_6,omitempty"`
	Arg_7 *ArrayOfbool   `protobuf:"bytes,7,opt,name=arg_7,json=arg7" json:"arg_7,omitempty"`
}

func (m *DispenseRequest) Reset()                    { *m = DispenseRequest{} }
func (m *DispenseRequest) String() string            { return proto.CompactTextString(m) }
func (*DispenseRequest) ProtoMessage()               {}
func (*DispenseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *DispenseRequest) GetArg_1() *ArrayOfdouble {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

func (m *DispenseRequest) GetArg_2() *ArrayOfbool {
	if m != nil {
		return m.Arg_2
	}
	return nil
}

func (m *DispenseRequest) GetArg_3() int64 {
	if m != nil {
		return m.Arg_3
	}
	return 0
}

func (m *DispenseRequest) GetArg_4() int64 {
	if m != nil {
		return m.Arg_4
	}
	return 0
}

func (m *DispenseRequest) GetArg_5() *ArrayOfstring {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *DispenseRequest) GetArg_6() *ArrayOfstring {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

func (m *DispenseRequest) GetArg_7() *ArrayOfbool {
	if m != nil {
		return m.Arg_7
	}
	return nil
}

type DispenseReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *DispenseReply) Reset()                    { *m = DispenseReply{} }
func (m *DispenseReply) String() string            { return proto.CompactTextString(m) }
func (*DispenseReply) ProtoMessage()               {}
func (*DispenseReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DispenseReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type GetPositionStateRequest struct {
	Arg_1 string `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *GetPositionStateRequest) Reset()                    { *m = GetPositionStateRequest{} }
func (m *GetPositionStateRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPositionStateRequest) ProtoMessage()               {}
func (*GetPositionStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *GetPositionStateRequest) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

type GetPositionStateReply struct {
	Ret_1 string                `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
	Ret_2 *CommandStatusMessage `protobuf:"bytes,2,opt,name=Ret_2,json=Ret2" json:"Ret_2,omitempty"`
}

func (m *GetPositionStateReply) Reset()                    { *m = GetPositionStateReply{} }
func (m *GetPositionStateReply) String() string            { return proto.CompactTextString(m) }
func (*GetPositionStateReply) ProtoMessage()               {}
func (*GetPositionStateReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *GetPositionStateReply) GetRet_1() string {
	if m != nil {
		return m.Ret_1
	}
	return ""
}

func (m *GetPositionStateReply) GetRet_2() *CommandStatusMessage {
	if m != nil {
		return m.Ret_2
	}
	return nil
}

type InitializeRequest struct {
}

func (m *InitializeRequest) Reset()                    { *m = InitializeRequest{} }
func (m *InitializeRequest) String() string            { return proto.CompactTextString(m) }
func (*InitializeRequest) ProtoMessage()               {}
func (*InitializeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type InitializeReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *InitializeReply) Reset()                    { *m = InitializeReply{} }
func (m *InitializeReply) String() string            { return proto.CompactTextString(m) }
func (*InitializeReply) ProtoMessage()               {}
func (*InitializeReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *InitializeReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type RemovePlateAtRequest struct {
	Arg_1 string `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *RemovePlateAtRequest) Reset()                    { *m = RemovePlateAtRequest{} }
func (m *RemovePlateAtRequest) String() string            { return proto.CompactTextString(m) }
func (*RemovePlateAtRequest) ProtoMessage()               {}
func (*RemovePlateAtRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *RemovePlateAtRequest) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

type RemovePlateAtReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *RemovePlateAtReply) Reset()                    { *m = RemovePlateAtReply{} }
func (m *RemovePlateAtReply) String() string            { return proto.CompactTextString(m) }
func (*RemovePlateAtReply) ProtoMessage()               {}
func (*RemovePlateAtReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *RemovePlateAtReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type SetPipetteSpeedRequest struct {
	Arg_1 int64   `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 int64   `protobuf:"varint,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
	Arg_3 float64 `protobuf:"fixed64,3,opt,name=arg_3,json=arg3" json:"arg_3,omitempty"`
}

func (m *SetPipetteSpeedRequest) Reset()                    { *m = SetPipetteSpeedRequest{} }
func (m *SetPipetteSpeedRequest) String() string            { return proto.CompactTextString(m) }
func (*SetPipetteSpeedRequest) ProtoMessage()               {}
func (*SetPipetteSpeedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *SetPipetteSpeedRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

func (m *SetPipetteSpeedRequest) GetArg_2() int64 {
	if m != nil {
		return m.Arg_2
	}
	return 0
}

func (m *SetPipetteSpeedRequest) GetArg_3() float64 {
	if m != nil {
		return m.Arg_3
	}
	return 0
}

type SetPipetteSpeedReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *SetPipetteSpeedReply) Reset()                    { *m = SetPipetteSpeedReply{} }
func (m *SetPipetteSpeedReply) String() string            { return proto.CompactTextString(m) }
func (*SetPipetteSpeedReply) ProtoMessage()               {}
func (*SetPipetteSpeedReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *SetPipetteSpeedReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type AspirateRequest struct {
	Arg_1 *ArrayOfdouble `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 *ArrayOfbool   `protobuf:"bytes,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
	Arg_3 int64          `protobuf:"varint,3,opt,name=arg_3,json=arg3" json:"arg_3,omitempty"`
	Arg_4 int64          `protobuf:"varint,4,opt,name=arg_4,json=arg4" json:"arg_4,omitempty"`
	Arg_5 *ArrayOfstring `protobuf:"bytes,5,opt,name=arg_5,json=arg5" json:"arg_5,omitempty"`
	Arg_6 *ArrayOfstring `protobuf:"bytes,6,opt,name=arg_6,json=arg6" json:"arg_6,omitempty"`
	Arg_7 *ArrayOfbool   `protobuf:"bytes,7,opt,name=arg_7,json=arg7" json:"arg_7,omitempty"`
}

func (m *AspirateRequest) Reset()                    { *m = AspirateRequest{} }
func (m *AspirateRequest) String() string            { return proto.CompactTextString(m) }
func (*AspirateRequest) ProtoMessage()               {}
func (*AspirateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *AspirateRequest) GetArg_1() *ArrayOfdouble {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

func (m *AspirateRequest) GetArg_2() *ArrayOfbool {
	if m != nil {
		return m.Arg_2
	}
	return nil
}

func (m *AspirateRequest) GetArg_3() int64 {
	if m != nil {
		return m.Arg_3
	}
	return 0
}

func (m *AspirateRequest) GetArg_4() int64 {
	if m != nil {
		return m.Arg_4
	}
	return 0
}

func (m *AspirateRequest) GetArg_5() *ArrayOfstring {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *AspirateRequest) GetArg_6() *ArrayOfstring {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

func (m *AspirateRequest) GetArg_7() *ArrayOfbool {
	if m != nil {
		return m.Arg_7
	}
	return nil
}

type AspirateReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *AspirateReply) Reset()                    { *m = AspirateReply{} }
func (m *AspirateReply) String() string            { return proto.CompactTextString(m) }
func (*AspirateReply) ProtoMessage()               {}
func (*AspirateReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *AspirateReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type MessageRequest struct {
	Arg_1 int64  `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 string `protobuf:"bytes,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
	Arg_3 string `protobuf:"bytes,3,opt,name=arg_3,json=arg3" json:"arg_3,omitempty"`
	Arg_4 bool   `protobuf:"varint,4,opt,name=arg_4,json=arg4" json:"arg_4,omitempty"`
}

func (m *MessageRequest) Reset()                    { *m = MessageRequest{} }
func (m *MessageRequest) String() string            { return proto.CompactTextString(m) }
func (*MessageRequest) ProtoMessage()               {}
func (*MessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *MessageRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

func (m *MessageRequest) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *MessageRequest) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

func (m *MessageRequest) GetArg_4() bool {
	if m != nil {
		return m.Arg_4
	}
	return false
}

type MessageReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *MessageReply) Reset()                    { *m = MessageReply{} }
func (m *MessageReply) String() string            { return proto.CompactTextString(m) }
func (*MessageReply) ProtoMessage()               {}
func (*MessageReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *MessageReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type MixRequest struct {
	Arg_1 int64          `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 *ArrayOfdouble `protobuf:"bytes,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
	Arg_3 *ArrayOfstring `protobuf:"bytes,3,opt,name=arg_3,json=arg3" json:"arg_3,omitempty"`
	Arg_4 *ArrayOfint64  `protobuf:"bytes,4,opt,name=arg_4,json=arg4" json:"arg_4,omitempty"`
	Arg_5 int64          `protobuf:"varint,5,opt,name=arg_5,json=arg5" json:"arg_5,omitempty"`
	Arg_6 *ArrayOfstring `protobuf:"bytes,6,opt,name=arg_6,json=arg6" json:"arg_6,omitempty"`
	Arg_7 *ArrayOfbool   `protobuf:"bytes,7,opt,name=arg_7,json=arg7" json:"arg_7,omitempty"`
}

func (m *MixRequest) Reset()                    { *m = MixRequest{} }
func (m *MixRequest) String() string            { return proto.CompactTextString(m) }
func (*MixRequest) ProtoMessage()               {}
func (*MixRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *MixRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

func (m *MixRequest) GetArg_2() *ArrayOfdouble {
	if m != nil {
		return m.Arg_2
	}
	return nil
}

func (m *MixRequest) GetArg_3() *ArrayOfstring {
	if m != nil {
		return m.Arg_3
	}
	return nil
}

func (m *MixRequest) GetArg_4() *ArrayOfint64 {
	if m != nil {
		return m.Arg_4
	}
	return nil
}

func (m *MixRequest) GetArg_5() int64 {
	if m != nil {
		return m.Arg_5
	}
	return 0
}

func (m *MixRequest) GetArg_6() *ArrayOfstring {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

func (m *MixRequest) GetArg_7() *ArrayOfbool {
	if m != nil {
		return m.Arg_7
	}
	return nil
}

type MixReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *MixReply) Reset()                    { *m = MixReply{} }
func (m *MixReply) String() string            { return proto.CompactTextString(m) }
func (*MixReply) ProtoMessage()               {}
func (*MixReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *MixReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type OpenRequest struct {
}

func (m *OpenRequest) Reset()                    { *m = OpenRequest{} }
func (m *OpenRequest) String() string            { return proto.CompactTextString(m) }
func (*OpenRequest) ProtoMessage()               {}
func (*OpenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

type OpenReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *OpenReply) Reset()                    { *m = OpenReply{} }
func (m *OpenReply) String() string            { return proto.CompactTextString(m) }
func (*OpenReply) ProtoMessage()               {}
func (*OpenReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *OpenReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type SetPositionStateRequest struct {
	Arg_1 string                      `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 *MapstringAnyMessageMessage `protobuf:"bytes,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
}

func (m *SetPositionStateRequest) Reset()                    { *m = SetPositionStateRequest{} }
func (m *SetPositionStateRequest) String() string            { return proto.CompactTextString(m) }
func (*SetPositionStateRequest) ProtoMessage()               {}
func (*SetPositionStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *SetPositionStateRequest) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *SetPositionStateRequest) GetArg_2() *MapstringAnyMessageMessage {
	if m != nil {
		return m.Arg_2
	}
	return nil
}

type SetPositionStateReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *SetPositionStateReply) Reset()                    { *m = SetPositionStateReply{} }
func (m *SetPositionStateReply) String() string            { return proto.CompactTextString(m) }
func (*SetPositionStateReply) ProtoMessage()               {}
func (*SetPositionStateReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *SetPositionStateReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type UnloadHeadRequest struct {
	Arg_1 int64 `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *UnloadHeadRequest) Reset()                    { *m = UnloadHeadRequest{} }
func (m *UnloadHeadRequest) String() string            { return proto.CompactTextString(m) }
func (*UnloadHeadRequest) ProtoMessage()               {}
func (*UnloadHeadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *UnloadHeadRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

type UnloadHeadReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *UnloadHeadReply) Reset()                    { *m = UnloadHeadReply{} }
func (m *UnloadHeadReply) String() string            { return proto.CompactTextString(m) }
func (*UnloadHeadReply) ProtoMessage()               {}
func (*UnloadHeadReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *UnloadHeadReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type LoadAdaptorRequest struct {
	Arg_1 int64 `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *LoadAdaptorRequest) Reset()                    { *m = LoadAdaptorRequest{} }
func (m *LoadAdaptorRequest) String() string            { return proto.CompactTextString(m) }
func (*LoadAdaptorRequest) ProtoMessage()               {}
func (*LoadAdaptorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *LoadAdaptorRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

type LoadAdaptorReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *LoadAdaptorReply) Reset()                    { *m = LoadAdaptorReply{} }
func (m *LoadAdaptorReply) String() string            { return proto.CompactTextString(m) }
func (*LoadAdaptorReply) ProtoMessage()               {}
func (*LoadAdaptorReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *LoadAdaptorReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type GetCurrentPositionRequest struct {
	Arg_1 int64 `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *GetCurrentPositionRequest) Reset()                    { *m = GetCurrentPositionRequest{} }
func (m *GetCurrentPositionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCurrentPositionRequest) ProtoMessage()               {}
func (*GetCurrentPositionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *GetCurrentPositionRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

type GetCurrentPositionReply struct {
	Ret_1 string                `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
	Ret_2 *CommandStatusMessage `protobuf:"bytes,2,opt,name=Ret_2,json=Ret2" json:"Ret_2,omitempty"`
}

func (m *GetCurrentPositionReply) Reset()                    { *m = GetCurrentPositionReply{} }
func (m *GetCurrentPositionReply) String() string            { return proto.CompactTextString(m) }
func (*GetCurrentPositionReply) ProtoMessage()               {}
func (*GetCurrentPositionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *GetCurrentPositionReply) GetRet_1() string {
	if m != nil {
		return m.Ret_1
	}
	return ""
}

func (m *GetCurrentPositionReply) GetRet_2() *CommandStatusMessage {
	if m != nil {
		return m.Ret_2
	}
	return nil
}

type ResetPistonsRequest struct {
	Arg_1 int64 `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 int64 `protobuf:"varint,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
}

func (m *ResetPistonsRequest) Reset()                    { *m = ResetPistonsRequest{} }
func (m *ResetPistonsRequest) String() string            { return proto.CompactTextString(m) }
func (*ResetPistonsRequest) ProtoMessage()               {}
func (*ResetPistonsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *ResetPistonsRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

func (m *ResetPistonsRequest) GetArg_2() int64 {
	if m != nil {
		return m.Arg_2
	}
	return 0
}

type ResetPistonsReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *ResetPistonsReply) Reset()                    { *m = ResetPistonsReply{} }
func (m *ResetPistonsReply) String() string            { return proto.CompactTextString(m) }
func (*ResetPistonsReply) ProtoMessage()               {}
func (*ResetPistonsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *ResetPistonsReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type SetDriveSpeedRequest struct {
	Arg_1 string  `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 float64 `protobuf:"fixed64,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
}

func (m *SetDriveSpeedRequest) Reset()                    { *m = SetDriveSpeedRequest{} }
func (m *SetDriveSpeedRequest) String() string            { return proto.CompactTextString(m) }
func (*SetDriveSpeedRequest) ProtoMessage()               {}
func (*SetDriveSpeedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *SetDriveSpeedRequest) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *SetDriveSpeedRequest) GetArg_2() float64 {
	if m != nil {
		return m.Arg_2
	}
	return 0
}

type SetDriveSpeedReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *SetDriveSpeedReply) Reset()                    { *m = SetDriveSpeedReply{} }
func (m *SetDriveSpeedReply) String() string            { return proto.CompactTextString(m) }
func (*SetDriveSpeedReply) ProtoMessage()               {}
func (*SetDriveSpeedReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *SetDriveSpeedReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type AddPlateToRequest struct {
	Arg_1 string      `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 *AnyMessage `protobuf:"bytes,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
	Arg_3 string      `protobuf:"bytes,3,opt,name=arg_3,json=arg3" json:"arg_3,omitempty"`
}

func (m *AddPlateToRequest) Reset()                    { *m = AddPlateToRequest{} }
func (m *AddPlateToRequest) String() string            { return proto.CompactTextString(m) }
func (*AddPlateToRequest) ProtoMessage()               {}
func (*AddPlateToRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *AddPlateToRequest) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *AddPlateToRequest) GetArg_2() *AnyMessage {
	if m != nil {
		return m.Arg_2
	}
	return nil
}

func (m *AddPlateToRequest) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

type AddPlateToReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *AddPlateToReply) Reset()                    { *m = AddPlateToReply{} }
func (m *AddPlateToReply) String() string            { return proto.CompactTextString(m) }
func (*AddPlateToReply) ProtoMessage()               {}
func (*AddPlateToReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *AddPlateToReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type LightsOffRequest struct {
}

func (m *LightsOffRequest) Reset()                    { *m = LightsOffRequest{} }
func (m *LightsOffRequest) String() string            { return proto.CompactTextString(m) }
func (*LightsOffRequest) ProtoMessage()               {}
func (*LightsOffRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

type LightsOffReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *LightsOffReply) Reset()                    { *m = LightsOffReply{} }
func (m *LightsOffReply) String() string            { return proto.CompactTextString(m) }
func (*LightsOffReply) ProtoMessage()               {}
func (*LightsOffReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *LightsOffReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type MoveRequest struct {
	Arg_1 *ArrayOfstring `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 *ArrayOfstring `protobuf:"bytes,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
	Arg_3 *ArrayOfint64  `protobuf:"bytes,3,opt,name=arg_3,json=arg3" json:"arg_3,omitempty"`
	Arg_4 *ArrayOfdouble `protobuf:"bytes,4,opt,name=arg_4,json=arg4" json:"arg_4,omitempty"`
	Arg_5 *ArrayOfdouble `protobuf:"bytes,5,opt,name=arg_5,json=arg5" json:"arg_5,omitempty"`
	Arg_6 *ArrayOfdouble `protobuf:"bytes,6,opt,name=arg_6,json=arg6" json:"arg_6,omitempty"`
	Arg_7 *ArrayOfstring `protobuf:"bytes,7,opt,name=arg_7,json=arg7" json:"arg_7,omitempty"`
	Arg_8 int64          `protobuf:"varint,8,opt,name=arg_8,json=arg8" json:"arg_8,omitempty"`
}

func (m *MoveRequest) Reset()                    { *m = MoveRequest{} }
func (m *MoveRequest) String() string            { return proto.CompactTextString(m) }
func (*MoveRequest) ProtoMessage()               {}
func (*MoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *MoveRequest) GetArg_1() *ArrayOfstring {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

func (m *MoveRequest) GetArg_2() *ArrayOfstring {
	if m != nil {
		return m.Arg_2
	}
	return nil
}

func (m *MoveRequest) GetArg_3() *ArrayOfint64 {
	if m != nil {
		return m.Arg_3
	}
	return nil
}

func (m *MoveRequest) GetArg_4() *ArrayOfdouble {
	if m != nil {
		return m.Arg_4
	}
	return nil
}

func (m *MoveRequest) GetArg_5() *ArrayOfdouble {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *MoveRequest) GetArg_6() *ArrayOfdouble {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

func (m *MoveRequest) GetArg_7() *ArrayOfstring {
	if m != nil {
		return m.Arg_7
	}
	return nil
}

func (m *MoveRequest) GetArg_8() int64 {
	if m != nil {
		return m.Arg_8
	}
	return 0
}

type MoveReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *MoveReply) Reset()                    { *m = MoveReply{} }
func (m *MoveReply) String() string            { return proto.CompactTextString(m) }
func (*MoveReply) ProtoMessage()               {}
func (*MoveReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *MoveReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type MoveRawRequest struct {
	Arg_1 int64   `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
	Arg_2 float64 `protobuf:"fixed64,2,opt,name=arg_2,json=arg2" json:"arg_2,omitempty"`
	Arg_3 float64 `protobuf:"fixed64,3,opt,name=arg_3,json=arg3" json:"arg_3,omitempty"`
	Arg_4 float64 `protobuf:"fixed64,4,opt,name=arg_4,json=arg4" json:"arg_4,omitempty"`
}

func (m *MoveRawRequest) Reset()                    { *m = MoveRawRequest{} }
func (m *MoveRawRequest) String() string            { return proto.CompactTextString(m) }
func (*MoveRawRequest) ProtoMessage()               {}
func (*MoveRawRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *MoveRawRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

func (m *MoveRawRequest) GetArg_2() float64 {
	if m != nil {
		return m.Arg_2
	}
	return 0
}

func (m *MoveRawRequest) GetArg_3() float64 {
	if m != nil {
		return m.Arg_3
	}
	return 0
}

func (m *MoveRawRequest) GetArg_4() float64 {
	if m != nil {
		return m.Arg_4
	}
	return 0
}

type MoveRawReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *MoveRawReply) Reset()                    { *m = MoveRawReply{} }
func (m *MoveRawReply) String() string            { return proto.CompactTextString(m) }
func (*MoveRawReply) ProtoMessage()               {}
func (*MoveRawReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *MoveRawReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type StopRequest struct {
}

func (m *StopRequest) Reset()                    { *m = StopRequest{} }
func (m *StopRequest) String() string            { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()               {}
func (*StopRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

type StopReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *StopReply) Reset()                    { *m = StopReply{} }
func (m *StopReply) String() string            { return proto.CompactTextString(m) }
func (*StopReply) ProtoMessage()               {}
func (*StopReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *StopReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type GoRequest struct {
}

func (m *GoRequest) Reset()                    { *m = GoRequest{} }
func (m *GoRequest) String() string            { return proto.CompactTextString(m) }
func (*GoRequest) ProtoMessage()               {}
func (*GoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

type GoReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *GoReply) Reset()                    { *m = GoReply{} }
func (m *GoReply) String() string            { return proto.CompactTextString(m) }
func (*GoReply) ProtoMessage()               {}
func (*GoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *GoReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type GetHeadStateRequest struct {
	Arg_1 int64 `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *GetHeadStateRequest) Reset()                    { *m = GetHeadStateRequest{} }
func (m *GetHeadStateRequest) String() string            { return proto.CompactTextString(m) }
func (*GetHeadStateRequest) ProtoMessage()               {}
func (*GetHeadStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *GetHeadStateRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

type GetHeadStateReply struct {
	Ret_1 string                `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
	Ret_2 *CommandStatusMessage `protobuf:"bytes,2,opt,name=Ret_2,json=Ret2" json:"Ret_2,omitempty"`
}

func (m *GetHeadStateReply) Reset()                    { *m = GetHeadStateReply{} }
func (m *GetHeadStateReply) String() string            { return proto.CompactTextString(m) }
func (*GetHeadStateReply) ProtoMessage()               {}
func (*GetHeadStateReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *GetHeadStateReply) GetRet_1() string {
	if m != nil {
		return m.Ret_1
	}
	return ""
}

func (m *GetHeadStateReply) GetRet_2() *CommandStatusMessage {
	if m != nil {
		return m.Ret_2
	}
	return nil
}

type GetOutputFileRequest struct {
}

func (m *GetOutputFileRequest) Reset()                    { *m = GetOutputFileRequest{} }
func (m *GetOutputFileRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOutputFileRequest) ProtoMessage()               {}
func (*GetOutputFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

type GetOutputFileReply struct {
	Ret_1 []byte                `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1,proto3" json:"Ret_1,omitempty"`
	Ret_2 *CommandStatusMessage `protobuf:"bytes,2,opt,name=Ret_2,json=Ret2" json:"Ret_2,omitempty"`
}

func (m *GetOutputFileReply) Reset()                    { *m = GetOutputFileReply{} }
func (m *GetOutputFileReply) String() string            { return proto.CompactTextString(m) }
func (*GetOutputFileReply) ProtoMessage()               {}
func (*GetOutputFileReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *GetOutputFileReply) GetRet_1() []byte {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

func (m *GetOutputFileReply) GetRet_2() *CommandStatusMessage {
	if m != nil {
		return m.Ret_2
	}
	return nil
}

type GetStatusRequest struct {
}

func (m *GetStatusRequest) Reset()                    { *m = GetStatusRequest{} }
func (m *GetStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStatusRequest) ProtoMessage()               {}
func (*GetStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

type GetStatusReply struct {
	Ret_1 *MapstringAnyMessageMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
	Ret_2 *CommandStatusMessage       `protobuf:"bytes,2,opt,name=Ret_2,json=Ret2" json:"Ret_2,omitempty"`
}

func (m *GetStatusReply) Reset()                    { *m = GetStatusReply{} }
func (m *GetStatusReply) String() string            { return proto.CompactTextString(m) }
func (*GetStatusReply) ProtoMessage()               {}
func (*GetStatusReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *GetStatusReply) GetRet_1() *MapstringAnyMessageMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

func (m *GetStatusReply) GetRet_2() *CommandStatusMessage {
	if m != nil {
		return m.Ret_2
	}
	return nil
}

type UnloadAdaptorRequest struct {
	Arg_1 int64 `protobuf:"varint,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *UnloadAdaptorRequest) Reset()                    { *m = UnloadAdaptorRequest{} }
func (m *UnloadAdaptorRequest) String() string            { return proto.CompactTextString(m) }
func (*UnloadAdaptorRequest) ProtoMessage()               {}
func (*UnloadAdaptorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *UnloadAdaptorRequest) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

type UnloadAdaptorReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *UnloadAdaptorReply) Reset()                    { *m = UnloadAdaptorReply{} }
func (m *UnloadAdaptorReply) String() string            { return proto.CompactTextString(m) }
func (*UnloadAdaptorReply) ProtoMessage()               {}
func (*UnloadAdaptorReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *UnloadAdaptorReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type CloseRequest struct {
}

func (m *CloseRequest) Reset()                    { *m = CloseRequest{} }
func (m *CloseRequest) String() string            { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()               {}
func (*CloseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

type CloseReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *CloseReply) Reset()                    { *m = CloseReply{} }
func (m *CloseReply) String() string            { return proto.CompactTextString(m) }
func (*CloseReply) ProtoMessage()               {}
func (*CloseReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *CloseReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type ArrayOfint64 struct {
	Arg_1 []int64 `protobuf:"varint,1,rep,packed,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfint64) Reset()                    { *m = ArrayOfint64{} }
func (m *ArrayOfint64) String() string            { return proto.CompactTextString(m) }
func (*ArrayOfint64) ProtoMessage()               {}
func (*ArrayOfint64) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *ArrayOfint64) GetArg_1() []int64 {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type ArrayOfdouble struct {
	Arg_1 []float64 `protobuf:"fixed64,1,rep,packed,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfdouble) Reset()                    { *m = ArrayOfdouble{} }
func (m *ArrayOfdouble) String() string            { return proto.CompactTextString(m) }
func (*ArrayOfdouble) ProtoMessage()               {}
func (*ArrayOfdouble) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *ArrayOfdouble) GetArg_1() []float64 {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type ArrayOfbool struct {
	Arg_1 []bool `protobuf:"varint,1,rep,packed,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfbool) Reset()                    { *m = ArrayOfbool{} }
func (m *ArrayOfbool) String() string            { return proto.CompactTextString(m) }
func (*ArrayOfbool) ProtoMessage()               {}
func (*ArrayOfbool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *ArrayOfbool) GetArg_1() []bool {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type CommandStatusMessage struct {
	Arg_1 bool   `protobuf:"varint,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 int64  `protobuf:"varint,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3 string `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
}

func (m *CommandStatusMessage) Reset()                    { *m = CommandStatusMessage{} }
func (m *CommandStatusMessage) String() string            { return proto.CompactTextString(m) }
func (*CommandStatusMessage) ProtoMessage()               {}
func (*CommandStatusMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *CommandStatusMessage) GetArg_1() bool {
	if m != nil {
		return m.Arg_1
	}
	return false
}

func (m *CommandStatusMessage) GetArg_2() int64 {
	if m != nil {
		return m.Arg_2
	}
	return 0
}

func (m *CommandStatusMessage) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

type ArrayOfstring struct {
	Arg_1 []string `protobuf:"bytes,1,rep,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfstring) Reset()                    { *m = ArrayOfstring{} }
func (m *ArrayOfstring) String() string            { return proto.CompactTextString(m) }
func (*ArrayOfstring) ProtoMessage()               {}
func (*ArrayOfstring) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *ArrayOfstring) GetArg_1() []string {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type PtrToLHPropertiesMessage struct {
	Arg_1 *LHPropertiesMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHPropertiesMessage) Reset()                    { *m = PtrToLHPropertiesMessage{} }
func (m *PtrToLHPropertiesMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHPropertiesMessage) ProtoMessage()               {}
func (*PtrToLHPropertiesMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *PtrToLHPropertiesMessage) GetArg_1() *LHPropertiesMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type MapstringAnyMessageMessageFieldEntry struct {
	Key   string      `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *AnyMessage `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MapstringAnyMessageMessageFieldEntry) Reset()         { *m = MapstringAnyMessageMessageFieldEntry{} }
func (m *MapstringAnyMessageMessageFieldEntry) String() string { return proto.CompactTextString(m) }
func (*MapstringAnyMessageMessageFieldEntry) ProtoMessage()    {}
func (*MapstringAnyMessageMessageFieldEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{78}
}

func (m *MapstringAnyMessageMessageFieldEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MapstringAnyMessageMessageFieldEntry) GetValue() *AnyMessage {
	if m != nil {
		return m.Value
	}
	return nil
}

type MapstringAnyMessageMessage struct {
	MapField []*MapstringAnyMessageMessageFieldEntry `protobuf:"bytes,1,rep,name=map_field,json=mapField" json:"map_field,omitempty"`
}

func (m *MapstringAnyMessageMessage) Reset()                    { *m = MapstringAnyMessageMessage{} }
func (m *MapstringAnyMessageMessage) String() string            { return proto.CompactTextString(m) }
func (*MapstringAnyMessageMessage) ProtoMessage()               {}
func (*MapstringAnyMessageMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *MapstringAnyMessageMessage) GetMapField() []*MapstringAnyMessageMessageFieldEntry {
	if m != nil {
		return m.MapField
	}
	return nil
}

type LHPropertiesMessage struct {
	Arg_1  string                                  `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2  int64                                   `protobuf:"varint,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3  *MapstringPtrToLHPositionMessageMessage `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4  *MapstringAnyMessageMessage             `protobuf:"bytes,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5  *MapstringstringMessage                 `protobuf:"bytes,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6  *MapstringstringMessage                 `protobuf:"bytes,6,opt,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
	Arg_7  *MapstringPtrToLHPlateMessageMessage    `protobuf:"bytes,7,opt,name=Arg_7,json=Arg7" json:"Arg_7,omitempty"`
	Arg_8  *MapstringPtrToLHTipboxMessageMessage   `protobuf:"bytes,8,opt,name=Arg_8,json=Arg8" json:"Arg_8,omitempty"`
	Arg_9  *MapstringPtrToLHTipwasteMessageMessage `protobuf:"bytes,9,opt,name=Arg_9,json=Arg9" json:"Arg_9,omitempty"`
	Arg_10 *MapstringPtrToLHPlateMessageMessage    `protobuf:"bytes,10,opt,name=Arg_10,json=Arg10" json:"Arg_10,omitempty"`
	Arg_11 *MapstringPtrToLHPlateMessageMessage    `protobuf:"bytes,11,opt,name=Arg_11,json=Arg11" json:"Arg_11,omitempty"`
	Arg_12 *MapstringstringMessage                 `protobuf:"bytes,12,opt,name=Arg_12,json=Arg12" json:"Arg_12,omitempty"`
	Arg_13 string                                  `protobuf:"bytes,13,opt,name=Arg_13,json=Arg13" json:"Arg_13,omitempty"`
	Arg_14 string                                  `protobuf:"bytes,14,opt,name=Arg_14,json=Arg14" json:"Arg_14,omitempty"`
	Arg_15 string                                  `protobuf:"bytes,15,opt,name=Arg_15,json=Arg15" json:"Arg_15,omitempty"`
	Arg_16 string                                  `protobuf:"bytes,16,opt,name=Arg_16,json=Arg16" json:"Arg_16,omitempty"`
	Arg_17 *ArrayOfPtrToLHHeadMessage              `protobuf:"bytes,17,opt,name=Arg_17,json=Arg17" json:"Arg_17,omitempty"`
	// ArrayOfPtrToLHHeadMessage Arg_18 = 18; //headsloaded replaced by head assemblies
	Arg_19 *ArrayOfPtrToLHAdaptorMessage          `protobuf:"bytes,19,opt,name=Arg_19,json=Arg19" json:"Arg_19,omitempty"`
	Arg_20 *ArrayOfPtrToLHTipMessage              `protobuf:"bytes,20,opt,name=Arg_20,json=Arg20" json:"Arg_20,omitempty"`
	Arg_21 *ArrayOfstring                         `protobuf:"bytes,21,opt,name=Arg_21,json=Arg21" json:"Arg_21,omitempty"`
	Arg_22 *ArrayOfstring                         `protobuf:"bytes,22,opt,name=Arg_22,json=Arg22" json:"Arg_22,omitempty"`
	Arg_23 *ArrayOfstring                         `protobuf:"bytes,23,opt,name=Arg_23,json=Arg23" json:"Arg_23,omitempty"`
	Arg_24 *ArrayOfstring                         `protobuf:"bytes,24,opt,name=Arg_24,json=Arg24" json:"Arg_24,omitempty"`
	Arg_25 *ArrayOfstring                         `protobuf:"bytes,25,opt,name=Arg_25,json=Arg25" json:"Arg_25,omitempty"`
	Arg_26 *ArrayOfstring                         `protobuf:"bytes,26,opt,name=Arg_26,json=Arg26" json:"Arg_26,omitempty"`
	Arg_27 *PtrToLHChannelParameterMessage        `protobuf:"bytes,27,opt,name=Arg_27,json=Arg27" json:"Arg_27,omitempty"`
	Arg_28 *ArrayOfPtrToLHChannelParameterMessage `protobuf:"bytes,28,opt,name=Arg_28,json=Arg28" json:"Arg_28,omitempty"`
	Arg_29 *MapstringCoordinatesMessageMessage    `protobuf:"bytes,29,opt,name=Arg_29,json=Arg29" json:"Arg_29,omitempty"`
	Arg_30 int64                                  `protobuf:"varint,30,opt,name=Arg_30,json=Arg30" json:"Arg_30,omitempty"`
	Arg_31 *ArrayOfPtrToLHHeadAssembliesMessage   `protobuf:"bytes,31,opt,name=Arg_31,json=Arg31" json:"Arg_31,omitempty"`
}

func (m *LHPropertiesMessage) Reset()                    { *m = LHPropertiesMessage{} }
func (m *LHPropertiesMessage) String() string            { return proto.CompactTextString(m) }
func (*LHPropertiesMessage) ProtoMessage()               {}
func (*LHPropertiesMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *LHPropertiesMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHPropertiesMessage) GetArg_2() int64 {
	if m != nil {
		return m.Arg_2
	}
	return 0
}

func (m *LHPropertiesMessage) GetArg_3() *MapstringPtrToLHPositionMessageMessage {
	if m != nil {
		return m.Arg_3
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_4() *MapstringAnyMessageMessage {
	if m != nil {
		return m.Arg_4
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_5() *MapstringstringMessage {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_6() *MapstringstringMessage {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_7() *MapstringPtrToLHPlateMessageMessage {
	if m != nil {
		return m.Arg_7
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_8() *MapstringPtrToLHTipboxMessageMessage {
	if m != nil {
		return m.Arg_8
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_9() *MapstringPtrToLHTipwasteMessageMessage {
	if m != nil {
		return m.Arg_9
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_10() *MapstringPtrToLHPlateMessageMessage {
	if m != nil {
		return m.Arg_10
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_11() *MapstringPtrToLHPlateMessageMessage {
	if m != nil {
		return m.Arg_11
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_12() *MapstringstringMessage {
	if m != nil {
		return m.Arg_12
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_13() string {
	if m != nil {
		return m.Arg_13
	}
	return ""
}

func (m *LHPropertiesMessage) GetArg_14() string {
	if m != nil {
		return m.Arg_14
	}
	return ""
}

func (m *LHPropertiesMessage) GetArg_15() string {
	if m != nil {
		return m.Arg_15
	}
	return ""
}

func (m *LHPropertiesMessage) GetArg_16() string {
	if m != nil {
		return m.Arg_16
	}
	return ""
}

func (m *LHPropertiesMessage) GetArg_17() *ArrayOfPtrToLHHeadMessage {
	if m != nil {
		return m.Arg_17
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_19() *ArrayOfPtrToLHAdaptorMessage {
	if m != nil {
		return m.Arg_19
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_20() *ArrayOfPtrToLHTipMessage {
	if m != nil {
		return m.Arg_20
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_21() *ArrayOfstring {
	if m != nil {
		return m.Arg_21
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_22() *ArrayOfstring {
	if m != nil {
		return m.Arg_22
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_23() *ArrayOfstring {
	if m != nil {
		return m.Arg_23
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_24() *ArrayOfstring {
	if m != nil {
		return m.Arg_24
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_25() *ArrayOfstring {
	if m != nil {
		return m.Arg_25
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_26() *ArrayOfstring {
	if m != nil {
		return m.Arg_26
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_27() *PtrToLHChannelParameterMessage {
	if m != nil {
		return m.Arg_27
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_28() *ArrayOfPtrToLHChannelParameterMessage {
	if m != nil {
		return m.Arg_28
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_29() *MapstringCoordinatesMessageMessage {
	if m != nil {
		return m.Arg_29
	}
	return nil
}

func (m *LHPropertiesMessage) GetArg_30() int64 {
	if m != nil {
		return m.Arg_30
	}
	return 0
}

func (m *LHPropertiesMessage) GetArg_31() *ArrayOfPtrToLHHeadAssembliesMessage {
	if m != nil {
		return m.Arg_31
	}
	return nil
}

type ArrayOfPtrToLHHeadMessage struct {
	Arg_1 []*PtrToLHHeadMessage `protobuf:"bytes,1,rep,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfPtrToLHHeadMessage) Reset()                    { *m = ArrayOfPtrToLHHeadMessage{} }
func (m *ArrayOfPtrToLHHeadMessage) String() string            { return proto.CompactTextString(m) }
func (*ArrayOfPtrToLHHeadMessage) ProtoMessage()               {}
func (*ArrayOfPtrToLHHeadMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *ArrayOfPtrToLHHeadMessage) GetArg_1() []*PtrToLHHeadMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type MapstringPtrToLHPositionMessageMessageFieldEntry struct {
	Key   string                  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *PtrToLHPositionMessage `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MapstringPtrToLHPositionMessageMessageFieldEntry) Reset() {
	*m = MapstringPtrToLHPositionMessageMessageFieldEntry{}
}
func (m *MapstringPtrToLHPositionMessageMessageFieldEntry) String() string {
	return proto.CompactTextString(m)
}
func (*MapstringPtrToLHPositionMessageMessageFieldEntry) ProtoMessage() {}
func (*MapstringPtrToLHPositionMessageMessageFieldEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{82}
}

func (m *MapstringPtrToLHPositionMessageMessageFieldEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MapstringPtrToLHPositionMessageMessageFieldEntry) GetValue() *PtrToLHPositionMessage {
	if m != nil {
		return m.Value
	}
	return nil
}

type MapstringPtrToLHPositionMessageMessage struct {
	MapField []*MapstringPtrToLHPositionMessageMessageFieldEntry `protobuf:"bytes,1,rep,name=map_field,json=mapField" json:"map_field,omitempty"`
}

func (m *MapstringPtrToLHPositionMessageMessage) Reset() {
	*m = MapstringPtrToLHPositionMessageMessage{}
}
func (m *MapstringPtrToLHPositionMessageMessage) String() string { return proto.CompactTextString(m) }
func (*MapstringPtrToLHPositionMessageMessage) ProtoMessage()    {}
func (*MapstringPtrToLHPositionMessageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{83}
}

func (m *MapstringPtrToLHPositionMessageMessage) GetMapField() []*MapstringPtrToLHPositionMessageMessageFieldEntry {
	if m != nil {
		return m.MapField
	}
	return nil
}

type MapstringPtrToLHPlateMessageMessageFieldEntry struct {
	Key   string               `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *PtrToLHPlateMessage `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MapstringPtrToLHPlateMessageMessageFieldEntry) Reset() {
	*m = MapstringPtrToLHPlateMessageMessageFieldEntry{}
}
func (m *MapstringPtrToLHPlateMessageMessageFieldEntry) String() string {
	return proto.CompactTextString(m)
}
func (*MapstringPtrToLHPlateMessageMessageFieldEntry) ProtoMessage() {}
func (*MapstringPtrToLHPlateMessageMessageFieldEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{84}
}

func (m *MapstringPtrToLHPlateMessageMessageFieldEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MapstringPtrToLHPlateMessageMessageFieldEntry) GetValue() *PtrToLHPlateMessage {
	if m != nil {
		return m.Value
	}
	return nil
}

type MapstringPtrToLHPlateMessageMessage struct {
	MapField []*MapstringPtrToLHPlateMessageMessageFieldEntry `protobuf:"bytes,1,rep,name=map_field,json=mapField" json:"map_field,omitempty"`
}

func (m *MapstringPtrToLHPlateMessageMessage) Reset()         { *m = MapstringPtrToLHPlateMessageMessage{} }
func (m *MapstringPtrToLHPlateMessageMessage) String() string { return proto.CompactTextString(m) }
func (*MapstringPtrToLHPlateMessageMessage) ProtoMessage()    {}
func (*MapstringPtrToLHPlateMessageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{85}
}

func (m *MapstringPtrToLHPlateMessageMessage) GetMapField() []*MapstringPtrToLHPlateMessageMessageFieldEntry {
	if m != nil {
		return m.MapField
	}
	return nil
}

type PtrToLHAdaptorMessage struct {
	Arg_1 *LHAdaptorMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHAdaptorMessage) Reset()                    { *m = PtrToLHAdaptorMessage{} }
func (m *PtrToLHAdaptorMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHAdaptorMessage) ProtoMessage()               {}
func (*PtrToLHAdaptorMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *PtrToLHAdaptorMessage) GetArg_1() *LHAdaptorMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type PtrToLHTipMessage struct {
	Arg_1 *LHTipMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHTipMessage) Reset()                    { *m = PtrToLHTipMessage{} }
func (m *PtrToLHTipMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHTipMessage) ProtoMessage()               {}
func (*PtrToLHTipMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *PtrToLHTipMessage) GetArg_1() *LHTipMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type LHChannelParameterMessage struct {
	Arg_1  string           `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2  string           `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3  string           `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4  *VolumeMessage   `protobuf:"bytes,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5  *VolumeMessage   `protobuf:"bytes,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6  *FlowRateMessage `protobuf:"bytes,6,opt,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
	Arg_7  *FlowRateMessage `protobuf:"bytes,7,opt,name=Arg_7,json=Arg7" json:"Arg_7,omitempty"`
	Arg_8  int64            `protobuf:"varint,8,opt,name=Arg_8,json=Arg8" json:"Arg_8,omitempty"`
	Arg_9  bool             `protobuf:"varint,9,opt,name=Arg_9,json=Arg9" json:"Arg_9,omitempty"`
	Arg_10 int64            `protobuf:"varint,10,opt,name=Arg_10,json=Arg10" json:"Arg_10,omitempty"`
	Arg_11 int64            `protobuf:"varint,11,opt,name=Arg_11,json=Arg11" json:"Arg_11,omitempty"`
}

func (m *LHChannelParameterMessage) Reset()                    { *m = LHChannelParameterMessage{} }
func (m *LHChannelParameterMessage) String() string            { return proto.CompactTextString(m) }
func (*LHChannelParameterMessage) ProtoMessage()               {}
func (*LHChannelParameterMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

func (m *LHChannelParameterMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHChannelParameterMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *LHChannelParameterMessage) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

func (m *LHChannelParameterMessage) GetArg_4() *VolumeMessage {
	if m != nil {
		return m.Arg_4
	}
	return nil
}

func (m *LHChannelParameterMessage) GetArg_5() *VolumeMessage {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *LHChannelParameterMessage) GetArg_6() *FlowRateMessage {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

func (m *LHChannelParameterMessage) GetArg_7() *FlowRateMessage {
	if m != nil {
		return m.Arg_7
	}
	return nil
}

func (m *LHChannelParameterMessage) GetArg_8() int64 {
	if m != nil {
		return m.Arg_8
	}
	return 0
}

func (m *LHChannelParameterMessage) GetArg_9() bool {
	if m != nil {
		return m.Arg_9
	}
	return false
}

func (m *LHChannelParameterMessage) GetArg_10() int64 {
	if m != nil {
		return m.Arg_10
	}
	return 0
}

func (m *LHChannelParameterMessage) GetArg_11() int64 {
	if m != nil {
		return m.Arg_11
	}
	return 0
}

type LHTipboxMessage struct {
	Arg_1  string                           `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2  string                           `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3  string                           `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4  string                           `protobuf:"bytes,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5  int64                            `protobuf:"varint,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6  int64                            `protobuf:"varint,6,opt,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
	Arg_7  float64                          `protobuf:"fixed64,7,opt,name=Arg_7,json=Arg7" json:"Arg_7,omitempty"`
	Arg_8  *PtrToLHTipMessage               `protobuf:"bytes,8,opt,name=Arg_8,json=Arg8" json:"Arg_8,omitempty"`
	Arg_9  *PtrToLHWellMessage              `protobuf:"bytes,9,opt,name=Arg_9,json=Arg9" json:"Arg_9,omitempty"`
	Arg_10 int64                            `protobuf:"varint,10,opt,name=Arg_10,json=Arg10" json:"Arg_10,omitempty"`
	Arg_11 *ArrayOfArrayOfPtrToLHTipMessage `protobuf:"bytes,11,opt,name=Arg_11,json=Arg11" json:"Arg_11,omitempty"`
	Arg_12 float64                          `protobuf:"fixed64,12,opt,name=Arg_12,json=Arg12" json:"Arg_12,omitempty"`
	Arg_13 float64                          `protobuf:"fixed64,13,opt,name=Arg_13,json=Arg13" json:"Arg_13,omitempty"`
	Arg_14 float64                          `protobuf:"fixed64,14,opt,name=Arg_14,json=Arg14" json:"Arg_14,omitempty"`
	Arg_15 float64                          `protobuf:"fixed64,15,opt,name=Arg_15,json=Arg15" json:"Arg_15,omitempty"`
	Arg_16 float64                          `protobuf:"fixed64,16,opt,name=Arg_16,json=Arg16" json:"Arg_16,omitempty"`
	Arg_17 *BBoxMessage                     `protobuf:"bytes,17,opt,name=Arg_17,json=Arg17" json:"Arg_17,omitempty"`
}

func (m *LHTipboxMessage) Reset()                    { *m = LHTipboxMessage{} }
func (m *LHTipboxMessage) String() string            { return proto.CompactTextString(m) }
func (*LHTipboxMessage) ProtoMessage()               {}
func (*LHTipboxMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *LHTipboxMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHTipboxMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *LHTipboxMessage) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

func (m *LHTipboxMessage) GetArg_4() string {
	if m != nil {
		return m.Arg_4
	}
	return ""
}

func (m *LHTipboxMessage) GetArg_5() int64 {
	if m != nil {
		return m.Arg_5
	}
	return 0
}

func (m *LHTipboxMessage) GetArg_6() int64 {
	if m != nil {
		return m.Arg_6
	}
	return 0
}

func (m *LHTipboxMessage) GetArg_7() float64 {
	if m != nil {
		return m.Arg_7
	}
	return 0
}

func (m *LHTipboxMessage) GetArg_8() *PtrToLHTipMessage {
	if m != nil {
		return m.Arg_8
	}
	return nil
}

func (m *LHTipboxMessage) GetArg_9() *PtrToLHWellMessage {
	if m != nil {
		return m.Arg_9
	}
	return nil
}

func (m *LHTipboxMessage) GetArg_10() int64 {
	if m != nil {
		return m.Arg_10
	}
	return 0
}

func (m *LHTipboxMessage) GetArg_11() *ArrayOfArrayOfPtrToLHTipMessage {
	if m != nil {
		return m.Arg_11
	}
	return nil
}

func (m *LHTipboxMessage) GetArg_12() float64 {
	if m != nil {
		return m.Arg_12
	}
	return 0
}

func (m *LHTipboxMessage) GetArg_13() float64 {
	if m != nil {
		return m.Arg_13
	}
	return 0
}

func (m *LHTipboxMessage) GetArg_14() float64 {
	if m != nil {
		return m.Arg_14
	}
	return 0
}

func (m *LHTipboxMessage) GetArg_15() float64 {
	if m != nil {
		return m.Arg_15
	}
	return 0
}

func (m *LHTipboxMessage) GetArg_16() float64 {
	if m != nil {
		return m.Arg_16
	}
	return 0
}

func (m *LHTipboxMessage) GetArg_17() *BBoxMessage {
	if m != nil {
		return m.Arg_17
	}
	return nil
}

type MapstringPtrToLHTipwasteMessageMessageFieldEntry struct {
	Key   string                  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *PtrToLHTipwasteMessage `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MapstringPtrToLHTipwasteMessageMessageFieldEntry) Reset() {
	*m = MapstringPtrToLHTipwasteMessageMessageFieldEntry{}
}
func (m *MapstringPtrToLHTipwasteMessageMessageFieldEntry) String() string {
	return proto.CompactTextString(m)
}
func (*MapstringPtrToLHTipwasteMessageMessageFieldEntry) ProtoMessage() {}
func (*MapstringPtrToLHTipwasteMessageMessageFieldEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{90}
}

func (m *MapstringPtrToLHTipwasteMessageMessageFieldEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MapstringPtrToLHTipwasteMessageMessageFieldEntry) GetValue() *PtrToLHTipwasteMessage {
	if m != nil {
		return m.Value
	}
	return nil
}

type MapstringPtrToLHTipwasteMessageMessage struct {
	MapField []*MapstringPtrToLHTipwasteMessageMessageFieldEntry `protobuf:"bytes,1,rep,name=map_field,json=mapField" json:"map_field,omitempty"`
}

func (m *MapstringPtrToLHTipwasteMessageMessage) Reset() {
	*m = MapstringPtrToLHTipwasteMessageMessage{}
}
func (m *MapstringPtrToLHTipwasteMessageMessage) String() string { return proto.CompactTextString(m) }
func (*MapstringPtrToLHTipwasteMessageMessage) ProtoMessage()    {}
func (*MapstringPtrToLHTipwasteMessageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{91}
}

func (m *MapstringPtrToLHTipwasteMessageMessage) GetMapField() []*MapstringPtrToLHTipwasteMessageMessageFieldEntry {
	if m != nil {
		return m.MapField
	}
	return nil
}

type PtrToLHChannelParameterMessage struct {
	Arg_1 *LHChannelParameterMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHChannelParameterMessage) Reset()                    { *m = PtrToLHChannelParameterMessage{} }
func (m *PtrToLHChannelParameterMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHChannelParameterMessage) ProtoMessage()               {}
func (*PtrToLHChannelParameterMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *PtrToLHChannelParameterMessage) GetArg_1() *LHChannelParameterMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type PtrToLHTipwasteMessage struct {
	Arg_1 *LHTipwasteMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHTipwasteMessage) Reset()                    { *m = PtrToLHTipwasteMessage{} }
func (m *PtrToLHTipwasteMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHTipwasteMessage) ProtoMessage()               {}
func (*PtrToLHTipwasteMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *PtrToLHTipwasteMessage) GetArg_1() *LHTipwasteMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type MapstringPtrToLHTipboxMessageMessageFieldEntry struct {
	Key   string                `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *PtrToLHTipboxMessage `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MapstringPtrToLHTipboxMessageMessageFieldEntry) Reset() {
	*m = MapstringPtrToLHTipboxMessageMessageFieldEntry{}
}
func (m *MapstringPtrToLHTipboxMessageMessageFieldEntry) String() string {
	return proto.CompactTextString(m)
}
func (*MapstringPtrToLHTipboxMessageMessageFieldEntry) ProtoMessage() {}
func (*MapstringPtrToLHTipboxMessageMessageFieldEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{94}
}

func (m *MapstringPtrToLHTipboxMessageMessageFieldEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MapstringPtrToLHTipboxMessageMessageFieldEntry) GetValue() *PtrToLHTipboxMessage {
	if m != nil {
		return m.Value
	}
	return nil
}

type MapstringPtrToLHTipboxMessageMessage struct {
	MapField []*MapstringPtrToLHTipboxMessageMessageFieldEntry `protobuf:"bytes,1,rep,name=map_field,json=mapField" json:"map_field,omitempty"`
}

func (m *MapstringPtrToLHTipboxMessageMessage) Reset()         { *m = MapstringPtrToLHTipboxMessageMessage{} }
func (m *MapstringPtrToLHTipboxMessageMessage) String() string { return proto.CompactTextString(m) }
func (*MapstringPtrToLHTipboxMessageMessage) ProtoMessage()    {}
func (*MapstringPtrToLHTipboxMessageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{95}
}

func (m *MapstringPtrToLHTipboxMessageMessage) GetMapField() []*MapstringPtrToLHTipboxMessageMessageFieldEntry {
	if m != nil {
		return m.MapField
	}
	return nil
}

type LHAdaptorMessage struct {
	Arg_1 string                          `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 string                          `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3 string                          `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4 *PtrToLHChannelParameterMessage `protobuf:"bytes,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5 *ArrayOfPtrToLHTipMessage       `protobuf:"bytes,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
}

func (m *LHAdaptorMessage) Reset()                    { *m = LHAdaptorMessage{} }
func (m *LHAdaptorMessage) String() string            { return proto.CompactTextString(m) }
func (*LHAdaptorMessage) ProtoMessage()               {}
func (*LHAdaptorMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *LHAdaptorMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHAdaptorMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *LHAdaptorMessage) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

func (m *LHAdaptorMessage) GetArg_4() *PtrToLHChannelParameterMessage {
	if m != nil {
		return m.Arg_4
	}
	return nil
}

func (m *LHAdaptorMessage) GetArg_5() *ArrayOfPtrToLHTipMessage {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

type MapstringCoordinatesMessageMessageFieldEntry struct {
	Key   string              `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *CoordinatesMessage `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MapstringCoordinatesMessageMessageFieldEntry) Reset() {
	*m = MapstringCoordinatesMessageMessageFieldEntry{}
}
func (m *MapstringCoordinatesMessageMessageFieldEntry) String() string {
	return proto.CompactTextString(m)
}
func (*MapstringCoordinatesMessageMessageFieldEntry) ProtoMessage() {}
func (*MapstringCoordinatesMessageMessageFieldEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{97}
}

func (m *MapstringCoordinatesMessageMessageFieldEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MapstringCoordinatesMessageMessageFieldEntry) GetValue() *CoordinatesMessage {
	if m != nil {
		return m.Value
	}
	return nil
}

type MapstringCoordinatesMessageMessage struct {
	MapField []*MapstringCoordinatesMessageMessageFieldEntry `protobuf:"bytes,1,rep,name=map_field,json=mapField" json:"map_field,omitempty"`
}

func (m *MapstringCoordinatesMessageMessage) Reset()         { *m = MapstringCoordinatesMessageMessage{} }
func (m *MapstringCoordinatesMessageMessage) String() string { return proto.CompactTextString(m) }
func (*MapstringCoordinatesMessageMessage) ProtoMessage()    {}
func (*MapstringCoordinatesMessageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{98}
}

func (m *MapstringCoordinatesMessageMessage) GetMapField() []*MapstringCoordinatesMessageMessageFieldEntry {
	if m != nil {
		return m.MapField
	}
	return nil
}

type PtrToLHPositionMessage struct {
	Arg_1 *LHPositionMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHPositionMessage) Reset()                    { *m = PtrToLHPositionMessage{} }
func (m *PtrToLHPositionMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHPositionMessage) ProtoMessage()               {}
func (*PtrToLHPositionMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

func (m *PtrToLHPositionMessage) GetArg_1() *LHPositionMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type LHPositionMessage struct {
	Arg_1 string                  `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 string                  `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3 int64                   `protobuf:"varint,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4 *ArrayOfLHDeviceMessage `protobuf:"bytes,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5 float64                 `protobuf:"fixed64,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
}

func (m *LHPositionMessage) Reset()                    { *m = LHPositionMessage{} }
func (m *LHPositionMessage) String() string            { return proto.CompactTextString(m) }
func (*LHPositionMessage) ProtoMessage()               {}
func (*LHPositionMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{100} }

func (m *LHPositionMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHPositionMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *LHPositionMessage) GetArg_3() int64 {
	if m != nil {
		return m.Arg_3
	}
	return 0
}

func (m *LHPositionMessage) GetArg_4() *ArrayOfLHDeviceMessage {
	if m != nil {
		return m.Arg_4
	}
	return nil
}

func (m *LHPositionMessage) GetArg_5() float64 {
	if m != nil {
		return m.Arg_5
	}
	return 0
}

type LHPlateMessage struct {
	Arg_1  string                              `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2  string                              `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3  string                              `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4  string                              `protobuf:"bytes,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5  string                              `protobuf:"bytes,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6  string                              `protobuf:"bytes,6,opt,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
	Arg_7  int64                               `protobuf:"varint,7,opt,name=Arg_7,json=Arg7" json:"Arg_7,omitempty"`
	Arg_8  int64                               `protobuf:"varint,8,opt,name=Arg_8,json=Arg8" json:"Arg_8,omitempty"`
	Arg_9  int64                               `protobuf:"varint,9,opt,name=Arg_9,json=Arg9" json:"Arg_9,omitempty"`
	Arg_10 *MapstringPtrToLHWellMessageMessage `protobuf:"bytes,10,opt,name=Arg_10,json=Arg10" json:"Arg_10,omitempty"`
	Arg_11 *ArrayOfArrayOfPtrToLHWellMessage   `protobuf:"bytes,11,opt,name=Arg_11,json=Arg11" json:"Arg_11,omitempty"`
	Arg_12 *ArrayOfArrayOfPtrToLHWellMessage   `protobuf:"bytes,12,opt,name=Arg_12,json=Arg12" json:"Arg_12,omitempty"`
	Arg_13 *PtrToLHWellMessage                 `protobuf:"bytes,13,opt,name=Arg_13,json=Arg13" json:"Arg_13,omitempty"`
	Arg_14 *MapstringPtrToLHWellMessageMessage `protobuf:"bytes,14,opt,name=Arg_14,json=Arg14" json:"Arg_14,omitempty"`
	Arg_15 float64                             `protobuf:"fixed64,15,opt,name=Arg_15,json=Arg15" json:"Arg_15,omitempty"`
	Arg_16 float64                             `protobuf:"fixed64,16,opt,name=Arg_16,json=Arg16" json:"Arg_16,omitempty"`
	Arg_17 float64                             `protobuf:"fixed64,17,opt,name=Arg_17,json=Arg17" json:"Arg_17,omitempty"`
	Arg_18 float64                             `protobuf:"fixed64,18,opt,name=Arg_18,json=Arg18" json:"Arg_18,omitempty"`
	Arg_19 float64                             `protobuf:"fixed64,19,opt,name=Arg_19,json=Arg19" json:"Arg_19,omitempty"`
	Arg_20 *BBoxMessage                        `protobuf:"bytes,20,opt,name=Arg_20,json=Arg20" json:"Arg_20,omitempty"`
}

func (m *LHPlateMessage) Reset()                    { *m = LHPlateMessage{} }
func (m *LHPlateMessage) String() string            { return proto.CompactTextString(m) }
func (*LHPlateMessage) ProtoMessage()               {}
func (*LHPlateMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{101} }

func (m *LHPlateMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHPlateMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *LHPlateMessage) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

func (m *LHPlateMessage) GetArg_4() string {
	if m != nil {
		return m.Arg_4
	}
	return ""
}

func (m *LHPlateMessage) GetArg_5() string {
	if m != nil {
		return m.Arg_5
	}
	return ""
}

func (m *LHPlateMessage) GetArg_6() string {
	if m != nil {
		return m.Arg_6
	}
	return ""
}

func (m *LHPlateMessage) GetArg_7() int64 {
	if m != nil {
		return m.Arg_7
	}
	return 0
}

func (m *LHPlateMessage) GetArg_8() int64 {
	if m != nil {
		return m.Arg_8
	}
	return 0
}

func (m *LHPlateMessage) GetArg_9() int64 {
	if m != nil {
		return m.Arg_9
	}
	return 0
}

func (m *LHPlateMessage) GetArg_10() *MapstringPtrToLHWellMessageMessage {
	if m != nil {
		return m.Arg_10
	}
	return nil
}

func (m *LHPlateMessage) GetArg_11() *ArrayOfArrayOfPtrToLHWellMessage {
	if m != nil {
		return m.Arg_11
	}
	return nil
}

func (m *LHPlateMessage) GetArg_12() *ArrayOfArrayOfPtrToLHWellMessage {
	if m != nil {
		return m.Arg_12
	}
	return nil
}

func (m *LHPlateMessage) GetArg_13() *PtrToLHWellMessage {
	if m != nil {
		return m.Arg_13
	}
	return nil
}

func (m *LHPlateMessage) GetArg_14() *MapstringPtrToLHWellMessageMessage {
	if m != nil {
		return m.Arg_14
	}
	return nil
}

func (m *LHPlateMessage) GetArg_15() float64 {
	if m != nil {
		return m.Arg_15
	}
	return 0
}

func (m *LHPlateMessage) GetArg_16() float64 {
	if m != nil {
		return m.Arg_16
	}
	return 0
}

func (m *LHPlateMessage) GetArg_17() float64 {
	if m != nil {
		return m.Arg_17
	}
	return 0
}

func (m *LHPlateMessage) GetArg_18() float64 {
	if m != nil {
		return m.Arg_18
	}
	return 0
}

func (m *LHPlateMessage) GetArg_19() float64 {
	if m != nil {
		return m.Arg_19
	}
	return 0
}

func (m *LHPlateMessage) GetArg_20() *BBoxMessage {
	if m != nil {
		return m.Arg_20
	}
	return nil
}

type ArrayOfPtrToLHTipMessage struct {
	Arg_1 []*PtrToLHTipMessage `protobuf:"bytes,1,rep,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfPtrToLHTipMessage) Reset()                    { *m = ArrayOfPtrToLHTipMessage{} }
func (m *ArrayOfPtrToLHTipMessage) String() string            { return proto.CompactTextString(m) }
func (*ArrayOfPtrToLHTipMessage) ProtoMessage()               {}
func (*ArrayOfPtrToLHTipMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{102} }

func (m *ArrayOfPtrToLHTipMessage) GetArg_1() []*PtrToLHTipMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type ArrayOfPtrToLHChannelParameterMessage struct {
	Arg_1 []*PtrToLHChannelParameterMessage `protobuf:"bytes,1,rep,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfPtrToLHChannelParameterMessage) Reset()         { *m = ArrayOfPtrToLHChannelParameterMessage{} }
func (m *ArrayOfPtrToLHChannelParameterMessage) String() string { return proto.CompactTextString(m) }
func (*ArrayOfPtrToLHChannelParameterMessage) ProtoMessage()    {}
func (*ArrayOfPtrToLHChannelParameterMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{103}
}

func (m *ArrayOfPtrToLHChannelParameterMessage) GetArg_1() []*PtrToLHChannelParameterMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type CoordinatesMessage struct {
	Arg_1 float64 `protobuf:"fixed64,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 float64 `protobuf:"fixed64,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3 float64 `protobuf:"fixed64,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
}

func (m *CoordinatesMessage) Reset()                    { *m = CoordinatesMessage{} }
func (m *CoordinatesMessage) String() string            { return proto.CompactTextString(m) }
func (*CoordinatesMessage) ProtoMessage()               {}
func (*CoordinatesMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

func (m *CoordinatesMessage) GetArg_1() float64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

func (m *CoordinatesMessage) GetArg_2() float64 {
	if m != nil {
		return m.Arg_2
	}
	return 0
}

func (m *CoordinatesMessage) GetArg_3() float64 {
	if m != nil {
		return m.Arg_3
	}
	return 0
}

type MapstringstringMessageFieldEntry struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MapstringstringMessageFieldEntry) Reset()         { *m = MapstringstringMessageFieldEntry{} }
func (m *MapstringstringMessageFieldEntry) String() string { return proto.CompactTextString(m) }
func (*MapstringstringMessageFieldEntry) ProtoMessage()    {}
func (*MapstringstringMessageFieldEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{105}
}

func (m *MapstringstringMessageFieldEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MapstringstringMessageFieldEntry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MapstringstringMessage struct {
	MapField []*MapstringstringMessageFieldEntry `protobuf:"bytes,1,rep,name=map_field,json=mapField" json:"map_field,omitempty"`
}

func (m *MapstringstringMessage) Reset()                    { *m = MapstringstringMessage{} }
func (m *MapstringstringMessage) String() string            { return proto.CompactTextString(m) }
func (*MapstringstringMessage) ProtoMessage()               {}
func (*MapstringstringMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{106} }

func (m *MapstringstringMessage) GetMapField() []*MapstringstringMessageFieldEntry {
	if m != nil {
		return m.MapField
	}
	return nil
}

type PtrToLHPlateMessage struct {
	Arg_1 *LHPlateMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHPlateMessage) Reset()                    { *m = PtrToLHPlateMessage{} }
func (m *PtrToLHPlateMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHPlateMessage) ProtoMessage()               {}
func (*PtrToLHPlateMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *PtrToLHPlateMessage) GetArg_1() *LHPlateMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type LHTipwasteMessage struct {
	Arg_1  string              `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2  string              `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3  string              `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4  string              `protobuf:"bytes,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5  int64               `protobuf:"varint,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6  int64               `protobuf:"varint,6,opt,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
	Arg_7  float64             `protobuf:"fixed64,7,opt,name=Arg_7,json=Arg7" json:"Arg_7,omitempty"`
	Arg_8  float64             `protobuf:"fixed64,8,opt,name=Arg_8,json=Arg8" json:"Arg_8,omitempty"`
	Arg_9  float64             `protobuf:"fixed64,9,opt,name=Arg_9,json=Arg9" json:"Arg_9,omitempty"`
	Arg_10 float64             `protobuf:"fixed64,10,opt,name=Arg_10,json=Arg10" json:"Arg_10,omitempty"`
	Arg_11 *PtrToLHWellMessage `protobuf:"bytes,11,opt,name=Arg_11,json=Arg11" json:"Arg_11,omitempty"`
	Arg_12 *BBoxMessage        `protobuf:"bytes,12,opt,name=Arg_12,json=Arg12" json:"Arg_12,omitempty"`
}

func (m *LHTipwasteMessage) Reset()                    { *m = LHTipwasteMessage{} }
func (m *LHTipwasteMessage) String() string            { return proto.CompactTextString(m) }
func (*LHTipwasteMessage) ProtoMessage()               {}
func (*LHTipwasteMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *LHTipwasteMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHTipwasteMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *LHTipwasteMessage) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

func (m *LHTipwasteMessage) GetArg_4() string {
	if m != nil {
		return m.Arg_4
	}
	return ""
}

func (m *LHTipwasteMessage) GetArg_5() int64 {
	if m != nil {
		return m.Arg_5
	}
	return 0
}

func (m *LHTipwasteMessage) GetArg_6() int64 {
	if m != nil {
		return m.Arg_6
	}
	return 0
}

func (m *LHTipwasteMessage) GetArg_7() float64 {
	if m != nil {
		return m.Arg_7
	}
	return 0
}

func (m *LHTipwasteMessage) GetArg_8() float64 {
	if m != nil {
		return m.Arg_8
	}
	return 0
}

func (m *LHTipwasteMessage) GetArg_9() float64 {
	if m != nil {
		return m.Arg_9
	}
	return 0
}

func (m *LHTipwasteMessage) GetArg_10() float64 {
	if m != nil {
		return m.Arg_10
	}
	return 0
}

func (m *LHTipwasteMessage) GetArg_11() *PtrToLHWellMessage {
	if m != nil {
		return m.Arg_11
	}
	return nil
}

func (m *LHTipwasteMessage) GetArg_12() *BBoxMessage {
	if m != nil {
		return m.Arg_12
	}
	return nil
}

type LHHeadMessage struct {
	Arg_1 string `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 string `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3 string `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	// PtrToLHAdaptorMessage Arg_4 = 4;
	Arg_5 *PtrToLHChannelParameterMessage `protobuf:"bytes,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6 *TipLoadingBehaviourMessage     `protobuf:"bytes,6,opt,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
	Arg_7 int64                           `protobuf:"varint,7,opt,name=Arg_7,json=Arg7" json:"Arg_7,omitempty"`
}

func (m *LHHeadMessage) Reset()                    { *m = LHHeadMessage{} }
func (m *LHHeadMessage) String() string            { return proto.CompactTextString(m) }
func (*LHHeadMessage) ProtoMessage()               {}
func (*LHHeadMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

func (m *LHHeadMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHHeadMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *LHHeadMessage) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

func (m *LHHeadMessage) GetArg_5() *PtrToLHChannelParameterMessage {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *LHHeadMessage) GetArg_6() *TipLoadingBehaviourMessage {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

func (m *LHHeadMessage) GetArg_7() int64 {
	if m != nil {
		return m.Arg_7
	}
	return 0
}

type TipLoadingBehaviourMessage struct {
	Arg_1 bool  `protobuf:"varint,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 bool  `protobuf:"varint,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3 int64 `protobuf:"varint,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4 int64 `protobuf:"varint,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5 int64 `protobuf:"varint,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6 int64 `protobuf:"varint,6,opt,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
}

func (m *TipLoadingBehaviourMessage) Reset()                    { *m = TipLoadingBehaviourMessage{} }
func (m *TipLoadingBehaviourMessage) String() string            { return proto.CompactTextString(m) }
func (*TipLoadingBehaviourMessage) ProtoMessage()               {}
func (*TipLoadingBehaviourMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *TipLoadingBehaviourMessage) GetArg_1() bool {
	if m != nil {
		return m.Arg_1
	}
	return false
}

func (m *TipLoadingBehaviourMessage) GetArg_2() bool {
	if m != nil {
		return m.Arg_2
	}
	return false
}

func (m *TipLoadingBehaviourMessage) GetArg_3() int64 {
	if m != nil {
		return m.Arg_3
	}
	return 0
}

func (m *TipLoadingBehaviourMessage) GetArg_4() int64 {
	if m != nil {
		return m.Arg_4
	}
	return 0
}

func (m *TipLoadingBehaviourMessage) GetArg_5() int64 {
	if m != nil {
		return m.Arg_5
	}
	return 0
}

func (m *TipLoadingBehaviourMessage) GetArg_6() int64 {
	if m != nil {
		return m.Arg_6
	}
	return 0
}

type LHHeadAssemblyPositionMessage struct {
	Offset    *CoordinatesMessage `protobuf:"bytes,1,opt,name=Offset" json:"Offset,omitempty"`
	HeadIndex int64               `protobuf:"varint,2,opt,name=HeadIndex" json:"HeadIndex,omitempty"`
}

func (m *LHHeadAssemblyPositionMessage) Reset()                    { *m = LHHeadAssemblyPositionMessage{} }
func (m *LHHeadAssemblyPositionMessage) String() string            { return proto.CompactTextString(m) }
func (*LHHeadAssemblyPositionMessage) ProtoMessage()               {}
func (*LHHeadAssemblyPositionMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *LHHeadAssemblyPositionMessage) GetOffset() *CoordinatesMessage {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *LHHeadAssemblyPositionMessage) GetHeadIndex() int64 {
	if m != nil {
		return m.HeadIndex
	}
	return 0
}

type PtrToLHHeadAssemblyPositionMessage struct {
	Val *LHHeadAssemblyPositionMessage `protobuf:"bytes,1,opt,name=val" json:"val,omitempty"`
}

func (m *PtrToLHHeadAssemblyPositionMessage) Reset()         { *m = PtrToLHHeadAssemblyPositionMessage{} }
func (m *PtrToLHHeadAssemblyPositionMessage) String() string { return proto.CompactTextString(m) }
func (*PtrToLHHeadAssemblyPositionMessage) ProtoMessage()    {}
func (*PtrToLHHeadAssemblyPositionMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{112}
}

func (m *PtrToLHHeadAssemblyPositionMessage) GetVal() *LHHeadAssemblyPositionMessage {
	if m != nil {
		return m.Val
	}
	return nil
}

type ArrayOfPtrToLHHeadAssemblyPositionMessage struct {
	Val []*PtrToLHHeadAssemblyPositionMessage `protobuf:"bytes,1,rep,name=val" json:"val,omitempty"`
}

func (m *ArrayOfPtrToLHHeadAssemblyPositionMessage) Reset() {
	*m = ArrayOfPtrToLHHeadAssemblyPositionMessage{}
}
func (m *ArrayOfPtrToLHHeadAssemblyPositionMessage) String() string { return proto.CompactTextString(m) }
func (*ArrayOfPtrToLHHeadAssemblyPositionMessage) ProtoMessage()    {}
func (*ArrayOfPtrToLHHeadAssemblyPositionMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{113}
}

func (m *ArrayOfPtrToLHHeadAssemblyPositionMessage) GetVal() []*PtrToLHHeadAssemblyPositionMessage {
	if m != nil {
		return m.Val
	}
	return nil
}

type LHHeadAssemblyMessage struct {
	Positions      *ArrayOfPtrToLHHeadAssemblyPositionMessage `protobuf:"bytes,1,opt,name=Positions" json:"Positions,omitempty"`
	MotionLimits   *PtrToBBoxMessage                          `protobuf:"bytes,2,opt,name=MotionLimits" json:"MotionLimits,omitempty"`
	VelocityLimits *PtrToVelocityRangeMessage                 `protobuf:"bytes,3,opt,name=VelocityLimits" json:"VelocityLimits,omitempty"`
}

func (m *LHHeadAssemblyMessage) Reset()                    { *m = LHHeadAssemblyMessage{} }
func (m *LHHeadAssemblyMessage) String() string            { return proto.CompactTextString(m) }
func (*LHHeadAssemblyMessage) ProtoMessage()               {}
func (*LHHeadAssemblyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *LHHeadAssemblyMessage) GetPositions() *ArrayOfPtrToLHHeadAssemblyPositionMessage {
	if m != nil {
		return m.Positions
	}
	return nil
}

func (m *LHHeadAssemblyMessage) GetMotionLimits() *PtrToBBoxMessage {
	if m != nil {
		return m.MotionLimits
	}
	return nil
}

func (m *LHHeadAssemblyMessage) GetVelocityLimits() *PtrToVelocityRangeMessage {
	if m != nil {
		return m.VelocityLimits
	}
	return nil
}

type PtrToLHHeadAssemblyMessage struct {
	Val *LHHeadAssemblyMessage `protobuf:"bytes,1,opt,name=val" json:"val,omitempty"`
}

func (m *PtrToLHHeadAssemblyMessage) Reset()                    { *m = PtrToLHHeadAssemblyMessage{} }
func (m *PtrToLHHeadAssemblyMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHHeadAssemblyMessage) ProtoMessage()               {}
func (*PtrToLHHeadAssemblyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *PtrToLHHeadAssemblyMessage) GetVal() *LHHeadAssemblyMessage {
	if m != nil {
		return m.Val
	}
	return nil
}

type ArrayOfPtrToLHHeadAssembliesMessage struct {
	Val []*PtrToLHHeadAssemblyMessage `protobuf:"bytes,1,rep,name=val" json:"val,omitempty"`
}

func (m *ArrayOfPtrToLHHeadAssembliesMessage) Reset()         { *m = ArrayOfPtrToLHHeadAssembliesMessage{} }
func (m *ArrayOfPtrToLHHeadAssembliesMessage) String() string { return proto.CompactTextString(m) }
func (*ArrayOfPtrToLHHeadAssembliesMessage) ProtoMessage()    {}
func (*ArrayOfPtrToLHHeadAssembliesMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{116}
}

func (m *ArrayOfPtrToLHHeadAssembliesMessage) GetVal() []*PtrToLHHeadAssemblyMessage {
	if m != nil {
		return m.Val
	}
	return nil
}

type ArrayOfPtrToLHAdaptorMessage struct {
	Arg_1 []*PtrToLHAdaptorMessage `protobuf:"bytes,1,rep,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfPtrToLHAdaptorMessage) Reset()                    { *m = ArrayOfPtrToLHAdaptorMessage{} }
func (m *ArrayOfPtrToLHAdaptorMessage) String() string            { return proto.CompactTextString(m) }
func (*ArrayOfPtrToLHAdaptorMessage) ProtoMessage()               {}
func (*ArrayOfPtrToLHAdaptorMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *ArrayOfPtrToLHAdaptorMessage) GetArg_1() []*PtrToLHAdaptorMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type PtrToLHHeadMessage struct {
	Arg_1 *LHHeadMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHHeadMessage) Reset()                    { *m = PtrToLHHeadMessage{} }
func (m *PtrToLHHeadMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHHeadMessage) ProtoMessage()               {}
func (*PtrToLHHeadMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *PtrToLHHeadMessage) GetArg_1() *LHHeadMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type PtrToLHTipboxMessage struct {
	Arg_1 *LHTipboxMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHTipboxMessage) Reset()                    { *m = PtrToLHTipboxMessage{} }
func (m *PtrToLHTipboxMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHTipboxMessage) ProtoMessage()               {}
func (*PtrToLHTipboxMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *PtrToLHTipboxMessage) GetArg_1() *LHTipboxMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type VolumeMessage struct {
	Arg_1 *PtrToConcreteMeasurementMessage `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
}

func (m *VolumeMessage) Reset()                    { *m = VolumeMessage{} }
func (m *VolumeMessage) String() string            { return proto.CompactTextString(m) }
func (*VolumeMessage) ProtoMessage()               {}
func (*VolumeMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *VolumeMessage) GetArg_1() *PtrToConcreteMeasurementMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type ConcentrationMessage struct {
	Arg_1 *PtrToConcreteMeasurementMessage `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
}

func (m *ConcentrationMessage) Reset()                    { *m = ConcentrationMessage{} }
func (m *ConcentrationMessage) String() string            { return proto.CompactTextString(m) }
func (*ConcentrationMessage) ProtoMessage()               {}
func (*ConcentrationMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *ConcentrationMessage) GetArg_1() *PtrToConcreteMeasurementMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type FlowRateMessage struct {
	Arg_1 *PtrToConcreteMeasurementMessage `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
}

func (m *FlowRateMessage) Reset()                    { *m = FlowRateMessage{} }
func (m *FlowRateMessage) String() string            { return proto.CompactTextString(m) }
func (*FlowRateMessage) ProtoMessage()               {}
func (*FlowRateMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *FlowRateMessage) GetArg_1() *PtrToConcreteMeasurementMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type ArrayOfArrayOfPtrToLHTipMessage struct {
	Arg_1 []*ArrayOfPtrToLHTipMessage `protobuf:"bytes,1,rep,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfArrayOfPtrToLHTipMessage) Reset()         { *m = ArrayOfArrayOfPtrToLHTipMessage{} }
func (m *ArrayOfArrayOfPtrToLHTipMessage) String() string { return proto.CompactTextString(m) }
func (*ArrayOfArrayOfPtrToLHTipMessage) ProtoMessage()    {}
func (*ArrayOfArrayOfPtrToLHTipMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{123}
}

func (m *ArrayOfArrayOfPtrToLHTipMessage) GetArg_1() []*ArrayOfPtrToLHTipMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type LHTipMessage struct {
	Arg_1           string             `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2           string             `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3           string             `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4           bool               `protobuf:"varint,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5           *VolumeMessage     `protobuf:"bytes,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6           *VolumeMessage     `protobuf:"bytes,6,opt,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
	Arg_7           bool               `protobuf:"varint,7,opt,name=Arg_7,json=Arg7" json:"Arg_7,omitempty"`
	Arg_8           *PtrToShapeMessage `protobuf:"bytes,8,opt,name=Arg_8,json=Arg8" json:"Arg_8,omitempty"`
	Arg_9           *BBoxMessage       `protobuf:"bytes,9,opt,name=Arg_9,json=Arg9" json:"Arg_9,omitempty"`
	EffectiveHeight float64            `protobuf:"fixed64,10,opt,name=EffectiveHeight" json:"EffectiveHeight,omitempty"`
}

func (m *LHTipMessage) Reset()                    { *m = LHTipMessage{} }
func (m *LHTipMessage) String() string            { return proto.CompactTextString(m) }
func (*LHTipMessage) ProtoMessage()               {}
func (*LHTipMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{124} }

func (m *LHTipMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHTipMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *LHTipMessage) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

func (m *LHTipMessage) GetArg_4() bool {
	if m != nil {
		return m.Arg_4
	}
	return false
}

func (m *LHTipMessage) GetArg_5() *VolumeMessage {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *LHTipMessage) GetArg_6() *VolumeMessage {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

func (m *LHTipMessage) GetArg_7() bool {
	if m != nil {
		return m.Arg_7
	}
	return false
}

func (m *LHTipMessage) GetArg_8() *PtrToShapeMessage {
	if m != nil {
		return m.Arg_8
	}
	return nil
}

func (m *LHTipMessage) GetArg_9() *BBoxMessage {
	if m != nil {
		return m.Arg_9
	}
	return nil
}

func (m *LHTipMessage) GetEffectiveHeight() float64 {
	if m != nil {
		return m.EffectiveHeight
	}
	return 0
}

type LHDeviceMessage struct {
	Arg_1 string `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 string `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3 string `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
}

func (m *LHDeviceMessage) Reset()                    { *m = LHDeviceMessage{} }
func (m *LHDeviceMessage) String() string            { return proto.CompactTextString(m) }
func (*LHDeviceMessage) ProtoMessage()               {}
func (*LHDeviceMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

func (m *LHDeviceMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHDeviceMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *LHDeviceMessage) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

type ArrayOfArrayOfPtrToLHWellMessage struct {
	Arg_1 []*ArrayOfPtrToLHWellMessage `protobuf:"bytes,1,rep,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfArrayOfPtrToLHWellMessage) Reset()         { *m = ArrayOfArrayOfPtrToLHWellMessage{} }
func (m *ArrayOfArrayOfPtrToLHWellMessage) String() string { return proto.CompactTextString(m) }
func (*ArrayOfArrayOfPtrToLHWellMessage) ProtoMessage()    {}
func (*ArrayOfArrayOfPtrToLHWellMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{126}
}

func (m *ArrayOfArrayOfPtrToLHWellMessage) GetArg_1() []*ArrayOfPtrToLHWellMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type LHWellMessage struct {
	Arg_1  string                      `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2  string                      `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3  *WellCoordsMessage          `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4  float64                     `protobuf:"fixed64,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5  *PtrToLHComponentMessage    `protobuf:"bytes,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6  float64                     `protobuf:"fixed64,6,opt,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
	Arg_7  *PtrToShapeMessage          `protobuf:"bytes,7,opt,name=Arg_7,json=Arg7" json:"Arg_7,omitempty"`
	Arg_8  int64                       `protobuf:"varint,8,opt,name=Arg_8,json=Arg8" json:"Arg_8,omitempty"`
	Arg_9  *BBoxMessage                `protobuf:"bytes,9,opt,name=Arg_9,json=Arg9" json:"Arg_9,omitempty"`
	Arg_10 float64                     `protobuf:"fixed64,10,opt,name=Arg_10,json=Arg10" json:"Arg_10,omitempty"`
	Arg_11 *MapstringAnyMessageMessage `protobuf:"bytes,11,opt,name=Arg_11,json=Arg11" json:"Arg_11,omitempty"`
}

func (m *LHWellMessage) Reset()                    { *m = LHWellMessage{} }
func (m *LHWellMessage) String() string            { return proto.CompactTextString(m) }
func (*LHWellMessage) ProtoMessage()               {}
func (*LHWellMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

func (m *LHWellMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHWellMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *LHWellMessage) GetArg_3() *WellCoordsMessage {
	if m != nil {
		return m.Arg_3
	}
	return nil
}

func (m *LHWellMessage) GetArg_4() float64 {
	if m != nil {
		return m.Arg_4
	}
	return 0
}

func (m *LHWellMessage) GetArg_5() *PtrToLHComponentMessage {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *LHWellMessage) GetArg_6() float64 {
	if m != nil {
		return m.Arg_6
	}
	return 0
}

func (m *LHWellMessage) GetArg_7() *PtrToShapeMessage {
	if m != nil {
		return m.Arg_7
	}
	return nil
}

func (m *LHWellMessage) GetArg_8() int64 {
	if m != nil {
		return m.Arg_8
	}
	return 0
}

func (m *LHWellMessage) GetArg_9() *BBoxMessage {
	if m != nil {
		return m.Arg_9
	}
	return nil
}

func (m *LHWellMessage) GetArg_10() float64 {
	if m != nil {
		return m.Arg_10
	}
	return 0
}

func (m *LHWellMessage) GetArg_11() *MapstringAnyMessageMessage {
	if m != nil {
		return m.Arg_11
	}
	return nil
}

type ArrayOfLHDeviceMessage struct {
	Arg_1 []*LHDeviceMessage `protobuf:"bytes,1,rep,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfLHDeviceMessage) Reset()                    { *m = ArrayOfLHDeviceMessage{} }
func (m *ArrayOfLHDeviceMessage) String() string            { return proto.CompactTextString(m) }
func (*ArrayOfLHDeviceMessage) ProtoMessage()               {}
func (*ArrayOfLHDeviceMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *ArrayOfLHDeviceMessage) GetArg_1() []*LHDeviceMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type PtrToLHWellMessage struct {
	Arg_1 *LHWellMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHWellMessage) Reset()                    { *m = PtrToLHWellMessage{} }
func (m *PtrToLHWellMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHWellMessage) ProtoMessage()               {}
func (*PtrToLHWellMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

func (m *PtrToLHWellMessage) GetArg_1() *LHWellMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type BBoxMessage struct {
	Arg_1 *CoordinatesMessage `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 *CoordinatesMessage `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
}

func (m *BBoxMessage) Reset()                    { *m = BBoxMessage{} }
func (m *BBoxMessage) String() string            { return proto.CompactTextString(m) }
func (*BBoxMessage) ProtoMessage()               {}
func (*BBoxMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *BBoxMessage) GetArg_1() *CoordinatesMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

func (m *BBoxMessage) GetArg_2() *CoordinatesMessage {
	if m != nil {
		return m.Arg_2
	}
	return nil
}

type PtrToBBoxMessage struct {
	Val *BBoxMessage `protobuf:"bytes,1,opt,name=val" json:"val,omitempty"`
}

func (m *PtrToBBoxMessage) Reset()                    { *m = PtrToBBoxMessage{} }
func (m *PtrToBBoxMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToBBoxMessage) ProtoMessage()               {}
func (*PtrToBBoxMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *PtrToBBoxMessage) GetVal() *BBoxMessage {
	if m != nil {
		return m.Val
	}
	return nil
}

type ArrayOfPtrToLHWellMessage struct {
	Arg_1 []*PtrToLHWellMessage `protobuf:"bytes,1,rep,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *ArrayOfPtrToLHWellMessage) Reset()                    { *m = ArrayOfPtrToLHWellMessage{} }
func (m *ArrayOfPtrToLHWellMessage) String() string            { return proto.CompactTextString(m) }
func (*ArrayOfPtrToLHWellMessage) ProtoMessage()               {}
func (*ArrayOfPtrToLHWellMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *ArrayOfPtrToLHWellMessage) GetArg_1() []*PtrToLHWellMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type MapstringPtrToLHWellMessageMessageFieldEntry struct {
	Key   string              `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *PtrToLHWellMessage `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MapstringPtrToLHWellMessageMessageFieldEntry) Reset() {
	*m = MapstringPtrToLHWellMessageMessageFieldEntry{}
}
func (m *MapstringPtrToLHWellMessageMessageFieldEntry) String() string {
	return proto.CompactTextString(m)
}
func (*MapstringPtrToLHWellMessageMessageFieldEntry) ProtoMessage() {}
func (*MapstringPtrToLHWellMessageMessageFieldEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{133}
}

func (m *MapstringPtrToLHWellMessageMessageFieldEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MapstringPtrToLHWellMessageMessageFieldEntry) GetValue() *PtrToLHWellMessage {
	if m != nil {
		return m.Value
	}
	return nil
}

type MapstringPtrToLHWellMessageMessage struct {
	MapField []*MapstringPtrToLHWellMessageMessageFieldEntry `protobuf:"bytes,1,rep,name=map_field,json=mapField" json:"map_field,omitempty"`
}

func (m *MapstringPtrToLHWellMessageMessage) Reset()         { *m = MapstringPtrToLHWellMessageMessage{} }
func (m *MapstringPtrToLHWellMessageMessage) String() string { return proto.CompactTextString(m) }
func (*MapstringPtrToLHWellMessageMessage) ProtoMessage()    {}
func (*MapstringPtrToLHWellMessageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{134}
}

func (m *MapstringPtrToLHWellMessageMessage) GetMapField() []*MapstringPtrToLHWellMessageMessageFieldEntry {
	if m != nil {
		return m.MapField
	}
	return nil
}

type WellCoordsMessage struct {
	Arg_1 int64 `protobuf:"varint,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 int64 `protobuf:"varint,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
}

func (m *WellCoordsMessage) Reset()                    { *m = WellCoordsMessage{} }
func (m *WellCoordsMessage) String() string            { return proto.CompactTextString(m) }
func (*WellCoordsMessage) ProtoMessage()               {}
func (*WellCoordsMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *WellCoordsMessage) GetArg_1() int64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

func (m *WellCoordsMessage) GetArg_2() int64 {
	if m != nil {
		return m.Arg_2
	}
	return 0
}

type PtrToLHComponentMessage struct {
	Arg_1 *LHComponentMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToLHComponentMessage) Reset()                    { *m = PtrToLHComponentMessage{} }
func (m *PtrToLHComponentMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToLHComponentMessage) ProtoMessage()               {}
func (*PtrToLHComponentMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *PtrToLHComponentMessage) GetArg_1() *LHComponentMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type ShapeMessage struct {
	Arg_1 string  `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 string  `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3 float64 `protobuf:"fixed64,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4 float64 `protobuf:"fixed64,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5 float64 `protobuf:"fixed64,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
}

func (m *ShapeMessage) Reset()                    { *m = ShapeMessage{} }
func (m *ShapeMessage) String() string            { return proto.CompactTextString(m) }
func (*ShapeMessage) ProtoMessage()               {}
func (*ShapeMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

func (m *ShapeMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *ShapeMessage) GetArg_2() string {
	if m != nil {
		return m.Arg_2
	}
	return ""
}

func (m *ShapeMessage) GetArg_3() float64 {
	if m != nil {
		return m.Arg_3
	}
	return 0
}

func (m *ShapeMessage) GetArg_4() float64 {
	if m != nil {
		return m.Arg_4
	}
	return 0
}

func (m *ShapeMessage) GetArg_5() float64 {
	if m != nil {
		return m.Arg_5
	}
	return 0
}

type PtrToShapeMessage struct {
	Arg_1 *ShapeMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToShapeMessage) Reset()                    { *m = PtrToShapeMessage{} }
func (m *PtrToShapeMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToShapeMessage) ProtoMessage()               {}
func (*PtrToShapeMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *PtrToShapeMessage) GetArg_1() *ShapeMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type ConcreteMeasurementMessage struct {
	Arg_1 float64           `protobuf:"fixed64,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 *PtrToUnitMessage `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
}

func (m *ConcreteMeasurementMessage) Reset()                    { *m = ConcreteMeasurementMessage{} }
func (m *ConcreteMeasurementMessage) String() string            { return proto.CompactTextString(m) }
func (*ConcreteMeasurementMessage) ProtoMessage()               {}
func (*ConcreteMeasurementMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *ConcreteMeasurementMessage) GetArg_1() float64 {
	if m != nil {
		return m.Arg_1
	}
	return 0
}

func (m *ConcreteMeasurementMessage) GetArg_2() *PtrToUnitMessage {
	if m != nil {
		return m.Arg_2
	}
	return nil
}

type PtrToConcreteMeasurementMessage struct {
	Arg_1 *ConcreteMeasurementMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToConcreteMeasurementMessage) Reset()         { *m = PtrToConcreteMeasurementMessage{} }
func (m *PtrToConcreteMeasurementMessage) String() string { return proto.CompactTextString(m) }
func (*PtrToConcreteMeasurementMessage) ProtoMessage()    {}
func (*PtrToConcreteMeasurementMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{140}
}

func (m *PtrToConcreteMeasurementMessage) GetArg_1() *ConcreteMeasurementMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type LHComponentMessage struct {
	Arg_1  string                      `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2  *BlockIDMessage             `protobuf:"bytes,2,opt,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3  string                      `protobuf:"bytes,3,opt,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4  string                      `protobuf:"bytes,4,opt,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5  string                      `protobuf:"bytes,5,opt,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6  int64                       `protobuf:"varint,6,opt,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
	Arg_7  string                      `protobuf:"bytes,7,opt,name=Arg_7,json=Arg7" json:"Arg_7,omitempty"`
	Arg_8  string                      `protobuf:"bytes,8,opt,name=Arg_8,json=Arg8" json:"Arg_8,omitempty"`
	Arg_9  float64                     `protobuf:"fixed64,9,opt,name=Arg_9,json=Arg9" json:"Arg_9,omitempty"`
	Arg_10 float64                     `protobuf:"fixed64,10,opt,name=Arg_10,json=Arg10" json:"Arg_10,omitempty"`
	Arg_11 string                      `protobuf:"bytes,11,opt,name=Arg_11,json=Arg11" json:"Arg_11,omitempty"`
	Arg_12 string                      `protobuf:"bytes,12,opt,name=Arg_12,json=Arg12" json:"Arg_12,omitempty"`
	Arg_13 float64                     `protobuf:"fixed64,13,opt,name=Arg_13,json=Arg13" json:"Arg_13,omitempty"`
	Arg_14 float64                     `protobuf:"fixed64,14,opt,name=Arg_14,json=Arg14" json:"Arg_14,omitempty"`
	Arg_15 float64                     `protobuf:"fixed64,15,opt,name=Arg_15,json=Arg15" json:"Arg_15,omitempty"`
	Arg_16 float64                     `protobuf:"fixed64,16,opt,name=Arg_16,json=Arg16" json:"Arg_16,omitempty"`
	Arg_17 *MapstringAnyMessageMessage `protobuf:"bytes,17,opt,name=Arg_17,json=Arg17" json:"Arg_17,omitempty"`
	Arg_18 string                      `protobuf:"bytes,18,opt,name=Arg_18,json=Arg18" json:"Arg_18,omitempty"`
	Arg_19 string                      `protobuf:"bytes,19,opt,name=Arg_19,json=Arg19" json:"Arg_19,omitempty"`
	Arg_20 *MapstringAnyMessageMessage `protobuf:"bytes,20,opt,name=Arg_20,json=Arg20" json:"Arg_20,omitempty"`
	Arg_21 *SubComponentMessage        `protobuf:"bytes,21,opt,name=Arg_21,json=Arg21" json:"Arg_21,omitempty"`
}

func (m *LHComponentMessage) Reset()                    { *m = LHComponentMessage{} }
func (m *LHComponentMessage) String() string            { return proto.CompactTextString(m) }
func (*LHComponentMessage) ProtoMessage()               {}
func (*LHComponentMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *LHComponentMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

func (m *LHComponentMessage) GetArg_2() *BlockIDMessage {
	if m != nil {
		return m.Arg_2
	}
	return nil
}

func (m *LHComponentMessage) GetArg_3() string {
	if m != nil {
		return m.Arg_3
	}
	return ""
}

func (m *LHComponentMessage) GetArg_4() string {
	if m != nil {
		return m.Arg_4
	}
	return ""
}

func (m *LHComponentMessage) GetArg_5() string {
	if m != nil {
		return m.Arg_5
	}
	return ""
}

func (m *LHComponentMessage) GetArg_6() int64 {
	if m != nil {
		return m.Arg_6
	}
	return 0
}

func (m *LHComponentMessage) GetArg_7() string {
	if m != nil {
		return m.Arg_7
	}
	return ""
}

func (m *LHComponentMessage) GetArg_8() string {
	if m != nil {
		return m.Arg_8
	}
	return ""
}

func (m *LHComponentMessage) GetArg_9() float64 {
	if m != nil {
		return m.Arg_9
	}
	return 0
}

func (m *LHComponentMessage) GetArg_10() float64 {
	if m != nil {
		return m.Arg_10
	}
	return 0
}

func (m *LHComponentMessage) GetArg_11() string {
	if m != nil {
		return m.Arg_11
	}
	return ""
}

func (m *LHComponentMessage) GetArg_12() string {
	if m != nil {
		return m.Arg_12
	}
	return ""
}

func (m *LHComponentMessage) GetArg_13() float64 {
	if m != nil {
		return m.Arg_13
	}
	return 0
}

func (m *LHComponentMessage) GetArg_14() float64 {
	if m != nil {
		return m.Arg_14
	}
	return 0
}

func (m *LHComponentMessage) GetArg_15() float64 {
	if m != nil {
		return m.Arg_15
	}
	return 0
}

func (m *LHComponentMessage) GetArg_16() float64 {
	if m != nil {
		return m.Arg_16
	}
	return 0
}

func (m *LHComponentMessage) GetArg_17() *MapstringAnyMessageMessage {
	if m != nil {
		return m.Arg_17
	}
	return nil
}

func (m *LHComponentMessage) GetArg_18() string {
	if m != nil {
		return m.Arg_18
	}
	return ""
}

func (m *LHComponentMessage) GetArg_19() string {
	if m != nil {
		return m.Arg_19
	}
	return ""
}

func (m *LHComponentMessage) GetArg_20() *MapstringAnyMessageMessage {
	if m != nil {
		return m.Arg_20
	}
	return nil
}

func (m *LHComponentMessage) GetArg_21() *SubComponentMessage {
	if m != nil {
		return m.Arg_21
	}
	return nil
}

type PtrToUnitMessage struct {
	Arg_1 *UnitMessage `protobuf:"bytes,1,opt,name=arg_1,json=arg1" json:"arg_1,omitempty"`
}

func (m *PtrToUnitMessage) Reset()                    { *m = PtrToUnitMessage{} }
func (m *PtrToUnitMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToUnitMessage) ProtoMessage()               {}
func (*PtrToUnitMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

func (m *PtrToUnitMessage) GetArg_1() *UnitMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type UnitMessage struct {
	JSONUnit []byte `protobuf:"bytes,3,opt,name=JSONUnit,proto3" json:"JSONUnit,omitempty"`
}

func (m *UnitMessage) Reset()                    { *m = UnitMessage{} }
func (m *UnitMessage) String() string            { return proto.CompactTextString(m) }
func (*UnitMessage) ProtoMessage()               {}
func (*UnitMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *UnitMessage) GetJSONUnit() []byte {
	if m != nil {
		return m.JSONUnit
	}
	return nil
}

type BlockIDMessage struct {
	Arg_1 string `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
}

func (m *BlockIDMessage) Reset()                    { *m = BlockIDMessage{} }
func (m *BlockIDMessage) String() string            { return proto.CompactTextString(m) }
func (*BlockIDMessage) ProtoMessage()               {}
func (*BlockIDMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

func (m *BlockIDMessage) GetArg_1() string {
	if m != nil {
		return m.Arg_1
	}
	return ""
}

type TransferRequest struct {
	Arg_1 []string  `protobuf:"bytes,1,rep,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
	Arg_2 []string  `protobuf:"bytes,2,rep,name=Arg_2,json=Arg2" json:"Arg_2,omitempty"`
	Arg_3 []string  `protobuf:"bytes,3,rep,name=Arg_3,json=Arg3" json:"Arg_3,omitempty"`
	Arg_4 []string  `protobuf:"bytes,4,rep,name=Arg_4,json=Arg4" json:"Arg_4,omitempty"`
	Arg_5 []string  `protobuf:"bytes,5,rep,name=Arg_5,json=Arg5" json:"Arg_5,omitempty"`
	Arg_6 []float64 `protobuf:"fixed64,6,rep,packed,name=Arg_6,json=Arg6" json:"Arg_6,omitempty"`
}

func (m *TransferRequest) Reset()                    { *m = TransferRequest{} }
func (m *TransferRequest) String() string            { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()               {}
func (*TransferRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *TransferRequest) GetArg_1() []string {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

func (m *TransferRequest) GetArg_2() []string {
	if m != nil {
		return m.Arg_2
	}
	return nil
}

func (m *TransferRequest) GetArg_3() []string {
	if m != nil {
		return m.Arg_3
	}
	return nil
}

func (m *TransferRequest) GetArg_4() []string {
	if m != nil {
		return m.Arg_4
	}
	return nil
}

func (m *TransferRequest) GetArg_5() []string {
	if m != nil {
		return m.Arg_5
	}
	return nil
}

func (m *TransferRequest) GetArg_6() []float64 {
	if m != nil {
		return m.Arg_6
	}
	return nil
}

type TransferReply struct {
	Ret_1 *CommandStatusMessage `protobuf:"bytes,1,opt,name=Ret_1,json=Ret1" json:"Ret_1,omitempty"`
}

func (m *TransferReply) Reset()                    { *m = TransferReply{} }
func (m *TransferReply) String() string            { return proto.CompactTextString(m) }
func (*TransferReply) ProtoMessage()               {}
func (*TransferReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

func (m *TransferReply) GetRet_1() *CommandStatusMessage {
	if m != nil {
		return m.Ret_1
	}
	return nil
}

type SubComponentMessage struct {
	Arg_1 *AnyMessage `protobuf:"bytes,1,opt,name=Arg_1,json=Arg1" json:"Arg_1,omitempty"`
}

func (m *SubComponentMessage) Reset()                    { *m = SubComponentMessage{} }
func (m *SubComponentMessage) String() string            { return proto.CompactTextString(m) }
func (*SubComponentMessage) ProtoMessage()               {}
func (*SubComponentMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *SubComponentMessage) GetArg_1() *AnyMessage {
	if m != nil {
		return m.Arg_1
	}
	return nil
}

type VelocityMessage struct {
	ConcreteMeasurement *PtrToConcreteMeasurementMessage `protobuf:"bytes,1,opt,name=ConcreteMeasurement" json:"ConcreteMeasurement,omitempty"`
}

func (m *VelocityMessage) Reset()                    { *m = VelocityMessage{} }
func (m *VelocityMessage) String() string            { return proto.CompactTextString(m) }
func (*VelocityMessage) ProtoMessage()               {}
func (*VelocityMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

func (m *VelocityMessage) GetConcreteMeasurement() *PtrToConcreteMeasurementMessage {
	if m != nil {
		return m.ConcreteMeasurement
	}
	return nil
}

type Velocity3DMessage struct {
	X *VelocityMessage `protobuf:"bytes,1,opt,name=X" json:"X,omitempty"`
	Y *VelocityMessage `protobuf:"bytes,2,opt,name=Y" json:"Y,omitempty"`
	Z *VelocityMessage `protobuf:"bytes,3,opt,name=Z" json:"Z,omitempty"`
}

func (m *Velocity3DMessage) Reset()                    { *m = Velocity3DMessage{} }
func (m *Velocity3DMessage) String() string            { return proto.CompactTextString(m) }
func (*Velocity3DMessage) ProtoMessage()               {}
func (*Velocity3DMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149} }

func (m *Velocity3DMessage) GetX() *VelocityMessage {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *Velocity3DMessage) GetY() *VelocityMessage {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *Velocity3DMessage) GetZ() *VelocityMessage {
	if m != nil {
		return m.Z
	}
	return nil
}

type PtrToVelocity3DMessage struct {
	Val *Velocity3DMessage `protobuf:"bytes,1,opt,name=val" json:"val,omitempty"`
}

func (m *PtrToVelocity3DMessage) Reset()                    { *m = PtrToVelocity3DMessage{} }
func (m *PtrToVelocity3DMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToVelocity3DMessage) ProtoMessage()               {}
func (*PtrToVelocity3DMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{150} }

func (m *PtrToVelocity3DMessage) GetVal() *Velocity3DMessage {
	if m != nil {
		return m.Val
	}
	return nil
}

type VelocityRangeMessage struct {
	Min *PtrToVelocity3DMessage `protobuf:"bytes,1,opt,name=Min" json:"Min,omitempty"`
	Max *PtrToVelocity3DMessage `protobuf:"bytes,2,opt,name=Max" json:"Max,omitempty"`
}

func (m *VelocityRangeMessage) Reset()                    { *m = VelocityRangeMessage{} }
func (m *VelocityRangeMessage) String() string            { return proto.CompactTextString(m) }
func (*VelocityRangeMessage) ProtoMessage()               {}
func (*VelocityRangeMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{151} }

func (m *VelocityRangeMessage) GetMin() *PtrToVelocity3DMessage {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *VelocityRangeMessage) GetMax() *PtrToVelocity3DMessage {
	if m != nil {
		return m.Max
	}
	return nil
}

type PtrToVelocityRangeMessage struct {
	Val *VelocityRangeMessage `protobuf:"bytes,1,opt,name=val" json:"val,omitempty"`
}

func (m *PtrToVelocityRangeMessage) Reset()                    { *m = PtrToVelocityRangeMessage{} }
func (m *PtrToVelocityRangeMessage) String() string            { return proto.CompactTextString(m) }
func (*PtrToVelocityRangeMessage) ProtoMessage()               {}
func (*PtrToVelocityRangeMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{152} }

func (m *PtrToVelocityRangeMessage) GetVal() *VelocityRangeMessage {
	if m != nil {
		return m.Val
	}
	return nil
}

func init() {
	proto.RegisterType((*MapMessage)(nil), "lh.MapMessage")
	proto.RegisterType((*AnyMessage)(nil), "lh.AnyMessage")
	proto.RegisterType((*GetCapabilitiesRequest)(nil), "lh.GetCapabilitiesRequest")
	proto.RegisterType((*GetCapabilitiesReply)(nil), "lh.GetCapabilitiesReply")
	proto.RegisterType((*LoadTipsRequest)(nil), "lh.LoadTipsRequest")
	proto.RegisterType((*LoadTipsReply)(nil), "lh.LoadTipsReply")
	proto.RegisterType((*RemoveAllPlatesRequest)(nil), "lh.RemoveAllPlatesRequest")
	proto.RegisterType((*RemoveAllPlatesReply)(nil), "lh.RemoveAllPlatesReply")
	proto.RegisterType((*UnloadTipsRequest)(nil), "lh.UnloadTipsRequest")
	proto.RegisterType((*UnloadTipsReply)(nil), "lh.UnloadTipsReply")
	proto.RegisterType((*WaitRequest)(nil), "lh.WaitRequest")
	proto.RegisterType((*WaitReply)(nil), "lh.WaitReply")
	proto.RegisterType((*FinalizeRequest)(nil), "lh.FinalizeRequest")
	proto.RegisterType((*FinalizeReply)(nil), "lh.FinalizeReply")
	proto.RegisterType((*LoadHeadRequest)(nil), "lh.LoadHeadRequest")
	proto.RegisterType((*LoadHeadReply)(nil), "lh.LoadHeadReply")
	proto.RegisterType((*UpdateMetaDataRequest)(nil), "lh.UpdateMetaDataRequest")
	proto.RegisterType((*UpdateMetaDataReply)(nil), "lh.UpdateMetaDataReply")
	proto.RegisterType((*LightsOnRequest)(nil), "lh.LightsOnRequest")
	proto.RegisterType((*LightsOnReply)(nil), "lh.LightsOnReply")
	proto.RegisterType((*DispenseRequest)(nil), "lh.DispenseRequest")
	proto.RegisterType((*DispenseReply)(nil), "lh.DispenseReply")
	proto.RegisterType((*GetPositionStateRequest)(nil), "lh.GetPositionStateRequest")
	proto.RegisterType((*GetPositionStateReply)(nil), "lh.GetPositionStateReply")
	proto.RegisterType((*InitializeRequest)(nil), "lh.InitializeRequest")
	proto.RegisterType((*InitializeReply)(nil), "lh.InitializeReply")
	proto.RegisterType((*RemovePlateAtRequest)(nil), "lh.RemovePlateAtRequest")
	proto.RegisterType((*RemovePlateAtReply)(nil), "lh.RemovePlateAtReply")
	proto.RegisterType((*SetPipetteSpeedRequest)(nil), "lh.SetPipetteSpeedRequest")
	proto.RegisterType((*SetPipetteSpeedReply)(nil), "lh.SetPipetteSpeedReply")
	proto.RegisterType((*AspirateRequest)(nil), "lh.AspirateRequest")
	proto.RegisterType((*AspirateReply)(nil), "lh.AspirateReply")
	proto.RegisterType((*MessageRequest)(nil), "lh.MessageRequest")
	proto.RegisterType((*MessageReply)(nil), "lh.MessageReply")
	proto.RegisterType((*MixRequest)(nil), "lh.MixRequest")
	proto.RegisterType((*MixReply)(nil), "lh.MixReply")
	proto.RegisterType((*OpenRequest)(nil), "lh.OpenRequest")
	proto.RegisterType((*OpenReply)(nil), "lh.OpenReply")
	proto.RegisterType((*SetPositionStateRequest)(nil), "lh.SetPositionStateRequest")
	proto.RegisterType((*SetPositionStateReply)(nil), "lh.SetPositionStateReply")
	proto.RegisterType((*UnloadHeadRequest)(nil), "lh.UnloadHeadRequest")
	proto.RegisterType((*UnloadHeadReply)(nil), "lh.UnloadHeadReply")
	proto.RegisterType((*LoadAdaptorRequest)(nil), "lh.LoadAdaptorRequest")
	proto.RegisterType((*LoadAdaptorReply)(nil), "lh.LoadAdaptorReply")
	proto.RegisterType((*GetCurrentPositionRequest)(nil), "lh.GetCurrentPositionRequest")
	proto.RegisterType((*GetCurrentPositionReply)(nil), "lh.GetCurrentPositionReply")
	proto.RegisterType((*ResetPistonsRequest)(nil), "lh.ResetPistonsRequest")
	proto.RegisterType((*ResetPistonsReply)(nil), "lh.ResetPistonsReply")
	proto.RegisterType((*SetDriveSpeedRequest)(nil), "lh.SetDriveSpeedRequest")
	proto.RegisterType((*SetDriveSpeedReply)(nil), "lh.SetDriveSpeedReply")
	proto.RegisterType((*AddPlateToRequest)(nil), "lh.AddPlateToRequest")
	proto.RegisterType((*AddPlateToReply)(nil), "lh.AddPlateToReply")
	proto.RegisterType((*LightsOffRequest)(nil), "lh.LightsOffRequest")
	proto.RegisterType((*LightsOffReply)(nil), "lh.LightsOffReply")
	proto.RegisterType((*MoveRequest)(nil), "lh.MoveRequest")
	proto.RegisterType((*MoveReply)(nil), "lh.MoveReply")
	proto.RegisterType((*MoveRawRequest)(nil), "lh.MoveRawRequest")
	proto.RegisterType((*MoveRawReply)(nil), "lh.MoveRawReply")
	proto.RegisterType((*StopRequest)(nil), "lh.StopRequest")
	proto.RegisterType((*StopReply)(nil), "lh.StopReply")
	proto.RegisterType((*GoRequest)(nil), "lh.GoRequest")
	proto.RegisterType((*GoReply)(nil), "lh.GoReply")
	proto.RegisterType((*GetHeadStateRequest)(nil), "lh.GetHeadStateRequest")
	proto.RegisterType((*GetHeadStateReply)(nil), "lh.GetHeadStateReply")
	proto.RegisterType((*GetOutputFileRequest)(nil), "lh.GetOutputFileRequest")
	proto.RegisterType((*GetOutputFileReply)(nil), "lh.GetOutputFileReply")
	proto.RegisterType((*GetStatusRequest)(nil), "lh.GetStatusRequest")
	proto.RegisterType((*GetStatusReply)(nil), "lh.GetStatusReply")
	proto.RegisterType((*UnloadAdaptorRequest)(nil), "lh.UnloadAdaptorRequest")
	proto.RegisterType((*UnloadAdaptorReply)(nil), "lh.UnloadAdaptorReply")
	proto.RegisterType((*CloseRequest)(nil), "lh.CloseRequest")
	proto.RegisterType((*CloseReply)(nil), "lh.CloseReply")
	proto.RegisterType((*ArrayOfint64)(nil), "lh.ArrayOfint64")
	proto.RegisterType((*ArrayOfdouble)(nil), "lh.ArrayOfdouble")
	proto.RegisterType((*ArrayOfbool)(nil), "lh.ArrayOfbool")
	proto.RegisterType((*CommandStatusMessage)(nil), "lh.CommandStatusMessage")
	proto.RegisterType((*ArrayOfstring)(nil), "lh.ArrayOfstring")
	proto.RegisterType((*PtrToLHPropertiesMessage)(nil), "lh.PtrToLHPropertiesMessage")
	proto.RegisterType((*MapstringAnyMessageMessageFieldEntry)(nil), "lh.MapstringAnyMessageMessageFieldEntry")
	proto.RegisterType((*MapstringAnyMessageMessage)(nil), "lh.MapstringAnyMessageMessage")
	proto.RegisterType((*LHPropertiesMessage)(nil), "lh.LHPropertiesMessage")
	proto.RegisterType((*ArrayOfPtrToLHHeadMessage)(nil), "lh.ArrayOfPtrToLHHeadMessage")
	proto.RegisterType((*MapstringPtrToLHPositionMessageMessageFieldEntry)(nil), "lh.MapstringPtrToLHPositionMessageMessageFieldEntry")
	proto.RegisterType((*MapstringPtrToLHPositionMessageMessage)(nil), "lh.MapstringPtrToLHPositionMessageMessage")
	proto.RegisterType((*MapstringPtrToLHPlateMessageMessageFieldEntry)(nil), "lh.MapstringPtrToLHPlateMessageMessageFieldEntry")
	proto.RegisterType((*MapstringPtrToLHPlateMessageMessage)(nil), "lh.MapstringPtrToLHPlateMessageMessage")
	proto.RegisterType((*PtrToLHAdaptorMessage)(nil), "lh.PtrToLHAdaptorMessage")
	proto.RegisterType((*PtrToLHTipMessage)(nil), "lh.PtrToLHTipMessage")
	proto.RegisterType((*LHChannelParameterMessage)(nil), "lh.LHChannelParameterMessage")
	proto.RegisterType((*LHTipboxMessage)(nil), "lh.LHTipboxMessage")
	proto.RegisterType((*MapstringPtrToLHTipwasteMessageMessageFieldEntry)(nil), "lh.MapstringPtrToLHTipwasteMessageMessageFieldEntry")
	proto.RegisterType((*MapstringPtrToLHTipwasteMessageMessage)(nil), "lh.MapstringPtrToLHTipwasteMessageMessage")
	proto.RegisterType((*PtrToLHChannelParameterMessage)(nil), "lh.PtrToLHChannelParameterMessage")
	proto.RegisterType((*PtrToLHTipwasteMessage)(nil), "lh.PtrToLHTipwasteMessage")
	proto.RegisterType((*MapstringPtrToLHTipboxMessageMessageFieldEntry)(nil), "lh.MapstringPtrToLHTipboxMessageMessageFieldEntry")
	proto.RegisterType((*MapstringPtrToLHTipboxMessageMessage)(nil), "lh.MapstringPtrToLHTipboxMessageMessage")
	proto.RegisterType((*LHAdaptorMessage)(nil), "lh.LHAdaptorMessage")
	proto.RegisterType((*MapstringCoordinatesMessageMessageFieldEntry)(nil), "lh.MapstringCoordinatesMessageMessageFieldEntry")
	proto.RegisterType((*MapstringCoordinatesMessageMessage)(nil), "lh.MapstringCoordinatesMessageMessage")
	proto.RegisterType((*PtrToLHPositionMessage)(nil), "lh.PtrToLHPositionMessage")
	proto.RegisterType((*LHPositionMessage)(nil), "lh.LHPositionMessage")
	proto.RegisterType((*LHPlateMessage)(nil), "lh.LHPlateMessage")
	proto.RegisterType((*ArrayOfPtrToLHTipMessage)(nil), "lh.ArrayOfPtrToLHTipMessage")
	proto.RegisterType((*ArrayOfPtrToLHChannelParameterMessage)(nil), "lh.ArrayOfPtrToLHChannelParameterMessage")
	proto.RegisterType((*CoordinatesMessage)(nil), "lh.CoordinatesMessage")
	proto.RegisterType((*MapstringstringMessageFieldEntry)(nil), "lh.MapstringstringMessageFieldEntry")
	proto.RegisterType((*MapstringstringMessage)(nil), "lh.MapstringstringMessage")
	proto.RegisterType((*PtrToLHPlateMessage)(nil), "lh.PtrToLHPlateMessage")
	proto.RegisterType((*LHTipwasteMessage)(nil), "lh.LHTipwasteMessage")
	proto.RegisterType((*LHHeadMessage)(nil), "lh.LHHeadMessage")
	proto.RegisterType((*TipLoadingBehaviourMessage)(nil), "lh.TipLoadingBehaviourMessage")
	proto.RegisterType((*LHHeadAssemblyPositionMessage)(nil), "lh.LHHeadAssemblyPositionMessage")
	proto.RegisterType((*PtrToLHHeadAssemblyPositionMessage)(nil), "lh.PtrToLHHeadAssemblyPositionMessage")
	proto.RegisterType((*ArrayOfPtrToLHHeadAssemblyPositionMessage)(nil), "lh.ArrayOfPtrToLHHeadAssemblyPositionMessage")
	proto.RegisterType((*LHHeadAssemblyMessage)(nil), "lh.LHHeadAssemblyMessage")
	proto.RegisterType((*PtrToLHHeadAssemblyMessage)(nil), "lh.PtrToLHHeadAssemblyMessage")
	proto.RegisterType((*ArrayOfPtrToLHHeadAssembliesMessage)(nil), "lh.ArrayOfPtrToLHHeadAssembliesMessage")
	proto.RegisterType((*ArrayOfPtrToLHAdaptorMessage)(nil), "lh.ArrayOfPtrToLHAdaptorMessage")
	proto.RegisterType((*PtrToLHHeadMessage)(nil), "lh.PtrToLHHeadMessage")
	proto.RegisterType((*PtrToLHTipboxMessage)(nil), "lh.PtrToLHTipboxMessage")
	proto.RegisterType((*VolumeMessage)(nil), "lh.VolumeMessage")
	proto.RegisterType((*ConcentrationMessage)(nil), "lh.ConcentrationMessage")
	proto.RegisterType((*FlowRateMessage)(nil), "lh.FlowRateMessage")
	proto.RegisterType((*ArrayOfArrayOfPtrToLHTipMessage)(nil), "lh.ArrayOfArrayOfPtrToLHTipMessage")
	proto.RegisterType((*LHTipMessage)(nil), "lh.LHTipMessage")
	proto.RegisterType((*LHDeviceMessage)(nil), "lh.LHDeviceMessage")
	proto.RegisterType((*ArrayOfArrayOfPtrToLHWellMessage)(nil), "lh.ArrayOfArrayOfPtrToLHWellMessage")
	proto.RegisterType((*LHWellMessage)(nil), "lh.LHWellMessage")
	proto.RegisterType((*ArrayOfLHDeviceMessage)(nil), "lh.ArrayOfLHDeviceMessage")
	proto.RegisterType((*PtrToLHWellMessage)(nil), "lh.PtrToLHWellMessage")
	proto.RegisterType((*BBoxMessage)(nil), "lh.BBoxMessage")
	proto.RegisterType((*PtrToBBoxMessage)(nil), "lh.PtrToBBoxMessage")
	proto.RegisterType((*ArrayOfPtrToLHWellMessage)(nil), "lh.ArrayOfPtrToLHWellMessage")
	proto.RegisterType((*MapstringPtrToLHWellMessageMessageFieldEntry)(nil), "lh.MapstringPtrToLHWellMessageMessageFieldEntry")
	proto.RegisterType((*MapstringPtrToLHWellMessageMessage)(nil), "lh.MapstringPtrToLHWellMessageMessage")
	proto.RegisterType((*WellCoordsMessage)(nil), "lh.WellCoordsMessage")
	proto.RegisterType((*PtrToLHComponentMessage)(nil), "lh.PtrToLHComponentMessage")
	proto.RegisterType((*ShapeMessage)(nil), "lh.ShapeMessage")
	proto.RegisterType((*PtrToShapeMessage)(nil), "lh.PtrToShapeMessage")
	proto.RegisterType((*ConcreteMeasurementMessage)(nil), "lh.ConcreteMeasurementMessage")
	proto.RegisterType((*PtrToConcreteMeasurementMessage)(nil), "lh.PtrToConcreteMeasurementMessage")
	proto.RegisterType((*LHComponentMessage)(nil), "lh.LHComponentMessage")
	proto.RegisterType((*PtrToUnitMessage)(nil), "lh.PtrToUnitMessage")
	proto.RegisterType((*UnitMessage)(nil), "lh.UnitMessage")
	proto.RegisterType((*BlockIDMessage)(nil), "lh.BlockIDMessage")
	proto.RegisterType((*TransferRequest)(nil), "lh.TransferRequest")
	proto.RegisterType((*TransferReply)(nil), "lh.TransferReply")
	proto.RegisterType((*SubComponentMessage)(nil), "lh.SubComponentMessage")
	proto.RegisterType((*VelocityMessage)(nil), "lh.VelocityMessage")
	proto.RegisterType((*Velocity3DMessage)(nil), "lh.Velocity3DMessage")
	proto.RegisterType((*PtrToVelocity3DMessage)(nil), "lh.PtrToVelocity3DMessage")
	proto.RegisterType((*VelocityRangeMessage)(nil), "lh.VelocityRangeMessage")
	proto.RegisterType((*PtrToVelocityRangeMessage)(nil), "lh.PtrToVelocityRangeMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LiquidhandlingDriver service

type LiquidhandlingDriverClient interface {
	AddPlateTo(ctx context.Context, in *AddPlateToRequest, opts ...grpc.CallOption) (*AddPlateToReply, error)
	Finalize(ctx context.Context, in *FinalizeRequest, opts ...grpc.CallOption) (*FinalizeReply, error)
	GetCapabilities(ctx context.Context, in *GetCapabilitiesRequest, opts ...grpc.CallOption) (*GetCapabilitiesReply, error)
	GetOutputFile(ctx context.Context, in *GetOutputFileRequest, opts ...grpc.CallOption) (*GetOutputFileReply, error)
	Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (*InitializeReply, error)
	Message(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error)
	RemoveAllPlates(ctx context.Context, in *RemoveAllPlatesRequest, opts ...grpc.CallOption) (*RemoveAllPlatesReply, error)
	RemovePlateAt(ctx context.Context, in *RemovePlateAtRequest, opts ...grpc.CallOption) (*RemovePlateAtReply, error)
}

type liquidhandlingDriverClient struct {
	cc *grpc.ClientConn
}

func NewLiquidhandlingDriverClient(cc *grpc.ClientConn) LiquidhandlingDriverClient {
	return &liquidhandlingDriverClient{cc}
}

func (c *liquidhandlingDriverClient) AddPlateTo(ctx context.Context, in *AddPlateToRequest, opts ...grpc.CallOption) (*AddPlateToReply, error) {
	out := new(AddPlateToReply)
	err := grpc.Invoke(ctx, "/lh.LiquidhandlingDriver/AddPlateTo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liquidhandlingDriverClient) Finalize(ctx context.Context, in *FinalizeRequest, opts ...grpc.CallOption) (*FinalizeReply, error) {
	out := new(FinalizeReply)
	err := grpc.Invoke(ctx, "/lh.LiquidhandlingDriver/Finalize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liquidhandlingDriverClient) GetCapabilities(ctx context.Context, in *GetCapabilitiesRequest, opts ...grpc.CallOption) (*GetCapabilitiesReply, error) {
	out := new(GetCapabilitiesReply)
	err := grpc.Invoke(ctx, "/lh.LiquidhandlingDriver/GetCapabilities", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liquidhandlingDriverClient) GetOutputFile(ctx context.Context, in *GetOutputFileRequest, opts ...grpc.CallOption) (*GetOutputFileReply, error) {
	out := new(GetOutputFileReply)
	err := grpc.Invoke(ctx, "/lh.LiquidhandlingDriver/GetOutputFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liquidhandlingDriverClient) Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (*InitializeReply, error) {
	out := new(InitializeReply)
	err := grpc.Invoke(ctx, "/lh.LiquidhandlingDriver/Initialize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liquidhandlingDriverClient) Message(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := grpc.Invoke(ctx, "/lh.LiquidhandlingDriver/Message", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liquidhandlingDriverClient) RemoveAllPlates(ctx context.Context, in *RemoveAllPlatesRequest, opts ...grpc.CallOption) (*RemoveAllPlatesReply, error) {
	out := new(RemoveAllPlatesReply)
	err := grpc.Invoke(ctx, "/lh.LiquidhandlingDriver/RemoveAllPlates", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liquidhandlingDriverClient) RemovePlateAt(ctx context.Context, in *RemovePlateAtRequest, opts ...grpc.CallOption) (*RemovePlateAtReply, error) {
	out := new(RemovePlateAtReply)
	err := grpc.Invoke(ctx, "/lh.LiquidhandlingDriver/RemovePlateAt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LiquidhandlingDriver service

type LiquidhandlingDriverServer interface {
	AddPlateTo(context.Context, *AddPlateToRequest) (*AddPlateToReply, error)
	Finalize(context.Context, *FinalizeRequest) (*FinalizeReply, error)
	GetCapabilities(context.Context, *GetCapabilitiesRequest) (*GetCapabilitiesReply, error)
	GetOutputFile(context.Context, *GetOutputFileRequest) (*GetOutputFileReply, error)
	Initialize(context.Context, *InitializeRequest) (*InitializeReply, error)
	Message(context.Context, *MessageRequest) (*MessageReply, error)
	RemoveAllPlates(context.Context, *RemoveAllPlatesRequest) (*RemoveAllPlatesReply, error)
	RemovePlateAt(context.Context, *RemovePlateAtRequest) (*RemovePlateAtReply, error)
}

func RegisterLiquidhandlingDriverServer(s *grpc.Server, srv LiquidhandlingDriverServer) {
	s.RegisterService(&_LiquidhandlingDriver_serviceDesc, srv)
}

func _LiquidhandlingDriver_AddPlateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPlateToRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiquidhandlingDriverServer).AddPlateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LiquidhandlingDriver/AddPlateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiquidhandlingDriverServer).AddPlateTo(ctx, req.(*AddPlateToRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiquidhandlingDriver_Finalize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiquidhandlingDriverServer).Finalize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LiquidhandlingDriver/Finalize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiquidhandlingDriverServer).Finalize(ctx, req.(*FinalizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiquidhandlingDriver_GetCapabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiquidhandlingDriverServer).GetCapabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LiquidhandlingDriver/GetCapabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiquidhandlingDriverServer).GetCapabilities(ctx, req.(*GetCapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiquidhandlingDriver_GetOutputFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOutputFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiquidhandlingDriverServer).GetOutputFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LiquidhandlingDriver/GetOutputFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiquidhandlingDriverServer).GetOutputFile(ctx, req.(*GetOutputFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiquidhandlingDriver_Initialize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitializeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiquidhandlingDriverServer).Initialize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LiquidhandlingDriver/Initialize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiquidhandlingDriverServer).Initialize(ctx, req.(*InitializeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiquidhandlingDriver_Message_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiquidhandlingDriverServer).Message(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LiquidhandlingDriver/Message",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiquidhandlingDriverServer).Message(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiquidhandlingDriver_RemoveAllPlates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAllPlatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiquidhandlingDriverServer).RemoveAllPlates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LiquidhandlingDriver/RemoveAllPlates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiquidhandlingDriverServer).RemoveAllPlates(ctx, req.(*RemoveAllPlatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LiquidhandlingDriver_RemovePlateAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePlateAtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiquidhandlingDriverServer).RemovePlateAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LiquidhandlingDriver/RemovePlateAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiquidhandlingDriverServer).RemovePlateAt(ctx, req.(*RemovePlateAtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LiquidhandlingDriver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lh.LiquidhandlingDriver",
	HandlerType: (*LiquidhandlingDriverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPlateTo",
			Handler:    _LiquidhandlingDriver_AddPlateTo_Handler,
		},
		{
			MethodName: "Finalize",
			Handler:    _LiquidhandlingDriver_Finalize_Handler,
		},
		{
			MethodName: "GetCapabilities",
			Handler:    _LiquidhandlingDriver_GetCapabilities_Handler,
		},
		{
			MethodName: "GetOutputFile",
			Handler:    _LiquidhandlingDriver_GetOutputFile_Handler,
		},
		{
			MethodName: "Initialize",
			Handler:    _LiquidhandlingDriver_Initialize_Handler,
		},
		{
			MethodName: "Message",
			Handler:    _LiquidhandlingDriver_Message_Handler,
		},
		{
			MethodName: "RemoveAllPlates",
			Handler:    _LiquidhandlingDriver_RemoveAllPlates_Handler,
		},
		{
			MethodName: "RemovePlateAt",
			Handler:    _LiquidhandlingDriver_RemovePlateAt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lh/lh.proto",
}

// Client API for LowLevelLiquidhandlingDriver service

type LowLevelLiquidhandlingDriverClient interface {
	AddPlateTo(ctx context.Context, in *AddPlateToRequest, opts ...grpc.CallOption) (*AddPlateToReply, error)
	Finalize(ctx context.Context, in *FinalizeRequest, opts ...grpc.CallOption) (*FinalizeReply, error)
	GetCapabilities(ctx context.Context, in *GetCapabilitiesRequest, opts ...grpc.CallOption) (*GetCapabilitiesReply, error)
	GetOutputFile(ctx context.Context, in *GetOutputFileRequest, opts ...grpc.CallOption) (*GetOutputFileReply, error)
	Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (*InitializeReply, error)
	Message(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error)
	RemoveAllPlates(ctx context.Context, in *RemoveAllPlatesRequest, opts ...grpc.CallOption) (*RemoveAllPlatesReply, error)
	RemovePlateAt(ctx context.Context, in *RemovePlateAtRequest, opts ...grpc.CallOption) (*RemovePlateAtReply, error)
	Aspirate(ctx context.Context, in *AspirateRequest, opts ...grpc.CallOption) (*AspirateReply, error)
	Dispense(ctx context.Context, in *DispenseRequest, opts ...grpc.CallOption) (*DispenseReply, error)
	LoadTips(ctx context.Context, in *LoadTipsRequest, opts ...grpc.CallOption) (*LoadTipsReply, error)
	Mix(ctx context.Context, in *MixRequest, opts ...grpc.CallOption) (*MixReply, error)
	Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*MoveReply, error)
	ResetPistons(ctx context.Context, in *ResetPistonsRequest, opts ...grpc.CallOption) (*ResetPistonsReply, error)
	SetDriveSpeed(ctx context.Context, in *SetDriveSpeedRequest, opts ...grpc.CallOption) (*SetDriveSpeedReply, error)
	SetPipetteSpeed(ctx context.Context, in *SetPipetteSpeedRequest, opts ...grpc.CallOption) (*SetPipetteSpeedReply, error)
	UnloadTips(ctx context.Context, in *UnloadTipsRequest, opts ...grpc.CallOption) (*UnloadTipsReply, error)
	UpdateMetaData(ctx context.Context, in *UpdateMetaDataRequest, opts ...grpc.CallOption) (*UpdateMetaDataReply, error)
	Wait(ctx context.Context, in *WaitRequest, opts ...grpc.CallOption) (*WaitReply, error)
}

type lowLevelLiquidhandlingDriverClient struct {
	cc *grpc.ClientConn
}

func NewLowLevelLiquidhandlingDriverClient(cc *grpc.ClientConn) LowLevelLiquidhandlingDriverClient {
	return &lowLevelLiquidhandlingDriverClient{cc}
}

func (c *lowLevelLiquidhandlingDriverClient) AddPlateTo(ctx context.Context, in *AddPlateToRequest, opts ...grpc.CallOption) (*AddPlateToReply, error) {
	out := new(AddPlateToReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/AddPlateTo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) Finalize(ctx context.Context, in *FinalizeRequest, opts ...grpc.CallOption) (*FinalizeReply, error) {
	out := new(FinalizeReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/Finalize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) GetCapabilities(ctx context.Context, in *GetCapabilitiesRequest, opts ...grpc.CallOption) (*GetCapabilitiesReply, error) {
	out := new(GetCapabilitiesReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/GetCapabilities", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) GetOutputFile(ctx context.Context, in *GetOutputFileRequest, opts ...grpc.CallOption) (*GetOutputFileReply, error) {
	out := new(GetOutputFileReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/GetOutputFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (*InitializeReply, error) {
	out := new(InitializeReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/Initialize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) Message(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/Message", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) RemoveAllPlates(ctx context.Context, in *RemoveAllPlatesRequest, opts ...grpc.CallOption) (*RemoveAllPlatesReply, error) {
	out := new(RemoveAllPlatesReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/RemoveAllPlates", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) RemovePlateAt(ctx context.Context, in *RemovePlateAtRequest, opts ...grpc.CallOption) (*RemovePlateAtReply, error) {
	out := new(RemovePlateAtReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/RemovePlateAt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) Aspirate(ctx context.Context, in *AspirateRequest, opts ...grpc.CallOption) (*AspirateReply, error) {
	out := new(AspirateReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/Aspirate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) Dispense(ctx context.Context, in *DispenseRequest, opts ...grpc.CallOption) (*DispenseReply, error) {
	out := new(DispenseReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/Dispense", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) LoadTips(ctx context.Context, in *LoadTipsRequest, opts ...grpc.CallOption) (*LoadTipsReply, error) {
	out := new(LoadTipsReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/LoadTips", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) Mix(ctx context.Context, in *MixRequest, opts ...grpc.CallOption) (*MixReply, error) {
	out := new(MixReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/Mix", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*MoveReply, error) {
	out := new(MoveReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/Move", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) ResetPistons(ctx context.Context, in *ResetPistonsRequest, opts ...grpc.CallOption) (*ResetPistonsReply, error) {
	out := new(ResetPistonsReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/ResetPistons", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) SetDriveSpeed(ctx context.Context, in *SetDriveSpeedRequest, opts ...grpc.CallOption) (*SetDriveSpeedReply, error) {
	out := new(SetDriveSpeedReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/SetDriveSpeed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) SetPipetteSpeed(ctx context.Context, in *SetPipetteSpeedRequest, opts ...grpc.CallOption) (*SetPipetteSpeedReply, error) {
	out := new(SetPipetteSpeedReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/SetPipetteSpeed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) UnloadTips(ctx context.Context, in *UnloadTipsRequest, opts ...grpc.CallOption) (*UnloadTipsReply, error) {
	out := new(UnloadTipsReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/UnloadTips", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) UpdateMetaData(ctx context.Context, in *UpdateMetaDataRequest, opts ...grpc.CallOption) (*UpdateMetaDataReply, error) {
	out := new(UpdateMetaDataReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/UpdateMetaData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lowLevelLiquidhandlingDriverClient) Wait(ctx context.Context, in *WaitRequest, opts ...grpc.CallOption) (*WaitReply, error) {
	out := new(WaitReply)
	err := grpc.Invoke(ctx, "/lh.LowLevelLiquidhandlingDriver/Wait", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LowLevelLiquidhandlingDriver service

type LowLevelLiquidhandlingDriverServer interface {
	AddPlateTo(context.Context, *AddPlateToRequest) (*AddPlateToReply, error)
	Finalize(context.Context, *FinalizeRequest) (*FinalizeReply, error)
	GetCapabilities(context.Context, *GetCapabilitiesRequest) (*GetCapabilitiesReply, error)
	GetOutputFile(context.Context, *GetOutputFileRequest) (*GetOutputFileReply, error)
	Initialize(context.Context, *InitializeRequest) (*InitializeReply, error)
	Message(context.Context, *MessageRequest) (*MessageReply, error)
	RemoveAllPlates(context.Context, *RemoveAllPlatesRequest) (*RemoveAllPlatesReply, error)
	RemovePlateAt(context.Context, *RemovePlateAtRequest) (*RemovePlateAtReply, error)
	Aspirate(context.Context, *AspirateRequest) (*AspirateReply, error)
	Dispense(context.Context, *DispenseRequest) (*DispenseReply, error)
	LoadTips(context.Context, *LoadTipsRequest) (*LoadTipsReply, error)
	Mix(context.Context, *MixRequest) (*MixReply, error)
	Move(context.Context, *MoveRequest) (*MoveReply, error)
	ResetPistons(context.Context, *ResetPistonsRequest) (*ResetPistonsReply, error)
	SetDriveSpeed(context.Context, *SetDriveSpeedRequest) (*SetDriveSpeedReply, error)
	SetPipetteSpeed(context.Context, *SetPipetteSpeedRequest) (*SetPipetteSpeedReply, error)
	UnloadTips(context.Context, *UnloadTipsRequest) (*UnloadTipsReply, error)
	UpdateMetaData(context.Context, *UpdateMetaDataRequest) (*UpdateMetaDataReply, error)
	Wait(context.Context, *WaitRequest) (*WaitReply, error)
}

func RegisterLowLevelLiquidhandlingDriverServer(s *grpc.Server, srv LowLevelLiquidhandlingDriverServer) {
	s.RegisterService(&_LowLevelLiquidhandlingDriver_serviceDesc, srv)
}

func _LowLevelLiquidhandlingDriver_AddPlateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPlateToRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).AddPlateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/AddPlateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).AddPlateTo(ctx, req.(*AddPlateToRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_Finalize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).Finalize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/Finalize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).Finalize(ctx, req.(*FinalizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_GetCapabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).GetCapabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/GetCapabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).GetCapabilities(ctx, req.(*GetCapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_GetOutputFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOutputFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).GetOutputFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/GetOutputFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).GetOutputFile(ctx, req.(*GetOutputFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_Initialize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitializeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).Initialize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/Initialize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).Initialize(ctx, req.(*InitializeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_Message_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).Message(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/Message",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).Message(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_RemoveAllPlates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAllPlatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).RemoveAllPlates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/RemoveAllPlates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).RemoveAllPlates(ctx, req.(*RemoveAllPlatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_RemovePlateAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePlateAtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).RemovePlateAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/RemovePlateAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).RemovePlateAt(ctx, req.(*RemovePlateAtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_Aspirate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AspirateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).Aspirate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/Aspirate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).Aspirate(ctx, req.(*AspirateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_Dispense_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DispenseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).Dispense(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/Dispense",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).Dispense(ctx, req.(*DispenseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_LoadTips_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadTipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).LoadTips(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/LoadTips",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).LoadTips(ctx, req.(*LoadTipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_Mix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MixRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).Mix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/Mix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).Mix(ctx, req.(*MixRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).Move(ctx, req.(*MoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_ResetPistons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPistonsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).ResetPistons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/ResetPistons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).ResetPistons(ctx, req.(*ResetPistonsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_SetDriveSpeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDriveSpeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).SetDriveSpeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/SetDriveSpeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).SetDriveSpeed(ctx, req.(*SetDriveSpeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_SetPipetteSpeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPipetteSpeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).SetPipetteSpeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/SetPipetteSpeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).SetPipetteSpeed(ctx, req.(*SetPipetteSpeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_UnloadTips_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnloadTipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).UnloadTips(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/UnloadTips",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).UnloadTips(ctx, req.(*UnloadTipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_UpdateMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMetaDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).UpdateMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/UpdateMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).UpdateMetaData(ctx, req.(*UpdateMetaDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LowLevelLiquidhandlingDriver_Wait_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LowLevelLiquidhandlingDriverServer).Wait(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.LowLevelLiquidhandlingDriver/Wait",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LowLevelLiquidhandlingDriverServer).Wait(ctx, req.(*WaitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LowLevelLiquidhandlingDriver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lh.LowLevelLiquidhandlingDriver",
	HandlerType: (*LowLevelLiquidhandlingDriverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPlateTo",
			Handler:    _LowLevelLiquidhandlingDriver_AddPlateTo_Handler,
		},
		{
			MethodName: "Finalize",
			Handler:    _LowLevelLiquidhandlingDriver_Finalize_Handler,
		},
		{
			MethodName: "GetCapabilities",
			Handler:    _LowLevelLiquidhandlingDriver_GetCapabilities_Handler,
		},
		{
			MethodName: "GetOutputFile",
			Handler:    _LowLevelLiquidhandlingDriver_GetOutputFile_Handler,
		},
		{
			MethodName: "Initialize",
			Handler:    _LowLevelLiquidhandlingDriver_Initialize_Handler,
		},
		{
			MethodName: "Message",
			Handler:    _LowLevelLiquidhandlingDriver_Message_Handler,
		},
		{
			MethodName: "RemoveAllPlates",
			Handler:    _LowLevelLiquidhandlingDriver_RemoveAllPlates_Handler,
		},
		{
			MethodName: "RemovePlateAt",
			Handler:    _LowLevelLiquidhandlingDriver_RemovePlateAt_Handler,
		},
		{
			MethodName: "Aspirate",
			Handler:    _LowLevelLiquidhandlingDriver_Aspirate_Handler,
		},
		{
			MethodName: "Dispense",
			Handler:    _LowLevelLiquidhandlingDriver_Dispense_Handler,
		},
		{
			MethodName: "LoadTips",
			Handler:    _LowLevelLiquidhandlingDriver_LoadTips_Handler,
		},
		{
			MethodName: "Mix",
			Handler:    _LowLevelLiquidhandlingDriver_Mix_Handler,
		},
		{
			MethodName: "Move",
			Handler:    _LowLevelLiquidhandlingDriver_Move_Handler,
		},
		{
			MethodName: "ResetPistons",
			Handler:    _LowLevelLiquidhandlingDriver_ResetPistons_Handler,
		},
		{
			MethodName: "SetDriveSpeed",
			Handler:    _LowLevelLiquidhandlingDriver_SetDriveSpeed_Handler,
		},
		{
			MethodName: "SetPipetteSpeed",
			Handler:    _LowLevelLiquidhandlingDriver_SetPipetteSpeed_Handler,
		},
		{
			MethodName: "UnloadTips",
			Handler:    _LowLevelLiquidhandlingDriver_UnloadTips_Handler,
		},
		{
			MethodName: "UpdateMetaData",
			Handler:    _LowLevelLiquidhandlingDriver_UpdateMetaData_Handler,
		},
		{
			MethodName: "Wait",
			Handler:    _LowLevelLiquidhandlingDriver_Wait_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lh/lh.proto",
}

// Client API for HighLevelLiquidhandlingDriver service

type HighLevelLiquidhandlingDriverClient interface {
	AddPlateTo(ctx context.Context, in *AddPlateToRequest, opts ...grpc.CallOption) (*AddPlateToReply, error)
	Finalize(ctx context.Context, in *FinalizeRequest, opts ...grpc.CallOption) (*FinalizeReply, error)
	GetCapabilities(ctx context.Context, in *GetCapabilitiesRequest, opts ...grpc.CallOption) (*GetCapabilitiesReply, error)
	GetOutputFile(ctx context.Context, in *GetOutputFileRequest, opts ...grpc.CallOption) (*GetOutputFileReply, error)
	Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (*InitializeReply, error)
	Message(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error)
	RemoveAllPlates(ctx context.Context, in *RemoveAllPlatesRequest, opts ...grpc.CallOption) (*RemoveAllPlatesReply, error)
	RemovePlateAt(ctx context.Context, in *RemovePlateAtRequest, opts ...grpc.CallOption) (*RemovePlateAtReply, error)
	Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferReply, error)
}

type highLevelLiquidhandlingDriverClient struct {
	cc *grpc.ClientConn
}

func NewHighLevelLiquidhandlingDriverClient(cc *grpc.ClientConn) HighLevelLiquidhandlingDriverClient {
	return &highLevelLiquidhandlingDriverClient{cc}
}

func (c *highLevelLiquidhandlingDriverClient) AddPlateTo(ctx context.Context, in *AddPlateToRequest, opts ...grpc.CallOption) (*AddPlateToReply, error) {
	out := new(AddPlateToReply)
	err := grpc.Invoke(ctx, "/lh.HighLevelLiquidhandlingDriver/AddPlateTo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *highLevelLiquidhandlingDriverClient) Finalize(ctx context.Context, in *FinalizeRequest, opts ...grpc.CallOption) (*FinalizeReply, error) {
	out := new(FinalizeReply)
	err := grpc.Invoke(ctx, "/lh.HighLevelLiquidhandlingDriver/Finalize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *highLevelLiquidhandlingDriverClient) GetCapabilities(ctx context.Context, in *GetCapabilitiesRequest, opts ...grpc.CallOption) (*GetCapabilitiesReply, error) {
	out := new(GetCapabilitiesReply)
	err := grpc.Invoke(ctx, "/lh.HighLevelLiquidhandlingDriver/GetCapabilities", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *highLevelLiquidhandlingDriverClient) GetOutputFile(ctx context.Context, in *GetOutputFileRequest, opts ...grpc.CallOption) (*GetOutputFileReply, error) {
	out := new(GetOutputFileReply)
	err := grpc.Invoke(ctx, "/lh.HighLevelLiquidhandlingDriver/GetOutputFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *highLevelLiquidhandlingDriverClient) Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (*InitializeReply, error) {
	out := new(InitializeReply)
	err := grpc.Invoke(ctx, "/lh.HighLevelLiquidhandlingDriver/Initialize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *highLevelLiquidhandlingDriverClient) Message(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := grpc.Invoke(ctx, "/lh.HighLevelLiquidhandlingDriver/Message", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *highLevelLiquidhandlingDriverClient) RemoveAllPlates(ctx context.Context, in *RemoveAllPlatesRequest, opts ...grpc.CallOption) (*RemoveAllPlatesReply, error) {
	out := new(RemoveAllPlatesReply)
	err := grpc.Invoke(ctx, "/lh.HighLevelLiquidhandlingDriver/RemoveAllPlates", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *highLevelLiquidhandlingDriverClient) RemovePlateAt(ctx context.Context, in *RemovePlateAtRequest, opts ...grpc.CallOption) (*RemovePlateAtReply, error) {
	out := new(RemovePlateAtReply)
	err := grpc.Invoke(ctx, "/lh.HighLevelLiquidhandlingDriver/RemovePlateAt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *highLevelLiquidhandlingDriverClient) Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferReply, error) {
	out := new(TransferReply)
	err := grpc.Invoke(ctx, "/lh.HighLevelLiquidhandlingDriver/Transfer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HighLevelLiquidhandlingDriver service

type HighLevelLiquidhandlingDriverServer interface {
	AddPlateTo(context.Context, *AddPlateToRequest) (*AddPlateToReply, error)
	Finalize(context.Context, *FinalizeRequest) (*FinalizeReply, error)
	GetCapabilities(context.Context, *GetCapabilitiesRequest) (*GetCapabilitiesReply, error)
	GetOutputFile(context.Context, *GetOutputFileRequest) (*GetOutputFileReply, error)
	Initialize(context.Context, *InitializeRequest) (*InitializeReply, error)
	Message(context.Context, *MessageRequest) (*MessageReply, error)
	RemoveAllPlates(context.Context, *RemoveAllPlatesRequest) (*RemoveAllPlatesReply, error)
	RemovePlateAt(context.Context, *RemovePlateAtRequest) (*RemovePlateAtReply, error)
	Transfer(context.Context, *TransferRequest) (*TransferReply, error)
}

func RegisterHighLevelLiquidhandlingDriverServer(s *grpc.Server, srv HighLevelLiquidhandlingDriverServer) {
	s.RegisterService(&_HighLevelLiquidhandlingDriver_serviceDesc, srv)
}

func _HighLevelLiquidhandlingDriver_AddPlateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPlateToRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighLevelLiquidhandlingDriverServer).AddPlateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.HighLevelLiquidhandlingDriver/AddPlateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighLevelLiquidhandlingDriverServer).AddPlateTo(ctx, req.(*AddPlateToRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HighLevelLiquidhandlingDriver_Finalize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighLevelLiquidhandlingDriverServer).Finalize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.HighLevelLiquidhandlingDriver/Finalize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighLevelLiquidhandlingDriverServer).Finalize(ctx, req.(*FinalizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HighLevelLiquidhandlingDriver_GetCapabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighLevelLiquidhandlingDriverServer).GetCapabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.HighLevelLiquidhandlingDriver/GetCapabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighLevelLiquidhandlingDriverServer).GetCapabilities(ctx, req.(*GetCapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HighLevelLiquidhandlingDriver_GetOutputFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOutputFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighLevelLiquidhandlingDriverServer).GetOutputFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.HighLevelLiquidhandlingDriver/GetOutputFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighLevelLiquidhandlingDriverServer).GetOutputFile(ctx, req.(*GetOutputFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HighLevelLiquidhandlingDriver_Initialize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitializeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighLevelLiquidhandlingDriverServer).Initialize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.HighLevelLiquidhandlingDriver/Initialize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighLevelLiquidhandlingDriverServer).Initialize(ctx, req.(*InitializeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HighLevelLiquidhandlingDriver_Message_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighLevelLiquidhandlingDriverServer).Message(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.HighLevelLiquidhandlingDriver/Message",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighLevelLiquidhandlingDriverServer).Message(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HighLevelLiquidhandlingDriver_RemoveAllPlates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAllPlatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighLevelLiquidhandlingDriverServer).RemoveAllPlates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.HighLevelLiquidhandlingDriver/RemoveAllPlates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighLevelLiquidhandlingDriverServer).RemoveAllPlates(ctx, req.(*RemoveAllPlatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HighLevelLiquidhandlingDriver_RemovePlateAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePlateAtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighLevelLiquidhandlingDriverServer).RemovePlateAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.HighLevelLiquidhandlingDriver/RemovePlateAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighLevelLiquidhandlingDriverServer).RemovePlateAt(ctx, req.(*RemovePlateAtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HighLevelLiquidhandlingDriver_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighLevelLiquidhandlingDriverServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.HighLevelLiquidhandlingDriver/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighLevelLiquidhandlingDriverServer).Transfer(ctx, req.(*TransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HighLevelLiquidhandlingDriver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lh.HighLevelLiquidhandlingDriver",
	HandlerType: (*HighLevelLiquidhandlingDriverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPlateTo",
			Handler:    _HighLevelLiquidhandlingDriver_AddPlateTo_Handler,
		},
		{
			MethodName: "Finalize",
			Handler:    _HighLevelLiquidhandlingDriver_Finalize_Handler,
		},
		{
			MethodName: "GetCapabilities",
			Handler:    _HighLevelLiquidhandlingDriver_GetCapabilities_Handler,
		},
		{
			MethodName: "GetOutputFile",
			Handler:    _HighLevelLiquidhandlingDriver_GetOutputFile_Handler,
		},
		{
			MethodName: "Initialize",
			Handler:    _HighLevelLiquidhandlingDriver_Initialize_Handler,
		},
		{
			MethodName: "Message",
			Handler:    _HighLevelLiquidhandlingDriver_Message_Handler,
		},
		{
			MethodName: "RemoveAllPlates",
			Handler:    _HighLevelLiquidhandlingDriver_RemoveAllPlates_Handler,
		},
		{
			MethodName: "RemovePlateAt",
			Handler:    _HighLevelLiquidhandlingDriver_RemovePlateAt_Handler,
		},
		{
			MethodName: "Transfer",
			Handler:    _HighLevelLiquidhandlingDriver_Transfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lh/lh.proto",
}

// Client API for ExtendedLiquidhandlingDriver service

type ExtendedLiquidhandlingDriverClient interface {
	AddPlateTo(ctx context.Context, in *AddPlateToRequest, opts ...grpc.CallOption) (*AddPlateToReply, error)
	Finalize(ctx context.Context, in *FinalizeRequest, opts ...grpc.CallOption) (*FinalizeReply, error)
	GetCapabilities(ctx context.Context, in *GetCapabilitiesRequest, opts ...grpc.CallOption) (*GetCapabilitiesReply, error)
	GetOutputFile(ctx context.Context, in *GetOutputFileRequest, opts ...grpc.CallOption) (*GetOutputFileReply, error)
	Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (*InitializeReply, error)
	Message(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error)
	RemoveAllPlates(ctx context.Context, in *RemoveAllPlatesRequest, opts ...grpc.CallOption) (*RemoveAllPlatesReply, error)
	RemovePlateAt(ctx context.Context, in *RemovePlateAtRequest, opts ...grpc.CallOption) (*RemovePlateAtReply, error)
	Aspirate(ctx context.Context, in *AspirateRequest, opts ...grpc.CallOption) (*AspirateReply, error)
	Dispense(ctx context.Context, in *DispenseRequest, opts ...grpc.CallOption) (*DispenseReply, error)
	LoadTips(ctx context.Context, in *LoadTipsRequest, opts ...grpc.CallOption) (*LoadTipsReply, error)
	Mix(ctx context.Context, in *MixRequest, opts ...grpc.CallOption) (*MixReply, error)
	Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*MoveReply, error)
	ResetPistons(ctx context.Context, in *ResetPistonsRequest, opts ...grpc.CallOption) (*ResetPistonsReply, error)
	SetDriveSpeed(ctx context.Context, in *SetDriveSpeedRequest, opts ...grpc.CallOption) (*SetDriveSpeedReply, error)
	SetPipetteSpeed(ctx context.Context, in *SetPipetteSpeedRequest, opts ...grpc.CallOption) (*SetPipetteSpeedReply, error)
	UnloadTips(ctx context.Context, in *UnloadTipsRequest, opts ...grpc.CallOption) (*UnloadTipsReply, error)
	UpdateMetaData(ctx context.Context, in *UpdateMetaDataRequest, opts ...grpc.CallOption) (*UpdateMetaDataReply, error)
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseReply, error)
	GetCurrentPosition(ctx context.Context, in *GetCurrentPositionRequest, opts ...grpc.CallOption) (*GetCurrentPositionReply, error)
	GetHeadState(ctx context.Context, in *GetHeadStateRequest, opts ...grpc.CallOption) (*GetHeadStateReply, error)
	GetPositionState(ctx context.Context, in *GetPositionStateRequest, opts ...grpc.CallOption) (*GetPositionStateReply, error)
	GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusReply, error)
	Go(ctx context.Context, in *GoRequest, opts ...grpc.CallOption) (*GoReply, error)
	LightsOff(ctx context.Context, in *LightsOffRequest, opts ...grpc.CallOption) (*LightsOffReply, error)
	LightsOn(ctx context.Context, in *LightsOnRequest, opts ...grpc.CallOption) (*LightsOnReply, error)
	LoadAdaptor(ctx context.Context, in *LoadAdaptorRequest, opts ...grpc.CallOption) (*LoadAdaptorReply, error)
	LoadHead(ctx context.Context, in *LoadHeadRequest, opts ...grpc.CallOption) (*LoadHeadReply, error)
	MoveRaw(ctx context.Context, in *MoveRawRequest, opts ...grpc.CallOption) (*MoveRawReply, error)
	Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenReply, error)
	SetPositionState(ctx context.Context, in *SetPositionStateRequest, opts ...grpc.CallOption) (*SetPositionStateReply, error)
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopReply, error)
	UnloadAdaptor(ctx context.Context, in *UnloadAdaptorRequest, opts ...grpc.CallOption) (*UnloadAdaptorReply, error)
	UnloadHead(ctx context.Context, in *UnloadHeadRequest, opts ...grpc.CallOption) (*UnloadHeadReply, error)
	Wait(ctx context.Context, in *WaitRequest, opts ...grpc.CallOption) (*WaitReply, error)
}

type extendedLiquidhandlingDriverClient struct {
	cc *grpc.ClientConn
}

func NewExtendedLiquidhandlingDriverClient(cc *grpc.ClientConn) ExtendedLiquidhandlingDriverClient {
	return &extendedLiquidhandlingDriverClient{cc}
}

func (c *extendedLiquidhandlingDriverClient) AddPlateTo(ctx context.Context, in *AddPlateToRequest, opts ...grpc.CallOption) (*AddPlateToReply, error) {
	out := new(AddPlateToReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/AddPlateTo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Finalize(ctx context.Context, in *FinalizeRequest, opts ...grpc.CallOption) (*FinalizeReply, error) {
	out := new(FinalizeReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Finalize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) GetCapabilities(ctx context.Context, in *GetCapabilitiesRequest, opts ...grpc.CallOption) (*GetCapabilitiesReply, error) {
	out := new(GetCapabilitiesReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/GetCapabilities", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) GetOutputFile(ctx context.Context, in *GetOutputFileRequest, opts ...grpc.CallOption) (*GetOutputFileReply, error) {
	out := new(GetOutputFileReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/GetOutputFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (*InitializeReply, error) {
	out := new(InitializeReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Initialize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Message(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Message", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) RemoveAllPlates(ctx context.Context, in *RemoveAllPlatesRequest, opts ...grpc.CallOption) (*RemoveAllPlatesReply, error) {
	out := new(RemoveAllPlatesReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/RemoveAllPlates", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) RemovePlateAt(ctx context.Context, in *RemovePlateAtRequest, opts ...grpc.CallOption) (*RemovePlateAtReply, error) {
	out := new(RemovePlateAtReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/RemovePlateAt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Aspirate(ctx context.Context, in *AspirateRequest, opts ...grpc.CallOption) (*AspirateReply, error) {
	out := new(AspirateReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Aspirate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Dispense(ctx context.Context, in *DispenseRequest, opts ...grpc.CallOption) (*DispenseReply, error) {
	out := new(DispenseReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Dispense", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) LoadTips(ctx context.Context, in *LoadTipsRequest, opts ...grpc.CallOption) (*LoadTipsReply, error) {
	out := new(LoadTipsReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/LoadTips", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Mix(ctx context.Context, in *MixRequest, opts ...grpc.CallOption) (*MixReply, error) {
	out := new(MixReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Mix", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*MoveReply, error) {
	out := new(MoveReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Move", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) ResetPistons(ctx context.Context, in *ResetPistonsRequest, opts ...grpc.CallOption) (*ResetPistonsReply, error) {
	out := new(ResetPistonsReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/ResetPistons", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) SetDriveSpeed(ctx context.Context, in *SetDriveSpeedRequest, opts ...grpc.CallOption) (*SetDriveSpeedReply, error) {
	out := new(SetDriveSpeedReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/SetDriveSpeed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) SetPipetteSpeed(ctx context.Context, in *SetPipetteSpeedRequest, opts ...grpc.CallOption) (*SetPipetteSpeedReply, error) {
	out := new(SetPipetteSpeedReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/SetPipetteSpeed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) UnloadTips(ctx context.Context, in *UnloadTipsRequest, opts ...grpc.CallOption) (*UnloadTipsReply, error) {
	out := new(UnloadTipsReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/UnloadTips", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) UpdateMetaData(ctx context.Context, in *UpdateMetaDataRequest, opts ...grpc.CallOption) (*UpdateMetaDataReply, error) {
	out := new(UpdateMetaDataReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/UpdateMetaData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseReply, error) {
	out := new(CloseReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Close", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) GetCurrentPosition(ctx context.Context, in *GetCurrentPositionRequest, opts ...grpc.CallOption) (*GetCurrentPositionReply, error) {
	out := new(GetCurrentPositionReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/GetCurrentPosition", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) GetHeadState(ctx context.Context, in *GetHeadStateRequest, opts ...grpc.CallOption) (*GetHeadStateReply, error) {
	out := new(GetHeadStateReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/GetHeadState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) GetPositionState(ctx context.Context, in *GetPositionStateRequest, opts ...grpc.CallOption) (*GetPositionStateReply, error) {
	out := new(GetPositionStateReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/GetPositionState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusReply, error) {
	out := new(GetStatusReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/GetStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Go(ctx context.Context, in *GoRequest, opts ...grpc.CallOption) (*GoReply, error) {
	out := new(GoReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Go", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) LightsOff(ctx context.Context, in *LightsOffRequest, opts ...grpc.CallOption) (*LightsOffReply, error) {
	out := new(LightsOffReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/LightsOff", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) LightsOn(ctx context.Context, in *LightsOnRequest, opts ...grpc.CallOption) (*LightsOnReply, error) {
	out := new(LightsOnReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/LightsOn", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) LoadAdaptor(ctx context.Context, in *LoadAdaptorRequest, opts ...grpc.CallOption) (*LoadAdaptorReply, error) {
	out := new(LoadAdaptorReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/LoadAdaptor", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) LoadHead(ctx context.Context, in *LoadHeadRequest, opts ...grpc.CallOption) (*LoadHeadReply, error) {
	out := new(LoadHeadReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/LoadHead", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) MoveRaw(ctx context.Context, in *MoveRawRequest, opts ...grpc.CallOption) (*MoveRawReply, error) {
	out := new(MoveRawReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/MoveRaw", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenReply, error) {
	out := new(OpenReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Open", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) SetPositionState(ctx context.Context, in *SetPositionStateRequest, opts ...grpc.CallOption) (*SetPositionStateReply, error) {
	out := new(SetPositionStateReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/SetPositionState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopReply, error) {
	out := new(StopReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Stop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) UnloadAdaptor(ctx context.Context, in *UnloadAdaptorRequest, opts ...grpc.CallOption) (*UnloadAdaptorReply, error) {
	out := new(UnloadAdaptorReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/UnloadAdaptor", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) UnloadHead(ctx context.Context, in *UnloadHeadRequest, opts ...grpc.CallOption) (*UnloadHeadReply, error) {
	out := new(UnloadHeadReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/UnloadHead", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extendedLiquidhandlingDriverClient) Wait(ctx context.Context, in *WaitRequest, opts ...grpc.CallOption) (*WaitReply, error) {
	out := new(WaitReply)
	err := grpc.Invoke(ctx, "/lh.ExtendedLiquidhandlingDriver/Wait", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ExtendedLiquidhandlingDriver service

type ExtendedLiquidhandlingDriverServer interface {
	AddPlateTo(context.Context, *AddPlateToRequest) (*AddPlateToReply, error)
	Finalize(context.Context, *FinalizeRequest) (*FinalizeReply, error)
	GetCapabilities(context.Context, *GetCapabilitiesRequest) (*GetCapabilitiesReply, error)
	GetOutputFile(context.Context, *GetOutputFileRequest) (*GetOutputFileReply, error)
	Initialize(context.Context, *InitializeRequest) (*InitializeReply, error)
	Message(context.Context, *MessageRequest) (*MessageReply, error)
	RemoveAllPlates(context.Context, *RemoveAllPlatesRequest) (*RemoveAllPlatesReply, error)
	RemovePlateAt(context.Context, *RemovePlateAtRequest) (*RemovePlateAtReply, error)
	Aspirate(context.Context, *AspirateRequest) (*AspirateReply, error)
	Dispense(context.Context, *DispenseRequest) (*DispenseReply, error)
	LoadTips(context.Context, *LoadTipsRequest) (*LoadTipsReply, error)
	Mix(context.Context, *MixRequest) (*MixReply, error)
	Move(context.Context, *MoveRequest) (*MoveReply, error)
	ResetPistons(context.Context, *ResetPistonsRequest) (*ResetPistonsReply, error)
	SetDriveSpeed(context.Context, *SetDriveSpeedRequest) (*SetDriveSpeedReply, error)
	SetPipetteSpeed(context.Context, *SetPipetteSpeedRequest) (*SetPipetteSpeedReply, error)
	UnloadTips(context.Context, *UnloadTipsRequest) (*UnloadTipsReply, error)
	UpdateMetaData(context.Context, *UpdateMetaDataRequest) (*UpdateMetaDataReply, error)
	Close(context.Context, *CloseRequest) (*CloseReply, error)
	GetCurrentPosition(context.Context, *GetCurrentPositionRequest) (*GetCurrentPositionReply, error)
	GetHeadState(context.Context, *GetHeadStateRequest) (*GetHeadStateReply, error)
	GetPositionState(context.Context, *GetPositionStateRequest) (*GetPositionStateReply, error)
	GetStatus(context.Context, *GetStatusRequest) (*GetStatusReply, error)
	Go(context.Context, *GoRequest) (*GoReply, error)
	LightsOff(context.Context, *LightsOffRequest) (*LightsOffReply, error)
	LightsOn(context.Context, *LightsOnRequest) (*LightsOnReply, error)
	LoadAdaptor(context.Context, *LoadAdaptorRequest) (*LoadAdaptorReply, error)
	LoadHead(context.Context, *LoadHeadRequest) (*LoadHeadReply, error)
	MoveRaw(context.Context, *MoveRawRequest) (*MoveRawReply, error)
	Open(context.Context, *OpenRequest) (*OpenReply, error)
	SetPositionState(context.Context, *SetPositionStateRequest) (*SetPositionStateReply, error)
	Stop(context.Context, *StopRequest) (*StopReply, error)
	UnloadAdaptor(context.Context, *UnloadAdaptorRequest) (*UnloadAdaptorReply, error)
	UnloadHead(context.Context, *UnloadHeadRequest) (*UnloadHeadReply, error)
	Wait(context.Context, *WaitRequest) (*WaitReply, error)
}

func RegisterExtendedLiquidhandlingDriverServer(s *grpc.Server, srv ExtendedLiquidhandlingDriverServer) {
	s.RegisterService(&_ExtendedLiquidhandlingDriver_serviceDesc, srv)
}

func _ExtendedLiquidhandlingDriver_AddPlateTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPlateToRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).AddPlateTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/AddPlateTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).AddPlateTo(ctx, req.(*AddPlateToRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Finalize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Finalize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Finalize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Finalize(ctx, req.(*FinalizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_GetCapabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).GetCapabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/GetCapabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).GetCapabilities(ctx, req.(*GetCapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_GetOutputFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOutputFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).GetOutputFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/GetOutputFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).GetOutputFile(ctx, req.(*GetOutputFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Initialize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitializeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Initialize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Initialize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Initialize(ctx, req.(*InitializeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Message_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Message(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Message",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Message(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_RemoveAllPlates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAllPlatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).RemoveAllPlates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/RemoveAllPlates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).RemoveAllPlates(ctx, req.(*RemoveAllPlatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_RemovePlateAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePlateAtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).RemovePlateAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/RemovePlateAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).RemovePlateAt(ctx, req.(*RemovePlateAtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Aspirate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AspirateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Aspirate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Aspirate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Aspirate(ctx, req.(*AspirateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Dispense_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DispenseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Dispense(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Dispense",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Dispense(ctx, req.(*DispenseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_LoadTips_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadTipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).LoadTips(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/LoadTips",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).LoadTips(ctx, req.(*LoadTipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Mix_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MixRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Mix(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Mix",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Mix(ctx, req.(*MixRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Move(ctx, req.(*MoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_ResetPistons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPistonsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).ResetPistons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/ResetPistons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).ResetPistons(ctx, req.(*ResetPistonsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_SetDriveSpeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDriveSpeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).SetDriveSpeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/SetDriveSpeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).SetDriveSpeed(ctx, req.(*SetDriveSpeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_SetPipetteSpeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPipetteSpeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).SetPipetteSpeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/SetPipetteSpeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).SetPipetteSpeed(ctx, req.(*SetPipetteSpeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_UnloadTips_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnloadTipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).UnloadTips(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/UnloadTips",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).UnloadTips(ctx, req.(*UnloadTipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_UpdateMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMetaDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).UpdateMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/UpdateMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).UpdateMetaData(ctx, req.(*UpdateMetaDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_GetCurrentPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurrentPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).GetCurrentPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/GetCurrentPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).GetCurrentPosition(ctx, req.(*GetCurrentPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_GetHeadState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHeadStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).GetHeadState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/GetHeadState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).GetHeadState(ctx, req.(*GetHeadStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_GetPositionState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPositionStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).GetPositionState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/GetPositionState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).GetPositionState(ctx, req.(*GetPositionStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).GetStatus(ctx, req.(*GetStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Go_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Go(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Go",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Go(ctx, req.(*GoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_LightsOff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LightsOffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).LightsOff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/LightsOff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).LightsOff(ctx, req.(*LightsOffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_LightsOn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LightsOnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).LightsOn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/LightsOn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).LightsOn(ctx, req.(*LightsOnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_LoadAdaptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadAdaptorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).LoadAdaptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/LoadAdaptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).LoadAdaptor(ctx, req.(*LoadAdaptorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_LoadHead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadHeadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).LoadHead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/LoadHead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).LoadHead(ctx, req.(*LoadHeadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_MoveRaw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveRawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).MoveRaw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/MoveRaw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).MoveRaw(ctx, req.(*MoveRawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Open(ctx, req.(*OpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_SetPositionState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPositionStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).SetPositionState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/SetPositionState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).SetPositionState(ctx, req.(*SetPositionStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_UnloadAdaptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnloadAdaptorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).UnloadAdaptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/UnloadAdaptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).UnloadAdaptor(ctx, req.(*UnloadAdaptorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_UnloadHead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnloadHeadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).UnloadHead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/UnloadHead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).UnloadHead(ctx, req.(*UnloadHeadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExtendedLiquidhandlingDriver_Wait_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtendedLiquidhandlingDriverServer).Wait(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lh.ExtendedLiquidhandlingDriver/Wait",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtendedLiquidhandlingDriverServer).Wait(ctx, req.(*WaitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExtendedLiquidhandlingDriver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lh.ExtendedLiquidhandlingDriver",
	HandlerType: (*ExtendedLiquidhandlingDriverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPlateTo",
			Handler:    _ExtendedLiquidhandlingDriver_AddPlateTo_Handler,
		},
		{
			MethodName: "Finalize",
			Handler:    _ExtendedLiquidhandlingDriver_Finalize_Handler,
		},
		{
			MethodName: "GetCapabilities",
			Handler:    _ExtendedLiquidhandlingDriver_GetCapabilities_Handler,
		},
		{
			MethodName: "GetOutputFile",
			Handler:    _ExtendedLiquidhandlingDriver_GetOutputFile_Handler,
		},
		{
			MethodName: "Initialize",
			Handler:    _ExtendedLiquidhandlingDriver_Initialize_Handler,
		},
		{
			MethodName: "Message",
			Handler:    _ExtendedLiquidhandlingDriver_Message_Handler,
		},
		{
			MethodName: "RemoveAllPlates",
			Handler:    _ExtendedLiquidhandlingDriver_RemoveAllPlates_Handler,
		},
		{
			MethodName: "RemovePlateAt",
			Handler:    _ExtendedLiquidhandlingDriver_RemovePlateAt_Handler,
		},
		{
			MethodName: "Aspirate",
			Handler:    _ExtendedLiquidhandlingDriver_Aspirate_Handler,
		},
		{
			MethodName: "Dispense",
			Handler:    _ExtendedLiquidhandlingDriver_Dispense_Handler,
		},
		{
			MethodName: "LoadTips",
			Handler:    _ExtendedLiquidhandlingDriver_LoadTips_Handler,
		},
		{
			MethodName: "Mix",
			Handler:    _ExtendedLiquidhandlingDriver_Mix_Handler,
		},
		{
			MethodName: "Move",
			Handler:    _ExtendedLiquidhandlingDriver_Move_Handler,
		},
		{
			MethodName: "ResetPistons",
			Handler:    _ExtendedLiquidhandlingDriver_ResetPistons_Handler,
		},
		{
			MethodName: "SetDriveSpeed",
			Handler:    _ExtendedLiquidhandlingDriver_SetDriveSpeed_Handler,
		},
		{
			MethodName: "SetPipetteSpeed",
			Handler:    _ExtendedLiquidhandlingDriver_SetPipetteSpeed_Handler,
		},
		{
			MethodName: "UnloadTips",
			Handler:    _ExtendedLiquidhandlingDriver_UnloadTips_Handler,
		},
		{
			MethodName: "UpdateMetaData",
			Handler:    _ExtendedLiquidhandlingDriver_UpdateMetaData_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _ExtendedLiquidhandlingDriver_Close_Handler,
		},
		{
			MethodName: "GetCurrentPosition",
			Handler:    _ExtendedLiquidhandlingDriver_GetCurrentPosition_Handler,
		},
		{
			MethodName: "GetHeadState",
			Handler:    _ExtendedLiquidhandlingDriver_GetHeadState_Handler,
		},
		{
			MethodName: "GetPositionState",
			Handler:    _ExtendedLiquidhandlingDriver_GetPositionState_Handler,
		},
		{
			MethodName: "GetStatus",
			Handler:    _ExtendedLiquidhandlingDriver_GetStatus_Handler,
		},
		{
			MethodName: "Go",
			Handler:    _ExtendedLiquidhandlingDriver_Go_Handler,
		},
		{
			MethodName: "LightsOff",
			Handler:    _ExtendedLiquidhandlingDriver_LightsOff_Handler,
		},
		{
			MethodName: "LightsOn",
			Handler:    _ExtendedLiquidhandlingDriver_LightsOn_Handler,
		},
		{
			MethodName: "LoadAdaptor",
			Handler:    _ExtendedLiquidhandlingDriver_LoadAdaptor_Handler,
		},
		{
			MethodName: "LoadHead",
			Handler:    _ExtendedLiquidhandlingDriver_LoadHead_Handler,
		},
		{
			MethodName: "MoveRaw",
			Handler:    _ExtendedLiquidhandlingDriver_MoveRaw_Handler,
		},
		{
			MethodName: "Open",
			Handler:    _ExtendedLiquidhandlingDriver_Open_Handler,
		},
		{
			MethodName: "SetPositionState",
			Handler:    _ExtendedLiquidhandlingDriver_SetPositionState_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _ExtendedLiquidhandlingDriver_Stop_Handler,
		},
		{
			MethodName: "UnloadAdaptor",
			Handler:    _ExtendedLiquidhandlingDriver_UnloadAdaptor_Handler,
		},
		{
			MethodName: "UnloadHead",
			Handler:    _ExtendedLiquidhandlingDriver_UnloadHead_Handler,
		},
		{
			MethodName: "Wait",
			Handler:    _ExtendedLiquidhandlingDriver_Wait_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lh/lh.proto",
}

func init() { proto.RegisterFile("lh/lh.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 4077 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5c, 0x49, 0x73, 0xdb, 0xc8,
	0xf5, 0x17, 0x04, 0xc9, 0x43, 0x3e, 0x6a, 0x6d, 0x6a, 0x81, 0x38, 0xb6, 0xc7, 0x03, 0xdb, 0xb2,
	0xbc, 0x8e, 0x08, 0x6a, 0xb5, 0xc7, 0x1e, 0xd3, 0xb2, 0x25, 0xdb, 0x23, 0x8d, 0xf4, 0x97, 0x64,
	0x7b, 0x96, 0x7f, 0x32, 0x81, 0x4c, 0x48, 0x42, 0x0d, 0x05, 0x70, 0x48, 0x48, 0xb6, 0x92, 0x1c,
	0x73, 0x9f, 0xaa, 0x5c, 0x92, 0x4a, 0x55, 0x3e, 0x48, 0x52, 0x95, 0x5c, 0xf2, 0x0d, 0x72, 0x98,
	0x54, 0xa5, 0x72, 0xcd, 0x29, 0xf7, 0x5c, 0x72, 0x48, 0x0a, 0xbd, 0x00, 0xdd, 0x40, 0x03, 0xa4,
	0x60, 0x3b, 0x95, 0x4a, 0x74, 0x51, 0x89, 0x8d, 0xf7, 0x7a, 0x79, 0xdb, 0xef, 0xf5, 0x03, 0xba,
	0xa1, 0x50, 0xdf, 0xff, 0xa8, 0xbe, 0x7f, 0xab, 0xd1, 0x74, 0x3d, 0x17, 0x75, 0xd7, 0xf7, 0xf5,
	0x9f, 0x29, 0x00, 0x6b, 0x66, 0x63, 0xcd, 0x6a, 0xb5, 0xcc, 0x3d, 0x0b, 0x2d, 0x42, 0xfe, 0xc0,
	0x6c, 0x7c, 0xbd, 0x6b, 0x5b, 0xf5, 0x9a, 0xa6, 0x5c, 0x50, 0xa7, 0x0a, 0xc6, 0xd9, 0x5b, 0xf5,
	0xfd, 0x5b, 0x21, 0x89, 0xff, 0xef, 0xb2, 0xff, 0xf8, 0x91, 0xe3, 0x35, 0x8f, 0x37, 0x73, 0x07,
	0xf4, 0x67, 0xe9, 0x0e, 0xf4, 0x0b, 0x8f, 0xd0, 0x10, 0xa8, 0xdf, 0x58, 0xc7, 0x9a, 0x72, 0x41,
	0x99, 0xca, 0x6f, 0xfa, 0xff, 0xa2, 0x11, 0xe8, 0x3d, 0x32, 0xeb, 0x87, 0x96, 0xd6, 0x8d, 0xdb,
	0xc8, 0x8f, 0xdb, 0xdd, 0x0b, 0x8a, 0xfe, 0x21, 0x40, 0xd5, 0x39, 0x66, 0xb3, 0x28, 0x42, 0x6f,
	0xb5, 0xb9, 0xf7, 0x75, 0x99, 0xf2, 0xf6, 0x54, 0x9b, 0x7b, 0x65, 0x5d, 0x83, 0xb1, 0x15, 0xcb,
	0x5b, 0x32, 0x1b, 0xe6, 0x8e, 0x5d, 0xb7, 0x3d, 0xdb, 0x6a, 0x6d, 0x5a, 0xdf, 0x1e, 0x5a, 0x2d,
	0x4f, 0x6f, 0xc1, 0x48, 0xec, 0x49, 0xa3, 0x7e, 0x8c, 0x6e, 0x40, 0xef, 0xa6, 0xe5, 0xd1, 0x6e,
	0x0a, 0xc6, 0xb8, 0xbf, 0x90, 0xd5, 0xc7, 0x1b, 0x4d, 0xb7, 0x61, 0x35, 0x7d, 0x2a, 0x3a, 0xdc,
	0x66, 0xcf, 0xa6, 0xe5, 0x95, 0xd1, 0x4d, 0x42, 0x6d, 0xe0, 0xc9, 0x15, 0x0c, 0xcd, 0xa7, 0x5e,
	0x72, 0x0f, 0x0e, 0x4c, 0xa7, 0xb6, 0xe5, 0x99, 0xde, 0xa1, 0x40, 0x6e, 0xe8, 0x7f, 0x56, 0x60,
	0x70, 0xd5, 0x35, 0x6b, 0xdb, 0x76, 0x83, 0x4d, 0x04, 0x5d, 0x86, 0x5e, 0x33, 0x98, 0x77, 0xc1,
	0x18, 0xf2, 0xbb, 0xa8, 0x36, 0x9b, 0xe6, 0xf1, 0xfa, 0xae, 0xed, 0x78, 0x73, 0x33, 0x9b, 0x3d,
	0x66, 0x73, 0xaf, 0xec, 0x2f, 0xcf, 0x27, 0x23, 0x23, 0xa9, 0xb8, 0xd1, 0x60, 0x8d, 0x15, 0x4d,
	0x0d, 0x1a, 0x2b, 0x68, 0x92, 0x34, 0xce, 0x68, 0x3d, 0xb8, 0xc3, 0x61, 0xae, 0xc3, 0x96, 0xd7,
	0xb4, 0x9d, 0x3d, 0x4c, 0x37, 0xc3, 0xe8, 0x66, 0xb5, 0xde, 0x34, 0xba, 0x59, 0x46, 0x37, 0xa7,
	0x9d, 0x49, 0xa3, 0x9b, 0xd3, 0xef, 0x41, 0x7f, 0xb8, 0x36, 0x5f, 0x94, 0x37, 0x45, 0x51, 0xa6,
	0x0b, 0x07, 0xeb, 0x6a, 0xd3, 0x3a, 0x70, 0x8f, 0xac, 0x6a, 0xbd, 0xbe, 0x51, 0x37, 0xbd, 0x50,
	0x57, 0x8f, 0x60, 0x24, 0xf6, 0x24, 0xc3, 0x00, 0x7f, 0x51, 0x60, 0xf8, 0x99, 0x53, 0xff, 0x6f,
	0x95, 0xff, 0x7d, 0x18, 0xe4, 0x57, 0x97, 0x41, 0x40, 0x3a, 0x14, 0x5e, 0x98, 0xb6, 0xc7, 0x24,
	0x53, 0xe4, 0x25, 0xa3, 0x10, 0x39, 0xe8, 0xb7, 0x21, 0x4f, 0x68, 0x32, 0xf4, 0x3f, 0x0c, 0x83,
	0xcb, 0xb6, 0x63, 0xd6, 0xed, 0x1f, 0x5b, 0x4c, 0xb5, 0xf7, 0xa0, 0x3f, 0x6c, 0xca, 0xd0, 0xe5,
	0x24, 0x71, 0xa8, 0xc7, 0x96, 0x59, 0x93, 0x4e, 0x5b, 0xa5, 0xd3, 0xa6, 0xc6, 0x49, 0xe8, 0x32,
	0x8c, 0xf3, 0x14, 0x46, 0x9f, 0x35, 0x6a, 0xa6, 0x67, 0xad, 0x59, 0x9e, 0xf9, 0xd0, 0xf4, 0x4c,
	0x36, 0x5a, 0x59, 0x34, 0x1f, 0x1c, 0xf8, 0x36, 0xbc, 0xe6, 0xb6, 0x2b, 0x0d, 0x1a, 0x78, 0x2e,
	0x0f, 0xa1, 0x18, 0xed, 0x2b, 0x9b, 0x30, 0x57, 0xed, 0xbd, 0x7d, 0xaf, 0xb5, 0xee, 0x70, 0xc2,
	0x0c, 0x9b, 0x32, 0x74, 0xf9, 0x4f, 0x05, 0x06, 0x1f, 0xda, 0xad, 0x86, 0xe5, 0xb4, 0x98, 0x82,
	0x98, 0xf5, 0xb1, 0x2e, 0x78, 0xeb, 0xab, 0xb9, 0x87, 0x3b, 0x75, 0xba, 0x28, 0x74, 0x89, 0xf7,
	0x8f, 0x82, 0x31, 0xc8, 0xd1, 0xed, 0xb8, 0x6e, 0x3d, 0xcd, 0x61, 0x8a, 0xbc, 0xc3, 0xa8, 0xef,
	0xc6, 0x3b, 0xd8, 0xfc, 0xe6, 0xb5, 0xf7, 0x92, 0xe7, 0x37, 0xef, 0x4b, 0x30, 0x14, 0x40, 0x06,
	0x09, 0xde, 0x82, 0xf1, 0x15, 0xcb, 0xdb, 0x70, 0x5b, 0xb6, 0x67, 0xbb, 0x8e, 0x4f, 0x61, 0x49,
	0xcd, 0x32, 0x4f, 0x4d, 0xe1, 0x2b, 0x18, 0x8d, 0xd3, 0xfb, 0xe3, 0x16, 0xf9, 0x71, 0xf3, 0xd9,
	0xd0, 0xa6, 0x08, 0xc3, 0x4f, 0x1c, 0xdb, 0xb3, 0x05, 0x87, 0xbb, 0x0f, 0x83, 0x7c, 0x63, 0x86,
	0x35, 0x5e, 0x67, 0xd1, 0x18, 0x87, 0xe2, 0xaa, 0x97, 0xba, 0xc0, 0x25, 0x40, 0x11, 0xe2, 0x0c,
	0x23, 0xbe, 0x80, 0xb1, 0x2d, 0xcb, 0xdb, 0xb0, 0x1b, 0x96, 0xe7, 0x59, 0x5b, 0x0d, 0xcb, 0x4a,
	0xf5, 0xf5, 0x0e, 0x42, 0x35, 0x09, 0x66, 0x15, 0x1f, 0x58, 0x62, 0x1d, 0x67, 0xf4, 0x9b, 0x6a,
	0xab, 0x61, 0x37, 0x39, 0x75, 0xff, 0xcf, 0xf9, 0x4d, 0x28, 0x80, 0x0c, 0x12, 0xac, 0xc1, 0x00,
	0x6b, 0xe8, 0x58, 0xb3, 0x79, 0x99, 0x6c, 0xf2, 0x32, 0xd9, 0xe4, 0x88, 0x6c, 0xf4, 0xbb, 0xd0,
	0x17, 0x8c, 0x92, 0x61, 0x92, 0xff, 0xf0, 0xd3, 0x5e, 0xfb, 0x75, 0xea, 0x0c, 0x27, 0x45, 0x75,
	0x26, 0xa8, 0xdd, 0x60, 0x74, 0x64, 0xd2, 0x89, 0xe2, 0xaf, 0xb0, 0xec, 0x84, 0x25, 0x13, 0xf2,
	0xec, 0x64, 0x86, 0xcd, 0x85, 0x68, 0x5d, 0x7d, 0x27, 0x2a, 0x5e, 0x84, 0x1c, 0x5e, 0x7c, 0x06,
	0xc1, 0xf5, 0x43, 0x61, 0xbd, 0x61, 0x05, 0x30, 0x75, 0x1b, 0xf2, 0xe4, 0x67, 0x86, 0xae, 0x5e,
	0xc2, 0xf8, 0xd6, 0x09, 0x02, 0x2c, 0xaa, 0x88, 0xfa, 0x38, 0x4f, 0xf7, 0x25, 0x64, 0xfd, 0xe1,
	0xee, 0x81, 0x07, 0x68, 0x43, 0x5f, 0x86, 0xd1, 0x2d, 0x69, 0x54, 0x3e, 0xe1, 0x64, 0xa7, 0x58,
	0xbe, 0xd9, 0x36, 0x3d, 0x09, 0x72, 0xb7, 0xcc, 0x09, 0xca, 0x55, 0x40, 0x7e, 0x82, 0x53, 0xad,
	0x99, 0x0d, 0xcf, 0x6d, 0xa6, 0x0e, 0x56, 0x85, 0x21, 0x81, 0x34, 0xc3, 0x68, 0xd3, 0x30, 0xe1,
	0xef, 0x9e, 0x0e, 0x9b, 0x4d, 0xcb, 0x09, 0x04, 0x95, 0x3a, 0xe8, 0x0f, 0x30, 0x32, 0xc6, 0x38,
	0xde, 0x16, 0xd6, 0x7d, 0x02, 0xc5, 0x4d, 0xab, 0xe5, 0xc7, 0xf2, 0x96, 0xe7, 0x3a, 0xad, 0x13,
	0xe3, 0x83, 0xfe, 0x00, 0x86, 0xc5, 0x0e, 0x32, 0x48, 0xe5, 0x3e, 0x86, 0x93, 0x87, 0x4d, 0xfb,
	0x28, 0x05, 0xa5, 0xf2, 0xb2, 0x59, 0x28, 0x74, 0x16, 0x4b, 0x80, 0x22, 0x3d, 0x64, 0x98, 0xc6,
	0x0e, 0x0c, 0x57, 0x6b, 0x35, 0x0c, 0xb8, 0xdb, 0x6e, 0xea, 0x1c, 0x2e, 0x8a, 0xde, 0x31, 0x80,
	0x3d, 0x3f, 0x70, 0x8a, 0x94, 0xf8, 0xea, 0x1b, 0x2c, 0x3f, 0x46, 0x86, 0x59, 0x22, 0x18, 0xa2,
	0xc9, 0xea, 0xee, 0x2e, 0x8b, 0x0c, 0x9f, 0xc0, 0x00, 0xd7, 0x96, 0xa1, 0xd3, 0xdf, 0x74, 0x43,
	0x61, 0xcd, 0x3d, 0xea, 0x04, 0x85, 0xb9, 0x10, 0x98, 0x1a, 0xb6, 0x39, 0x3a, 0x83, 0x85, 0x63,
	0x16, 0xb6, 0xe5, 0xe1, 0x38, 0x75, 0x0b, 0xc8, 0xa1, 0x40, 0x2a, 0x58, 0x73, 0x74, 0xa9, 0x91,
	0x9c, 0xa3, 0x9b, 0x63, 0x74, 0x2c, 0x92, 0x27, 0x2c, 0x63, 0x9e, 0xa9, 0x74, 0x41, 0xcb, 0x05,
	0x1e, 0xb0, 0xe0, 0x87, 0x65, 0x22, 0xba, 0x8c, 0xf8, 0xed, 0xf3, 0x9a, 0xaf, 0x3a, 0xf7, 0x3c,
	0x25, 0x25, 0x33, 0x13, 0xf1, 0x5b, 0xe1, 0xf0, 0x9b, 0x8d, 0x92, 0x0d, 0x86, 0xb6, 0x3c, 0xb7,
	0xc1, 0xc1, 0x10, 0xf9, 0x99, 0xa1, 0xab, 0x02, 0xe4, 0x57, 0x98, 0x6b, 0xe9, 0x0b, 0xf0, 0xde,
	0x4a, 0x36, 0x1f, 0xb8, 0x06, 0xc5, 0x15, 0xcb, 0xf3, 0x63, 0x7e, 0x32, 0x92, 0xb1, 0x00, 0xfa,
	0x02, 0x86, 0x45, 0xda, 0xb7, 0x15, 0x3a, 0xc7, 0x70, 0x25, 0x6c, 0xfd, 0xd0, 0x6b, 0x1c, 0x7a,
	0xcb, 0x76, 0x3d, 0xd8, 0x29, 0x7c, 0x0e, 0x28, 0xd2, 0x1e, 0x1b, 0xb1, 0x2f, 0xdb, 0x88, 0x08,
	0x86, 0x56, 0x2c, 0x8f, 0x3c, 0x61, 0xa3, 0x79, 0x30, 0xc0, 0xb5, 0xf9, 0x23, 0x55, 0x44, 0x59,
	0xb6, 0x85, 0xee, 0x2c, 0x33, 0xb9, 0x0e, 0x23, 0x04, 0x77, 0x3b, 0xc1, 0xcd, 0x25, 0x40, 0x11,
	0xe2, 0x0c, 0x2a, 0x1f, 0x80, 0xbe, 0xa5, 0xba, 0x1b, 0xec, 0xaf, 0xf5, 0x3b, 0x00, 0xf4, 0x77,
	0x86, 0xce, 0x2e, 0x42, 0x1f, 0x1f, 0x7d, 0xf8, 0x69, 0xab, 0xc1, 0xb4, 0x2f, 0x41, 0xbf, 0x10,
	0x2b, 0x44, 0x2a, 0x56, 0xd7, 0xd1, 0xa1, 0xc0, 0xe5, 0x7c, 0x22, 0x4d, 0x8e, 0xd2, 0x3c, 0x83,
	0x11, 0xd9, 0x64, 0xc4, 0xd2, 0x6b, 0x8e, 0x94, 0x5e, 0x59, 0x63, 0x80, 0xb2, 0x55, 0xea, 0xeb,
	0x55, 0x1e, 0x4b, 0xaa, 0x3e, 0x96, 0x84, 0x13, 0x24, 0xba, 0x15, 0x07, 0x67, 0x3b, 0xc9, 0xc7,
	0xa0, 0x25, 0xd5, 0x55, 0xd0, 0x0d, 0x31, 0xcc, 0x27, 0x17, 0x6d, 0x71, 0x4f, 0x3f, 0x84, 0x4b,
	0xc9, 0x76, 0x94, 0x5a, 0x8b, 0xbe, 0xc4, 0xd7, 0xa2, 0xe3, 0x78, 0x49, 0x1e, 0xea, 0x2f, 0xa1,
	0x94, 0xdc, 0x3f, 0x7a, 0x14, 0xaf, 0x96, 0x4f, 0xa5, 0x9b, 0xb6, 0xac, 0x72, 0xae, 0xff, 0xba,
	0x00, 0x45, 0x99, 0x28, 0x64, 0x65, 0x70, 0xb9, 0x2e, 0x3e, 0xe1, 0x75, 0x51, 0x30, 0xae, 0x09,
	0x93, 0x60, 0xa2, 0xa6, 0x89, 0x5a, 0xd4, 0xd7, 0x7c, 0xbd, 0xf9, 0x0e, 0x5a, 0xe5, 0x50, 0xae,
	0xad, 0x83, 0x56, 0x7d, 0xc8, 0xfb, 0x88, 0x30, 0x31, 0xc8, 0x2b, 0x09, 0x4c, 0xe4, 0x2f, 0xcf,
	0x30, 0xcb, 0x18, 0x18, 0xf6, 0xb5, 0x63, 0x98, 0x43, 0x1f, 0x13, 0x06, 0x06, 0x82, 0x57, 0xa4,
	0xeb, 0xaa, 0xe3, 0xf2, 0x5b, 0x6c, 0x7e, 0xf3, 0xe8, 0x2e, 0xe1, 0x26, 0xd0, 0x18, 0x55, 0x0d,
	0xe5, 0xde, 0xb6, 0x1b, 0x3b, 0xee, 0x6b, 0x09, 0xfb, 0x02, 0x13, 0xea, 0xa2, 0x96, 0x4f, 0x16,
	0xea, 0xb6, 0xdd, 0x78, 0x65, 0xb6, 0xa4, 0xe3, 0x2f, 0xa2, 0x7b, 0x70, 0x06, 0xeb, 0x6f, 0x5a,
	0x83, 0x93, 0x4d, 0xdf, 0x1f, 0xb7, 0x3c, 0x1d, 0xf0, 0x97, 0xb5, 0x42, 0x06, 0xfe, 0x32, 0x2a,
	0x53, 0x7e, 0x43, 0xeb, 0x6b, 0x2b, 0x6f, 0xcc, 0x62, 0xa0, 0x51, 0xca, 0x52, 0xd1, 0xfa, 0xc9,
	0x2b, 0x1a, 0xbf, 0xb9, 0x12, 0x34, 0xcf, 0x68, 0x03, 0x61, 0xf3, 0x4c, 0xd0, 0x3c, 0xab, 0x0d,
	0x86, 0xcd, 0xb3, 0x41, 0xf3, 0x9c, 0x36, 0x14, 0x36, 0xcf, 0xa1, 0x19, 0xda, 0x3c, 0xaf, 0x0d,
	0xe3, 0xe9, 0x9c, 0xe3, 0x52, 0x1a, 0xba, 0x18, 0x1f, 0x12, 0x85, 0x19, 0xcd, 0xa3, 0x79, 0xca,
	0xb5, 0xa8, 0x15, 0x31, 0xd7, 0x85, 0x38, 0x17, 0x8d, 0xe1, 0x02, 0xe3, 0x22, 0xaa, 0x10, 0x46,
	0x63, 0x5a, 0x1b, 0x09, 0xcb, 0xb9, 0x22, 0xe3, 0xb6, 0xdd, 0xe0, 0x99, 0x8c, 0x69, 0x34, 0x45,
	0x99, 0xca, 0xda, 0x68, 0x52, 0xda, 0x85, 0x29, 0xcb, 0x01, 0xa5, 0xa1, 0x8d, 0xa5, 0x52, 0x1a,
	0x01, 0x65, 0x45, 0x1b, 0x4f, 0xa5, 0xac, 0x04, 0x94, 0x33, 0x9a, 0x96, 0x4a, 0x39, 0x13, 0x50,
	0xce, 0x6a, 0x13, 0xa9, 0x94, 0xb3, 0x01, 0xe5, 0x9c, 0x56, 0x4a, 0xa5, 0x9c, 0x43, 0x8b, 0x94,
	0x72, 0x5e, 0x7b, 0x1f, 0x53, 0xea, 0x5c, 0xfd, 0x7b, 0x69, 0xdf, 0x74, 0x1c, 0xab, 0xbe, 0x61,
	0x36, 0xcd, 0x03, 0xcb, 0xb3, 0x04, 0x59, 0x1b, 0xf3, 0xe8, 0x3e, 0x65, 0x5d, 0xd0, 0xce, 0x62,
	0xd6, 0xab, 0x71, 0x59, 0xa7, 0xf6, 0xb0, 0x80, 0xee, 0xd2, 0x1e, 0x16, 0xb5, 0x73, 0xb8, 0x87,
	0x49, 0xc1, 0x56, 0x97, 0x5c, 0xb7, 0x59, 0xb3, 0x1d, 0xd3, 0x0b, 0x82, 0xa3, 0xc0, 0xbe, 0xc8,
	0x4c, 0xae, 0x32, 0xad, 0x9d, 0xc7, 0x61, 0xd1, 0x6f, 0xae, 0x04, 0x1e, 0x54, 0x29, 0x6b, 0x1f,
	0x84, 0x1e, 0x14, 0x37, 0xb9, 0x6a, 0xab, 0x65, 0x1d, 0xec, 0xd4, 0x39, 0x74, 0xc1, 0xfc, 0xe5,
	0xa7, 0x3d, 0x39, 0x34, 0x54, 0xd4, 0x1f, 0xc3, 0x44, 0xa2, 0x99, 0xa2, 0xeb, 0x3c, 0xc0, 0x15,
	0x8c, 0x31, 0x4e, 0x68, 0xbc, 0x35, 0x13, 0xb8, 0x3a, 0x82, 0xe9, 0xce, 0xc2, 0x72, 0x2a, 0x74,
	0x4d, 0x8b, 0xd0, 0x55, 0xe2, 0xdf, 0x53, 0x88, 0xbd, 0x31, 0x18, 0xfb, 0x09, 0x4c, 0x76, 0x36,
	0x2e, 0xfa, 0xbf, 0x38, 0xa4, 0xcd, 0x74, 0x8e, 0x26, 0x52, 0x78, 0x6b, 0xc0, 0xcd, 0x0e, 0x82,
	0x56, 0xea, 0x8a, 0x6f, 0x8a, 0x2b, 0x1e, 0xe7, 0x57, 0xcc, 0x75, 0xc5, 0x96, 0x7b, 0x08, 0x17,
	0x3b, 0x18, 0x11, 0x7d, 0x16, 0x5f, 0x6b, 0xb9, 0xc3, 0x10, 0x2b, 0x5d, 0xe8, 0x03, 0x18, 0x95,
	0x46, 0x24, 0x74, 0x55, 0xcc, 0x69, 0x46, 0x48, 0x4e, 0x13, 0x09, 0x5b, 0xec, 0x9d, 0xdc, 0x70,
	0x2c, 0x38, 0x49, 0xdf, 0x6b, 0x0a, 0xd1, 0x8b, 0xf0, 0x7e, 0xdf, 0x0d, 0x13, 0x89, 0x8e, 0xd6,
	0x41, 0x36, 0x91, 0x4f, 0xc9, 0xec, 0xfc, 0xfd, 0x68, 0x35, 0xba, 0x0f, 0x7e, 0xee, 0xd6, 0x0f,
	0x0f, 0x22, 0x49, 0xc1, 0xa4, 0x98, 0x14, 0x24, 0xd0, 0xf9, 0x71, 0x49, 0xc8, 0x05, 0x8a, 0x3e,
	0xdd, 0x72, 0xdd, 0x7d, 0xb5, 0xc9, 0xa9, 0x93, 0x24, 0x01, 0x53, 0x62, 0x12, 0x90, 0x48, 0x39,
	0xcf, 0x26, 0x1e, 0xec, 0x85, 0x31, 0x8c, 0x17, 0x79, 0x18, 0xcf, 0x51, 0x68, 0x1e, 0x15, 0xa0,
	0x59, 0x65, 0x88, 0x3b, 0x2a, 0x20, 0x2e, 0x6d, 0x2e, 0xeb, 0x7f, 0x53, 0x61, 0x30, 0x92, 0x2a,
	0xbc, 0xa9, 0x38, 0x8b, 0xbc, 0x38, 0xf3, 0x54, 0x76, 0x45, 0x5e, 0x76, 0x2a, 0x15, 0x54, 0x91,
	0x17, 0x94, 0x4a, 0x65, 0x52, 0xe4, 0x65, 0xa2, 0xd0, 0xe5, 0x5f, 0x13, 0xf3, 0x9d, 0x51, 0xce,
	0x4b, 0x78, 0x5b, 0xc1, 0x52, 0xb9, 0x2e, 0x26, 0x37, 0x7c, 0xd8, 0x7a, 0x61, 0xd5, 0xeb, 0x62,
	0x22, 0x93, 0x20, 0xad, 0xdb, 0x91, 0xfc, 0xe4, 0x22, 0x17, 0x5d, 0x53, 0x81, 0xb6, 0x5c, 0x0e,
	0xba, 0x24, 0xb9, 0x89, 0x22, 0xcf, 0x3f, 0x14, 0x79, 0xfe, 0xa1, 0xc8, 0xf3, 0x0f, 0x45, 0x9e,
	0x7f, 0x28, 0x2c, 0xff, 0x98, 0x8c, 0xe4, 0x1f, 0xb8, 0x38, 0xfe, 0xe0, 0x41, 0xa0, 0x52, 0x9a,
	0x71, 0xc8, 0x82, 0xb4, 0x3c, 0xcd, 0xcb, 0x1a, 0xa4, 0x23, 0xbd, 0xa5, 0x04, 0x69, 0xf9, 0xb8,
	0x1d, 0x07, 0xe9, 0x76, 0xd3, 0xe6, 0x62, 0xd7, 0x36, 0x9c, 0x4f, 0x07, 0x6a, 0x64, 0x88, 0x41,
	0xe8, 0x1c, 0x09, 0x42, 0x49, 0xb0, 0xce, 0x5e, 0x8f, 0x8f, 0xc9, 0xa7, 0xe2, 0xdb, 0x2a, 0xdf,
	0xdb, 0x68, 0x10, 0xd2, 0x04, 0xc9, 0x90, 0x5e, 0x9a, 0xd0, 0x51, 0xda, 0x9e, 0xaa, 0x8e, 0x5b,
	0xa2, 0x3a, 0x34, 0x51, 0x1d, 0x3b, 0x9c, 0x11, 0x10, 0x65, 0xbc, 0xe2, 0x36, 0x96, 0x29, 0x63,
	0xa2, 0xf5, 0xb8, 0x2a, 0x8c, 0x4e, 0xf7, 0x19, 0x52, 0x45, 0xfc, 0x4e, 0x81, 0xa1, 0x18, 0x80,
	0xbc, 0x61, 0xb0, 0x99, 0x17, 0x63, 0x77, 0x27, 0x89, 0x1d, 0x09, 0x48, 0x65, 0x31, 0x98, 0xa7,
	0xa7, 0xd0, 0x38, 0x5c, 0xe9, 0x0e, 0xdc, 0x68, 0x9f, 0xb6, 0xa5, 0xaa, 0xea, 0x86, 0xa8, 0xaa,
	0x31, 0x52, 0x38, 0x89, 0xf6, 0xc4, 0x14, 0xd5, 0x02, 0xbd, 0xfd, 0x78, 0x68, 0x2d, 0xae, 0xa6,
	0xe9, 0xce, 0x32, 0x4c, 0xa9, 0x92, 0x42, 0xbb, 0x8e, 0xe4, 0x41, 0x09, 0x76, 0x1d, 0x4d, 0xcb,
	0x88, 0x5d, 0xff, 0x52, 0x81, 0xe1, 0x78, 0x0f, 0x19, 0x75, 0xad, 0x52, 0x5d, 0x7f, 0x24, 0xea,
	0xba, 0xc4, 0xa9, 0x6c, 0xf5, 0xf1, 0x43, 0xeb, 0xc8, 0x7e, 0x19, 0x01, 0x6c, 0x01, 0x74, 0x14,
	0xaa, 0xc5, 0xef, 0x7a, 0x61, 0x40, 0x4c, 0x7c, 0xde, 0x3d, 0xe0, 0xe5, 0x65, 0x80, 0x97, 0x97,
	0x01, 0x9e, 0xda, 0x31, 0xde, 0xab, 0x14, 0xc1, 0xee, 0x46, 0xb6, 0xe2, 0x93, 0x32, 0x1f, 0xe5,
	0x80, 0x2f, 0xb2, 0x13, 0xbf, 0x13, 0x41, 0xba, 0x4b, 0x89, 0x48, 0xc7, 0x83, 0x27, 0x85, 0xba,
	0x3b, 0x91, 0x6d, 0xf8, 0x09, 0x98, 0x0d, 0x74, 0x53, 0x00, 0xc4, 0x64, 0xa0, 0xa6, 0x40, 0x79,
	0x57, 0x00, 0xca, 0x13, 0xae, 0xf3, 0xa4, 0x80, 0x3a, 0x2a, 0x00, 0xaa, 0xc2, 0x76, 0xec, 0xac,
	0x79, 0x41, 0x43, 0x61, 0xf3, 0x42, 0xd0, 0x4c, 0x36, 0xf2, 0x0a, 0xdb, 0xa6, 0x4f, 0x46, 0xb6,
	0xe9, 0x52, 0x54, 0x36, 0xa6, 0xf5, 0x65, 0xd0, 0x92, 0x22, 0x0f, 0xef, 0x74, 0x6a, 0x4a, 0xe2,
	0x83, 0x9d, 0xee, 0x47, 0x70, 0xb9, 0xa3, 0x8d, 0xa9, 0x1f, 0x34, 0xf9, 0x4e, 0x3b, 0x0a, 0x9a,
	0x78, 0x84, 0x2d, 0x40, 0xf1, 0x68, 0x22, 0xba, 0x8f, 0x22, 0x73, 0x1f, 0x45, 0xe6, 0x3e, 0x0a,
	0x2d, 0xac, 0x3e, 0x85, 0x0b, 0xf2, 0xca, 0xcd, 0xc9, 0x3f, 0xb8, 0xd5, 0xbf, 0x82, 0x31, 0x79,
	0x5f, 0xa8, 0x1a, 0x0f, 0x93, 0x97, 0x92, 0x8b, 0x46, 0xd2, 0xd0, 0x78, 0x0f, 0x8a, 0x92, 0x6d,
	0x13, 0xba, 0x22, 0xc6, 0x45, 0x44, 0xe3, 0x22, 0xbf, 0x79, 0x23, 0xd2, 0xfb, 0x7d, 0xb7, 0x1f,
	0x14, 0xa3, 0xe9, 0xc2, 0x7f, 0x60, 0xb6, 0x2d, 0x04, 0x1f, 0x45, 0x16, 0x7c, 0x14, 0x69, 0xfa,
	0xac, 0xb0, 0xa0, 0x72, 0x33, 0x12, 0x54, 0x52, 0x5d, 0xbb, 0x1c, 0xa4, 0xaf, 0x2c, 0x8c, 0xc8,
	0xd3, 0x57, 0x43, 0xff, 0x93, 0x02, 0xfd, 0x62, 0x89, 0xe2, 0xed, 0x64, 0x0f, 0x2c, 0x09, 0xe8,
	0x34, 0x7b, 0x98, 0x65, 0x45, 0x65, 0xb6, 0xc5, 0xc3, 0x45, 0xe5, 0x6d, 0xbb, 0xb1, 0xea, 0x9a,
	0x35, 0xdb, 0xd9, 0x7b, 0x60, 0xed, 0x9b, 0x47, 0xb6, 0x7b, 0xd8, 0x14, 0x77, 0x7b, 0xb2, 0x40,
	0xff, 0xb4, 0x27, 0xd7, 0x33, 0xd4, 0xab, 0xff, 0x4a, 0x81, 0x52, 0x32, 0x7f, 0x07, 0xaf, 0x2e,
	0x72, 0x69, 0xc0, 0x29, 0xd8, 0x88, 0x7a, 0x52, 0x1b, 0xd1, 0x0f, 0xe0, 0x9c, 0x50, 0x4c, 0x3a,
	0x8e, 0xe2, 0xfa, 0x2d, 0x38, 0xb3, 0xbe, 0xbb, 0xdb, 0xb2, 0x3c, 0xea, 0x02, 0x49, 0x79, 0x0d,
	0xa5, 0x42, 0x67, 0x21, 0xef, 0x77, 0xf7, 0xc4, 0xa9, 0x59, 0xaf, 0x69, 0xb1, 0x3f, 0x6c, 0xd0,
	0xbf, 0x00, 0x3d, 0x5e, 0xc0, 0x8a, 0x8d, 0x59, 0x01, 0xf5, 0xc8, 0xac, 0xd3, 0x01, 0x3f, 0x24,
	0x3e, 0x97, 0x42, 0xbf, 0xe9, 0x53, 0xeb, 0x16, 0x5c, 0x4d, 0x2c, 0x91, 0xc5, 0x46, 0x58, 0x60,
	0x23, 0xa8, 0x0c, 0x6d, 0xda, 0x33, 0x91, 0x61, 0xfe, 0xaa, 0xc0, 0xa8, 0x48, 0xc6, 0xfa, 0xfc,
	0x14, 0xf2, 0x8c, 0xa3, 0x45, 0xe7, 0x7e, 0x33, 0xb5, 0x70, 0x17, 0x1b, 0x20, 0xe4, 0x47, 0x0b,
	0xd0, 0xb7, 0xe6, 0xfa, 0xff, 0xae, 0xda, 0x07, 0xb6, 0xd7, 0xa2, 0x49, 0xe5, 0x48, 0x30, 0x53,
	0xde, 0x83, 0x04, 0x4a, 0xf4, 0x08, 0x06, 0x9e, 0x5b, 0x75, 0xf7, 0xa5, 0xed, 0x1d, 0x53, 0x5e,
	0x35, 0xdc, 0xf9, 0x60, 0x5e, 0xf6, 0x78, 0xd3, 0x74, 0x42, 0x28, 0x8d, 0x30, 0xe9, 0x4f, 0xa0,
	0x24, 0x99, 0x71, 0x58, 0x3e, 0xe4, 0x34, 0x34, 0x11, 0xd7, 0x90, 0x20, 0xb2, 0x17, 0x70, 0xb1,
	0x83, 0xe2, 0x25, 0x9a, 0xe6, 0x75, 0x72, 0x3e, 0x41, 0x27, 0x42, 0xc7, 0x9f, 0xc1, 0xd9, 0xb4,
	0x92, 0xba, 0xbf, 0x7b, 0xe2, 0xb1, 0x70, 0x82, 0xeb, 0x53, 0x5a, 0xc5, 0xfa, 0x18, 0x90, 0xa4,
	0x54, 0x2a, 0xfb, 0x82, 0x43, 0x56, 0x25, 0xbd, 0x0f, 0x23, 0xb2, 0x5d, 0x13, 0x9a, 0x12, 0xf9,
	0x8b, 0xc1, 0x9e, 0x91, 0xdb, 0xbe, 0x91, 0x1e, 0x9e, 0x40, 0xbf, 0x50, 0x73, 0x42, 0x0b, 0x7c,
	0x6c, 0xa0, 0x95, 0x0a, 0x3c, 0xc6, 0x92, 0xeb, 0xbc, 0x6c, 0x5a, 0x3e, 0xd0, 0x98, 0xad, 0xc3,
	0xa6, 0x75, 0x60, 0x39, 0x1e, 0x1f, 0x8f, 0xca, 0xfa, 0x06, 0x8c, 0xf8, 0x34, 0x96, 0xe3, 0x35,
	0x4d, 0xd1, 0xf0, 0xb3, 0xf6, 0xf8, 0x29, 0x0c, 0x46, 0xca, 0x57, 0x6f, 0xd0, 0xd9, 0x36, 0x7c,
	0xd0, 0xa6, 0xe2, 0xc2, 0x7f, 0xd6, 0xae, 0xb6, 0xdf, 0xc4, 0x61, 0xf9, 0xfd, 0xa1, 0x1b, 0xfa,
	0x84, 0x3e, 0xde, 0x26, 0xfe, 0xe6, 0x4e, 0x58, 0x29, 0x9c, 0x14, 0x61, 0x24, 0x81, 0x2e, 0x82,
	0x1c, 0xb9, 0x76, 0x35, 0xb1, 0xad, 0x7d, 0xb3, 0x11, 0x79, 0xe1, 0x77, 0x49, 0xac, 0x89, 0xc5,
	0x00, 0x96, 0xa0, 0xf9, 0x14, 0x0c, 0x3e, 0xda, 0xdd, 0xb5, 0x5e, 0x7a, 0xf6, 0x91, 0xf5, 0xd8,
	0xb2, 0xf7, 0xf6, 0x3d, 0x0a, 0xeb, 0xd1, 0x66, 0x7d, 0x03, 0x06, 0x23, 0x5b, 0xae, 0x37, 0x94,
	0xa3, 0xfe, 0x1c, 0x2e, 0xb4, 0xdb, 0x38, 0xf0, 0x75, 0x1a, 0x55, 0xfe, 0x96, 0x4d, 0x28, 0xf0,
	0x61, 0x7d, 0xff, 0xbd, 0xdb, 0xcf, 0x19, 0xf8, 0x5e, 0x3a, 0x9f, 0xe8, 0x35, 0xf1, 0xdd, 0x33,
	0x96, 0xb0, 0xdf, 0x13, 0x86, 0xb6, 0x96, 0xf8, 0x9a, 0x59, 0xb0, 0x03, 0x85, 0xda, 0xc1, 0xb4,
	0x68, 0x07, 0xef, 0xf3, 0xf9, 0x85, 0x7b, 0xd0, 0x70, 0x9d, 0x88, 0xd1, 0x47, 0x00, 0x58, 0xa1,
	0xea, 0xbf, 0x26, 0x96, 0x89, 0x53, 0x34, 0x9d, 0xb0, 0x71, 0xec, 0x4c, 0xfd, 0x09, 0xc9, 0xdc,
	0x6c, 0x24, 0x99, 0x6b, 0xf7, 0x06, 0x9d, 0x56, 0x96, 0x1f, 0xc0, 0x98, 0x7c, 0x73, 0xce, 0x07,
	0x3b, 0x35, 0x0c, 0x76, 0x91, 0x0d, 0x7c, 0x24, 0xd8, 0xf2, 0x0a, 0x94, 0x07, 0xdb, 0xb8, 0xea,
	0xf7, 0xa0, 0xc0, 0x2d, 0x92, 0xd5, 0x85, 0xcb, 0x6d, 0x92, 0x14, 0x62, 0x0f, 0xd7, 0x79, 0x7b,
	0x48, 0x27, 0x36, 0xf4, 0x59, 0x18, 0x8a, 0x02, 0x2e, 0xfa, 0x90, 0x47, 0xbf, 0x98, 0xc0, 0x31,
	0x34, 0xc5, 0x5e, 0xbe, 0xf1, 0x8b, 0x4c, 0x79, 0xf9, 0x16, 0x5f, 0x29, 0x5f, 0x99, 0x4a, 0xdc,
	0x09, 0x9f, 0xb8, 0x32, 0x25, 0x4b, 0xd8, 0xe3, 0x95, 0xa9, 0xc4, 0xf1, 0xda, 0x57, 0xa6, 0x3a,
	0x98, 0x2a, 0xb7, 0xfd, 0xba, 0x0b, 0xc3, 0x31, 0xe7, 0x13, 0x9d, 0x59, 0x4d, 0xf9, 0x90, 0x44,
	0x5f, 0x86, 0xf1, 0x04, 0xd7, 0xe3, 0x65, 0x1d, 0x2c, 0x5e, 0xe6, 0xa1, 0x58, 0xd6, 0xaf, 0xa0,
	0x8f, 0x77, 0xbb, 0xac, 0x71, 0x4f, 0x49, 0x8b, 0x1b, 0xd2, 0xc2, 0x15, 0x7b, 0x7f, 0x26, 0x8c,
	0x2e, 0x7b, 0x7f, 0x26, 0x46, 0x05, 0x3c, 0xe9, 0xff, 0x87, 0x52, 0x32, 0xde, 0xca, 0x37, 0xf0,
	0x57, 0x45, 0x0f, 0x08, 0xd3, 0xca, 0x67, 0x8e, 0xed, 0x89, 0xf6, 0xff, 0x1c, 0x3e, 0x68, 0x03,
	0xe9, 0xec, 0x0b, 0x77, 0xe1, 0x33, 0xb9, 0xb4, 0x0c, 0x00, 0xcf, 0xfa, 0x8f, 0x3d, 0x80, 0x24,
	0xea, 0x92, 0x4a, 0xfc, 0x8a, 0x38, 0x5d, 0xbc, 0x0b, 0x7f, 0x50, 0x77, 0x5f, 0x7e, 0xf3, 0xe4,
	0xa1, 0x30, 0xd9, 0xb7, 0x5a, 0xc2, 0x93, 0xee, 0xa2, 0xf3, 0xb2, 0x48, 0x9c, 0xcf, 0xb0, 0x8b,
	0x16, 0x5f, 0xd9, 0xe5, 0xe5, 0xef, 0x97, 0xf2, 0xff, 0x8e, 0xf7, 0x4b, 0xb3, 0x91, 0xf7, 0x4b,
	0x1d, 0x41, 0x40, 0xb4, 0x5c, 0x96, 0x97, 0x97, 0xcb, 0xf2, 0xac, 0x5c, 0x36, 0x1b, 0x29, 0x97,
	0x75, 0x32, 0x88, 0x31, 0xed, 0x6f, 0x3e, 0x85, 0xef, 0x5a, 0xf0, 0x1b, 0xf4, 0xad, 0xc3, 0x9d,
	0x98, 0xfb, 0x92, 0xaf, 0x5b, 0xf4, 0x05, 0x1a, 0xac, 0x39, 0x33, 0x66, 0x67, 0x4b, 0xca, 0x7c,
	0xb8, 0x16, 0xcc, 0x1c, 0x9b, 0xe3, 0x2c, 0x14, 0x78, 0xa6, 0x12, 0xe4, 0x9e, 0x6e, 0xad, 0x7f,
	0xe6, 0x37, 0x61, 0x5b, 0xea, 0xdb, 0x0c, 0x7e, 0x3f, 0xed, 0xc9, 0x29, 0x43, 0xdd, 0x4f, 0x7b,
	0x72, 0xdd, 0x43, 0xaa, 0x7e, 0x19, 0x06, 0x44, 0x43, 0x94, 0x1f, 0x02, 0xff, 0x4e, 0x81, 0xc1,
	0xed, 0xa6, 0xe9, 0xb4, 0x76, 0x2d, 0xfe, 0x03, 0xcf, 0x2a, 0xff, 0x89, 0x61, 0x34, 0xb6, 0xa8,
	0xb2, 0xd8, 0xa2, 0xca, 0xac, 0x5a, 0x95, 0x59, 0xb5, 0x2a, 0xb3, 0x6a, 0x95, 0xa5, 0x1d, 0xfa,
	0x3d, 0xe8, 0x0f, 0x27, 0x94, 0xe1, 0xbb, 0xcf, 0xdb, 0x50, 0x94, 0xe8, 0x01, 0x5d, 0x14, 0x71,
	0x38, 0xf6, 0x39, 0x3f, 0x96, 0xc6, 0x3e, 0x0c, 0xb2, 0xcd, 0x26, 0xe3, 0x7b, 0x06, 0x45, 0x49,
	0xc4, 0x38, 0xc9, 0xbe, 0x42, 0xc6, 0xaf, 0xff, 0x14, 0x86, 0xd9, 0x48, 0x95, 0x87, 0x21, 0x7a,
	0x2b, 0x9f, 0xf3, 0x7b, 0xb1, 0xc8, 0x5c, 0x36, 0x95, 0xcf, 0x7d, 0x92, 0x2f, 0x68, 0xb0, 0x91,
	0x93, 0x7c, 0xe1, 0x93, 0x7c, 0x49, 0x73, 0x47, 0x39, 0xc9, 0x97, 0x7a, 0x95, 0xbe, 0x6e, 0x89,
	0x4f, 0xe1, 0x0a, 0x9f, 0x40, 0x8c, 0xf2, 0xec, 0x01, 0x0d, 0x49, 0x23, 0x9a, 0x30, 0x22, 0xdb,
	0xad, 0xa3, 0x1b, 0xa0, 0xae, 0xd9, 0x0e, 0xed, 0xa0, 0x14, 0xdb, 0xd9, 0x73, 0xbd, 0xac, 0xd9,
	0x0e, 0xa6, 0x36, 0x5f, 0xc7, 0x5e, 0xe9, 0xca, 0xa8, 0xcd, 0xd7, 0xfa, 0x0a, 0x4c, 0x24, 0x96,
	0x09, 0xd0, 0x35, 0x7e, 0xe6, 0x1a, 0x3f, 0x73, 0xa1, 0x9a, 0xe0, 0x13, 0x19, 0xbf, 0xe8, 0x81,
	0x91, 0x55, 0xfb, 0xdb, 0x43, 0xbb, 0xb6, 0x6f, 0x3a, 0xb5, 0xba, 0xed, 0xec, 0xe1, 0x63, 0x25,
	0x4d, 0x74, 0x1b, 0x20, 0x3c, 0xba, 0x81, 0xf0, 0xfa, 0x63, 0xc7, 0x45, 0x4a, 0xc5, 0x68, 0x73,
	0xa3, 0x7e, 0xac, 0x77, 0xa1, 0x19, 0xc8, 0xb1, 0xe3, 0xda, 0x88, 0x7c, 0x53, 0x21, 0x9e, 0xe7,
	0x2e, 0x0d, 0x8b, 0x8d, 0x84, 0xeb, 0x09, 0x0c, 0x46, 0xee, 0x5a, 0x40, 0x58, 0x0e, 0xf2, 0xab,
	0x19, 0x4a, 0x9a, 0xf4, 0x19, 0xe9, 0x6a, 0x09, 0xfa, 0x85, 0x8f, 0xd2, 0x11, 0x23, 0x8e, 0x7d,
	0xbf, 0x5e, 0x1a, 0x93, 0x3c, 0x21, 0x9d, 0xdc, 0x06, 0x08, 0xcf, 0xc0, 0x12, 0x09, 0xc4, 0x0e,
	0xca, 0x12, 0x09, 0x44, 0x8e, 0xca, 0xea, 0x5d, 0xa8, 0x0c, 0xef, 0x31, 0x6d, 0x60, 0x24, 0x14,
	0x8f, 0x2d, 0x96, 0x86, 0x84, 0xb6, 0x60, 0xf9, 0x91, 0xeb, 0x0b, 0xc8, 0xf2, 0xe5, 0xb7, 0x1d,
	0x90, 0xe5, 0xcb, 0xee, 0x3b, 0x20, 0xcb, 0x17, 0x8e, 0xd3, 0x22, 0x8e, 0x58, 0x3c, 0x8e, 0x4b,
	0x96, 0x1f, 0x3f, 0x7b, 0xab, 0x77, 0x19, 0x3f, 0xcf, 0xc3, 0xd9, 0x55, 0xf7, 0xd5, 0xaa, 0x75,
	0x64, 0xd5, 0x4f, 0x2d, 0xe4, 0xd4, 0x42, 0x62, 0x16, 0xe2, 0x2b, 0x91, 0x1d, 0xe7, 0x25, 0x4a,
	0x8c, 0x9c, 0x6e, 0x26, 0x4a, 0x14, 0x4e, 0xfc, 0x12, 0x2e, 0x76, 0x78, 0x9e, 0x70, 0x45, 0xee,
	0x12, 0x20, 0x5c, 0xc2, 0xf9, 0x7a, 0xc2, 0xc5, 0xae, 0x0d, 0x21, 0x5c, 0x91, 0x0b, 0x52, 0x08,
	0x97, 0x70, 0xb3, 0x88, 0xde, 0x85, 0x2e, 0xfb, 0x21, 0xf8, 0x35, 0xc2, 0x10, 0x17, 0x9e, 0xc9,
	0x2d, 0xf5, 0x05, 0xbf, 0x09, 0xd9, 0x14, 0xf4, 0xac, 0xb9, 0x47, 0x16, 0xc2, 0x79, 0x07, 0x77,
	0x30, 0xac, 0xd4, 0x1f, 0x36, 0x10, 0xca, 0xfb, 0xd0, 0xc7, 0x9f, 0xff, 0x43, 0xe3, 0x44, 0x38,
	0xb1, 0x23, 0x85, 0xa5, 0xd1, 0xf8, 0x83, 0x40, 0xf2, 0xc2, 0xd9, 0x3d, 0x22, 0x79, 0xd9, 0x81,
	0x40, 0x22, 0xf9, 0xf8, 0x41, 0x3f, 0x62, 0x09, 0x91, 0x13, 0xe9, 0xc4, 0x12, 0xe4, 0xe7, 0xdf,
	0x4b, 0x9a, 0xf4, 0x59, 0x60, 0xc3, 0xe1, 0x7d, 0x20, 0xc4, 0x86, 0x63, 0xb7, 0x9f, 0x10, 0x1b,
	0x8e, 0x5c, 0x1b, 0xa2, 0x77, 0xa1, 0x65, 0x18, 0x10, 0xaf, 0xa8, 0x40, 0xb8, 0x7c, 0x2b, 0xbd,
	0x02, 0xa3, 0x34, 0x2e, 0x7b, 0x14, 0xc8, 0xff, 0x85, 0x69, 0x7b, 0x44, 0xfe, 0xdc, 0xdd, 0x22,
	0x44, 0xfe, 0xc1, 0x45, 0x22, 0x7a, 0x97, 0xf1, 0x7d, 0x0f, 0x9c, 0x7b, 0x6c, 0xef, 0xed, 0x9f,
	0x46, 0xa5, 0xd3, 0xa8, 0x94, 0x1c, 0x95, 0x58, 0xd6, 0x4c, 0x94, 0x18, 0x49, 0xea, 0x89, 0x12,
	0x85, 0xc4, 0x5a, 0xef, 0x32, 0x7e, 0x3b, 0x04, 0x67, 0x1f, 0xbd, 0xf6, 0x2c, 0xa7, 0x66, 0xd5,
	0x4e, 0xed, 0xea, 0xd4, 0xae, 0x4e, 0xd1, 0xee, 0x14, 0xed, 0xde, 0x11, 0xda, 0x5d, 0x87, 0x5e,
	0x7c, 0x96, 0x13, 0x61, 0xab, 0xe7, 0x8f, 0x79, 0x96, 0x06, 0xb8, 0x16, 0x42, 0xbc, 0x89, 0x8f,
	0xd7, 0x46, 0x2e, 0x44, 0x40, 0xe7, 0x98, 0xaf, 0x4b, 0xaf, 0x56, 0x28, 0xbd, 0x9f, 0xf4, 0x38,
	0x50, 0x2b, 0x7f, 0x46, 0x98, 0xa8, 0x55, 0x72, 0xc2, 0x98, 0xa8, 0x35, 0x76, 0x9c, 0x58, 0xef,
	0x42, 0xab, 0xf8, 0x68, 0xae, 0x70, 0xf5, 0x05, 0x62, 0x83, 0xca, 0x6e, 0xdd, 0x28, 0x4d, 0xc8,
	0x1f, 0x92, 0xde, 0xe6, 0x21, 0x1f, 0x1c, 0xea, 0x45, 0x23, 0x94, 0x52, 0x38, 0xf7, 0x5b, 0x42,
	0x91, 0x56, 0xc2, 0xa8, 0x43, 0xf7, 0x8a, 0x8b, 0xb0, 0xd9, 0x06, 0xe7, 0xac, 0x4b, 0x05, 0xf6,
	0x33, 0xe8, 0x3c, 0xb8, 0x2c, 0x80, 0x74, 0x1e, 0xbd, 0x4f, 0x80, 0x74, 0x2e, 0xde, 0x28, 0x40,
	0x7d, 0x90, 0x5e, 0x93, 0x45, 0x7d, 0x50, 0xbc, 0x47, 0x8b, 0xfa, 0x20, 0x7f, 0x93, 0x96, 0xde,
	0x85, 0xee, 0x42, 0x81, 0xbb, 0x35, 0x03, 0x8d, 0x31, 0x3f, 0x15, 0x4f, 0x0e, 0x97, 0x46, 0x62,
	0xed, 0x82, 0xe3, 0xfb, 0x02, 0x0f, 0x1d, 0x9f, 0xbb, 0x17, 0x24, 0x74, 0xfc, 0xe0, 0x0a, 0x10,
	0x1a, 0x5d, 0xc9, 0x89, 0x77, 0x1a, 0x5d, 0x85, 0x43, 0xf6, 0x34, 0xba, 0x72, 0x47, 0xe2, 0x49,
	0x10, 0x58, 0x6f, 0x58, 0x0e, 0x09, 0x02, 0xdc, 0xb5, 0x2b, 0x24, 0x08, 0x04, 0x17, 0xaf, 0x10,
	0x5d, 0x6f, 0x49, 0x75, 0xbd, 0x95, 0xa6, 0xeb, 0xad, 0x04, 0x5d, 0x4f, 0x41, 0xcf, 0x96, 0xe7,
	0x36, 0xc8, 0xb8, 0xdc, 0x39, 0x7b, 0x32, 0x6e, 0x70, 0xd2, 0x9e, 0x84, 0x0e, 0xe1, 0x1c, 0x35,
	0x09, 0x1d, 0xb2, 0x73, 0xd8, 0x24, 0x74, 0xc4, 0x0f, 0x5d, 0xf3, 0xfe, 0x8e, 0x25, 0xca, 0xf9,
	0x3b, 0x2f, 0xd3, 0x62, 0xb4, 0xf9, 0x84, 0x59, 0xe9, 0xce, 0x19, 0x7c, 0xe9, 0x65, 0xe5, 0x5f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x2b, 0xb1, 0x70, 0x56, 0x03, 0x53, 0x00, 0x00,
}
