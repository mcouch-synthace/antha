// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/antha-lang/antha/driver/antha_human_v1/human.proto

/*
Package antha_human_v1 is a generated protocol buffer package.

It is generated from these files:
	github.com/antha-lang/antha/driver/antha_human_v1/human.proto

It has these top-level messages:
	HumanRequest
	HumanResponse
*/
package antha_human_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HumanRequest struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *HumanRequest) Reset()                    { *m = HumanRequest{} }
func (m *HumanRequest) String() string            { return proto.CompactTextString(m) }
func (*HumanRequest) ProtoMessage()               {}
func (*HumanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HumanRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type HumanResponse struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *HumanResponse) Reset()                    { *m = HumanResponse{} }
func (m *HumanResponse) String() string            { return proto.CompactTextString(m) }
func (*HumanResponse) ProtoMessage()               {}
func (*HumanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HumanResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*HumanRequest)(nil), "antha.human.v1.HumanRequest")
	proto.RegisterType((*HumanResponse)(nil), "antha.human.v1.HumanResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Human service

type HumanClient interface {
	Human(ctx context.Context, in *HumanRequest, opts ...grpc.CallOption) (*HumanResponse, error)
}

type humanClient struct {
	cc *grpc.ClientConn
}

func NewHumanClient(cc *grpc.ClientConn) HumanClient {
	return &humanClient{cc}
}

func (c *humanClient) Human(ctx context.Context, in *HumanRequest, opts ...grpc.CallOption) (*HumanResponse, error) {
	out := new(HumanResponse)
	err := grpc.Invoke(ctx, "/antha.human.v1.Human/Human", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Human service

type HumanServer interface {
	Human(context.Context, *HumanRequest) (*HumanResponse, error)
}

func RegisterHumanServer(s *grpc.Server, srv HumanServer) {
	s.RegisterService(&_Human_serviceDesc, srv)
}

func _Human_Human_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HumanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HumanServer).Human(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antha.human.v1.Human/Human",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HumanServer).Human(ctx, req.(*HumanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Human_serviceDesc = grpc.ServiceDesc{
	ServiceName: "antha.human.v1.Human",
	HandlerType: (*HumanServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Human",
			Handler:    _Human_Human_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/antha-lang/antha/driver/antha_human_v1/human.proto",
}

func init() {
	proto.RegisterFile("github.com/antha-lang/antha/driver/antha_human_v1/human.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x4d, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcc, 0x2b, 0xc9, 0x48, 0xd4, 0xcd, 0x49, 0xcc,
	0x4b, 0x87, 0x30, 0xf5, 0x53, 0x8a, 0x32, 0xcb, 0x52, 0x8b, 0x20, 0x9c, 0xf8, 0x8c, 0xd2, 0xdc,
	0xc4, 0xbc, 0xf8, 0x32, 0x43, 0x7d, 0x30, 0x43, 0xaf, 0xa0, 0x28, 0xbf, 0x24, 0x5f, 0x88, 0x0f,
	0x2c, 0xa7, 0x07, 0x11, 0x2a, 0x33, 0x54, 0x52, 0xe2, 0xe2, 0xf1, 0x00, 0xb1, 0x83, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0x52, 0x12, 0x4b, 0x12, 0x25, 0x18, 0x15, 0x18,
	0x35, 0x78, 0x82, 0xc0, 0x6c, 0x25, 0x65, 0x2e, 0x5e, 0xa8, 0x9a, 0xe2, 0x82, 0xfc, 0xbc, 0xe2,
	0x54, 0x6c, 0x8a, 0x8c, 0xfc, 0xb9, 0x58, 0xc1, 0x8a, 0x84, 0xdc, 0x60, 0x0c, 0x19, 0x3d, 0x54,
	0xbb, 0xf4, 0x90, 0x2d, 0x92, 0x92, 0xc5, 0x21, 0x0b, 0xb1, 0x42, 0x89, 0x21, 0x89, 0x0d, 0xec,
	0x60, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x59, 0xd2, 0xf0, 0x8a, 0xf1, 0x00, 0x00, 0x00,
}
